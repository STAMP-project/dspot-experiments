/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ignite.internal.processors.hadoop.impl.igfs;


import java.net.URI;
import org.apache.hadoop.fs.FSDataOutputStream;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;
import org.junit.Test;


/**
 * IGFS Hadoop file system Ignite client -based self test for PROXY mode.
 */
public class IgniteHadoopFileSystemClientBasedOpenTest extends GridCommonAbstractTest {
    /**
     * Config root path.
     */
    private static final String[] CONFIGS = new String[]{ "modules/hadoop/src/test/config/hadoop-fs-open-test/grid-0.xml", "modules/hadoop/src/test/config/hadoop-fs-open-test/grid-1.xml", "modules/hadoop/src/test/config/hadoop-fs-open-test/grid-2.xml" };

    /**
     * Nodes types.
     */
    private static IgniteHadoopFileSystemClientBasedOpenTest.NodeType[][] nodesTypes = new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[][]{ new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME }, new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.LOCAL_SAME_NAME } };

    /**
     * Test threads count.
     */
    private static final int THREADS_COUNT = 20;

    /**
     * Iterations count.
     */
    private static final int ITERATIONS = 10;

    /**
     * Iterations count.
     */
    private static boolean skipInProc;

    /**
     *
     *
     * @throws Exception
     * 		If failed.
     */
    @Test
    public void testFsOpenMultithreaded() throws Exception {
        IgniteHadoopFileSystemClientBasedOpenTest.skipInProc = false;
        checkFsOpenWithAllNodesTypes();
    }

    /**
     *
     *
     * @throws Exception
     * 		If failed.
     */
    @Test
    public void testFsOpenMultithreadedSkipInProc() throws Exception {
        IgniteHadoopFileSystemClientBasedOpenTest.skipInProc = true;
        checkFsOpenWithAllNodesTypes();
    }

    /**
     *
     *
     * @throws Exception
     * 		If failed.
     */
    @Test
    public void testIgniteClientWithIgfsMisconfigure() throws Exception {
        startNodes(new IgniteHadoopFileSystemClientBasedOpenTest.NodeType[]{ IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE, IgniteHadoopFileSystemClientBasedOpenTest.NodeType.REMOTE });
        // Await clusters start
        Thread.sleep(10000);
        try {
            try (FileSystem fs = FileSystem.get(new URI("igfs://igfs-wrong-name@"), configurationWrongIgfs())) {
                FSDataOutputStream out = fs.create(new Path("igfs://igfs-wrong-name@/file"), true);
                assert false : "Exception must be thrown";
            } catch (Exception e) {
                assertTrue(e.getMessage().contains("Ignite client node doesn't have IGFS with the given name: igfs-wrong-name"));
            }
        } finally {
            stopAllGrids();
        }
    }

    /**
     * Node type.
     */
    enum NodeType {

        /**
         * Remote node.
         */
        REMOTE,
        /**
         * Node in the test VM.
         */
        LOCAL,
        /**
         * Node in the test VM with the name equals to client node config.
         */
        LOCAL_SAME_NAME;}
}

