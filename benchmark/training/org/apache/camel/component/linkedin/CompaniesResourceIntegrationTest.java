/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Camel Api Route test generated by camel-component-util-maven-plugin
 * Generated on: Wed Jul 09 19:57:10 PDT 2014
 */
package org.apache.camel.component.linkedin;


import EventType.STATUS_UPDATE;
import java.util.HashMap;
import java.util.Map;
import org.apache.camel.component.linkedin.api.model.Companies;
import org.apache.camel.component.linkedin.api.model.Company;
import org.apache.camel.component.linkedin.api.model.IsCompanyShareEnabled;
import org.apache.camel.component.linkedin.api.model.NumFollowers;
import org.apache.camel.component.linkedin.api.model.Updates;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


/**
 * Test class for {@link org.apache.camel.component.linkedin.api.CompaniesResource} APIs.
 */
public class CompaniesResourceIntegrationTest extends AbstractLinkedInTestSupport {
    private static final Logger LOG = LoggerFactory.getLogger(CompaniesResourceIntegrationTest.class);

    private static final String PATH_PREFIX = "companies";

    private static final Long TEST_COMPANY_ID = 1337L;

    @Test
    public void testGetCompanies() throws Exception {
        final Map<String, Object> headers = new HashMap<>();
        // use defaults
        // parameter type is String
        // headers.put("CamelLinkedIn.fields", null);
        // parameter type is String
        headers.put("CamelLinkedIn.email_domain", "linkedin.com");
        // parameter type is Boolean
        // headers.put("CamelLinkedIn.is_company_admin", null);
        final Companies result = requestBodyAndHeaders("direct://GETCOMPANIES", null, headers);
        assertNotNull("getCompanies result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("getCompanies: " + result));
    }

    @Test
    public void testGetCompanyById() throws Exception {
        final Map<String, Object> headers = new HashMap<>();
        headers.put("CamelLinkedIn.company_id", CompaniesResourceIntegrationTest.TEST_COMPANY_ID);
        // use default value
        /* // parameter type is String
        headers.put("CamelLinkedIn.fields", null);
         */
        final Company result = requestBodyAndHeaders("direct://GETCOMPANYBYID", null, headers);
        assertNotNull("getCompanyById result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("getCompanyById: " + result));
    }

    @Test
    public void testGetCompanyByName() throws Exception {
        final Map<String, Object> headers = new HashMap<>();
        // parameter type is String
        headers.put("CamelLinkedIn.universal_name", "linkedin");
        // use default fields
        /* // parameter type is String
        headers.put("CamelLinkedIn.fields", null);
         */
        final Company result = requestBodyAndHeaders("direct://GETCOMPANYBYNAME", null, headers);
        assertNotNull("getCompanyByName result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("getCompanyByName: " + result));
    }

    @Test
    public void testGetCompanyUpdates() throws Exception {
        final Map<String, Object> headers = new HashMap<>();
        headers.put("CamelLinkedIn.company_id", CompaniesResourceIntegrationTest.TEST_COMPANY_ID);
        // parameter type is String
        // headers.put("CamelLinkedIn.fields", null);
        // parameter type is org.apache.camel.component.linkedin.api.model.Eventtype
        headers.put("CamelLinkedIn.event_type", STATUS_UPDATE);
        /* // parameter type is Long
        headers.put("CamelLinkedIn.start", null);
        // parameter type is Long
        headers.put("CamelLinkedIn.count", null);
         */
        final Updates result = requestBodyAndHeaders("direct://GETCOMPANYUPDATES", null, headers);
        assertNotNull("getCompanyUpdates result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("getCompanyUpdates: " + result));
    }

    @Test
    public void testGetNumberOfFollowers() throws Exception {
        final Map<String, Object> headers = new HashMap<>();
        headers.put("CamelLinkedIn.company_id", CompaniesResourceIntegrationTest.TEST_COMPANY_ID);
        // parameter type is java.util.List
        headers.put("CamelLinkedIn.geos", null);
        // parameter type is java.util.List
        headers.put("CamelLinkedIn.companySizes", null);
        // parameter type is java.util.List
        headers.put("CamelLinkedIn.jobFunc", null);
        // parameter type is java.util.List
        headers.put("CamelLinkedIn.industries", null);
        // parameter type is java.util.List
        headers.put("CamelLinkedIn.seniorities", null);
        final NumFollowers result = requestBodyAndHeaders("direct://GETNUMBEROFFOLLOWERS", null, headers);
        assertNotNull("getNumberOfFollowers result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("getNumberOfFollowers: " + result));
    }

    @Test
    public void testIsShareEnabled() throws Exception {
        // using long message body for single parameter "company_id"
        final IsCompanyShareEnabled result = requestBody("direct://ISSHAREENABLED", CompaniesResourceIntegrationTest.TEST_COMPANY_ID);
        assertNotNull("isShareEnabled result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("isShareEnabled: " + result));
    }

    @Test
    public void testIsViewerShareEnabled() throws Exception {
        // using long message body for single parameter "company_id"
        final IsCompanyShareEnabled result = requestBody("direct://ISVIEWERSHAREENABLED", CompaniesResourceIntegrationTest.TEST_COMPANY_ID);
        assertNotNull("isViewerShareEnabled result", result);
        CompaniesResourceIntegrationTest.LOG.debug(("isViewerShareEnabled: " + result));
    }
}

