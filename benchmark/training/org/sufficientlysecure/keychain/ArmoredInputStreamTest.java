package org.sufficientlysecure.keychain;


import org.bouncycastle.bcpg.ArmoredInputStream;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.sufficientlysecure.keychain.support.TestDataUtil;


@RunWith(KeychainTestRunner.class)
public class ArmoredInputStreamTest {
    @Test
    public void armoredInputStream__withDifferentLineEndings() throws Exception {
        // these are generated by GPG4USB, see https://github.com/gpg4usb/gpg4usb/issues/25
        ArmoredInputStream stream1 = new ArmoredInputStream(ArmoredInputStreamTest.class.getResourceAsStream("/armored_crcrlf.asc"));
        ArmoredInputStream stream2 = new ArmoredInputStream(ArmoredInputStreamTest.class.getResourceAsStream("/armored_crlf.asc"));
        ArmoredInputStream stream3 = new ArmoredInputStream(ArmoredInputStreamTest.class.getResourceAsStream("/armored_lf.asc"));
        Assert.assertEquals(1, stream1.getArmorHeaders().length);
        Assert.assertEquals("Comment: comment content", stream1.getArmorHeaders()[0]);
        Assert.assertEquals(1, stream2.getArmorHeaders().length);
        Assert.assertEquals("Comment: comment content", stream2.getArmorHeaders()[0]);
        Assert.assertEquals(1, stream3.getArmorHeaders().length);
        Assert.assertEquals("Comment: comment content", stream3.getArmorHeaders()[0]);
        byte[] data1 = TestDataUtil.readFully(stream1);
        byte[] data2 = TestDataUtil.readFully(stream2);
        byte[] data3 = TestDataUtil.readFully(stream3);
        Assert.assertArrayEquals(data1, data2);
        Assert.assertArrayEquals(data1, data3);
    }
}

