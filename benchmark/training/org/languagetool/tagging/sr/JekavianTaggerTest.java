/**
 * LanguageTool, a natural language style checker
 * Copyright (C) 2017 Daniel Naber (http://www.danielnaber.de)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
 * USA
 */
package org.languagetool.tagging.sr;


import java.io.IOException;
import org.junit.Test;
import org.languagetool.TestTools;


/**
 * Test for Serbian jekavian tagger
 *
 * @author Zolt?n Csala
 */
public class JekavianTaggerTest extends AbstractSerbianTaggerTest {
    /**
     * Special case for auxiliary verb "jesam" (I am)
     */
    @Test
    public void testTaggerJesam() throws IOException {
        assertHasLemmaAndPos("??", "?????", "GL:PM:PZ:3L:0J");
        assertHasLemmaAndPos("????", "?????", "GL:PM:PZ:2L:0J");
        assertHasLemmaAndPos("???", "?????", "GL:PM:PZ:1L:0M");
    }

    /**
     * Word that exists only in ??kavian dictionary
     */
    @Test
    public void testTaggerSvijet() throws Exception {
        assertHasLemmaAndPos("???????", "??????", "IM:ZA:MU:0J:VO");
        assertHasLemmaAndPos("????????", "??????", "IM:ZA:MU:0J:IN");
    }

    @Test
    public void testTagger() throws IOException {
        TestTools.myAssert("??? ?? ????? ??????.", "???/[????]ZM:PK:0:SR:0J:AK|???/[????]ZM:PK:0:SR:0J:NO -- ??/[?????]GL:PM:PZ:3L:0J -- ?????/[?????]PR:OP:PO:MU:0J:AK:ST|?????/[?????]PR:OP:PO:MU:0J:NO:NE|?????/[?????]PR:OP:PO:MU:0J:VO:NE -- ??????/[??????]IM:ZA:MU:0J:AK:ST|??????/[??????]IM:ZA:MU:0J:NO", getTokenizer(), getTagger());
        // Proof that Jekavian tagger does not tag Ekavian words
        TestTools.myAssert("??? ?? ??? ???? ????, ???? ?????, ???? ????.", "???/[???]IM:ZA:ZE:0J:NO|???/[???]IM:ZA:ZE:0M:GE -- ??/[?????]GL:PM:PZ:3L:0J -- ???/[?????]PR:OP:PO:MU:0J:VO:NE -- ????/[????]ZM:PK:0:MU:0J:AK:ST|????/[????]ZM:PK:0:MU:0J:NO -- ????/[????]PR:OP:PO:MU:0J:AK:ST|????/[????]PR:OP:PO:MU:0J:NO:NE|????/[????]PR:OP:PO:MU:0J:VO:NE -- ????/[null]null -- ?????/[?????]IM:ZA:MU:0J:AK:ST|?????/[?????]IM:ZA:MU:0J:NO -- ????/[null]null -- ????/[????]PR:OP:PO:MU:0J:AK:ST|????/[????]PR:OP:PO:MU:0J:NO:NE|????/[????]PR:OP:PO:MU:0J:VO:NE", getTokenizer(), getTagger());
    }
}

