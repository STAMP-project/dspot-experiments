/**
 * Copyright (C) 2015 RoboVM AB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.robovm.rt.bro;


import org.junit.Test;

import static Library.INTERNAL;


/**
 * Autogenerated test that tests passing and returning structs {@link ByVal}.
 */
@SuppressWarnings("unused")
@Library(INTERNAL)
public class PassReturnByValTest {
    static {
        Bro.bind(PassReturnByValTest.class);
    }

    static class S1_0 extends Struct<PassReturnByValTest.S1_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_0 m0_0(byte v);
    }

    static class S1_1 extends Struct<PassReturnByValTest.S1_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_1 m0_0(short v);
    }

    static class S1_2 extends Struct<PassReturnByValTest.S1_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_2 m0_0(int v);
    }

    static class S1_3 extends Struct<PassReturnByValTest.S1_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_3 m0_0(long v);
    }

    static class S1_4 extends Struct<PassReturnByValTest.S1_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_4 m0_0(float v);
    }

    static class S1_5 extends Struct<PassReturnByValTest.S1_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_5 m0_0(double v);
    }

    static class S1_6 extends Struct<PassReturnByValTest.S1_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S1_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S1_6 m0_1(byte v);
    }

    static class S2_0 extends Struct<PassReturnByValTest.S2_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S2_0 m1_0(byte v);
    }

    static class S2_1 extends Struct<PassReturnByValTest.S2_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S2_1 m1_0(short v);
    }

    static class S2_2 extends Struct<PassReturnByValTest.S2_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S2_2 m1_0(int v);
    }

    static class S2_3 extends Struct<PassReturnByValTest.S2_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S2_3 m1_0(long v);
    }

    static class S2_4 extends Struct<PassReturnByValTest.S2_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S2_4 m1_0(float v);
    }

    static class S2_5 extends Struct<PassReturnByValTest.S2_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S2_5 m1_0(double v);
    }

    static class S2_6 extends Struct<PassReturnByValTest.S2_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S2_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S2_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S2_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S2_6 m1_1(byte v);
    }

    static class S3_0 extends Struct<PassReturnByValTest.S3_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S3_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_0 m2_0(byte v);
    }

    static class S3_1 extends Struct<PassReturnByValTest.S3_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S3_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_1 m2_0(short v);
    }

    static class S3_2 extends Struct<PassReturnByValTest.S3_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S3_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_2 m2_0(int v);
    }

    static class S3_3 extends Struct<PassReturnByValTest.S3_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S3_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_3 m2_0(long v);
    }

    static class S3_4 extends Struct<PassReturnByValTest.S3_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S3_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_4 m2_0(float v);
    }

    static class S3_5 extends Struct<PassReturnByValTest.S3_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S3_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_5 m2_0(double v);
    }

    static class S3_6 extends Struct<PassReturnByValTest.S3_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S3_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S3_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S3_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S3_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S3_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S3_6 m2_1(byte v);
    }

    static class S4_0 extends Struct<PassReturnByValTest.S4_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S4_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S4_0 m3_0(byte v);
    }

    static class S4_1 extends Struct<PassReturnByValTest.S4_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S4_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S4_1 m3_0(short v);
    }

    static class S4_2 extends Struct<PassReturnByValTest.S4_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S4_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S4_2 m3_0(int v);
    }

    static class S4_3 extends Struct<PassReturnByValTest.S4_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S4_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S4_3 m3_0(long v);
    }

    static class S4_4 extends Struct<PassReturnByValTest.S4_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S4_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S4_4 m3_0(float v);
    }

    static class S4_5 extends Struct<PassReturnByValTest.S4_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S4_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S4_5 m3_0(double v);
    }

    static class S4_6 extends Struct<PassReturnByValTest.S4_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S4_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S4_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S4_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S4_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S4_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S4_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S4_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S4_6 m3_1(byte v);
    }

    static class S5_0 extends Struct<PassReturnByValTest.S5_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S5_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S5_0 m3_0(byte v);

        @StructMember(4)
        public native byte m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_0 m4_0(byte v);
    }

    static class S5_1 extends Struct<PassReturnByValTest.S5_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S5_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S5_1 m3_0(short v);

        @StructMember(4)
        public native short m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_1 m4_0(short v);
    }

    static class S5_2 extends Struct<PassReturnByValTest.S5_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S5_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S5_2 m3_0(int v);

        @StructMember(4)
        public native int m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_2 m4_0(int v);
    }

    static class S5_3 extends Struct<PassReturnByValTest.S5_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S5_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S5_3 m3_0(long v);

        @StructMember(4)
        public native long m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_3 m4_0(long v);
    }

    static class S5_4 extends Struct<PassReturnByValTest.S5_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S5_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S5_4 m3_0(float v);

        @StructMember(4)
        public native float m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_4 m4_0(float v);
    }

    static class S5_5 extends Struct<PassReturnByValTest.S5_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S5_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S5_5 m3_0(double v);

        @StructMember(4)
        public native double m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_5 m4_0(double v);
    }

    static class S5_6 extends Struct<PassReturnByValTest.S5_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S5_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S5_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S5_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S5_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S5_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S5_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S5_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S5_6 m3_1(byte v);

        @StructMember(8)
        public native double m4_0();

        @StructMember(8)
        public native PassReturnByValTest.S5_6 m4_0(double v);

        @StructMember(9)
        public native byte m4_1();

        @StructMember(9)
        public native PassReturnByValTest.S5_6 m4_1(byte v);
    }

    static class S6_0 extends Struct<PassReturnByValTest.S6_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S6_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S6_0 m3_0(byte v);

        @StructMember(4)
        public native byte m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_0 m4_0(byte v);

        @StructMember(5)
        public native byte m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S6_0 m5_0(byte v);
    }

    static class S6_1 extends Struct<PassReturnByValTest.S6_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S6_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S6_1 m3_0(short v);

        @StructMember(4)
        public native short m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_1 m4_0(short v);

        @StructMember(5)
        public native short m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S6_1 m5_0(short v);
    }

    static class S6_2 extends Struct<PassReturnByValTest.S6_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S6_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S6_2 m3_0(int v);

        @StructMember(4)
        public native int m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_2 m4_0(int v);

        @StructMember(5)
        public native int m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S6_2 m5_0(int v);
    }

    static class S6_3 extends Struct<PassReturnByValTest.S6_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S6_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S6_3 m3_0(long v);

        @StructMember(4)
        public native long m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_3 m4_0(long v);

        @StructMember(5)
        public native long m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S6_3 m5_0(long v);
    }

    static class S6_4 extends Struct<PassReturnByValTest.S6_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S6_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S6_4 m3_0(float v);

        @StructMember(4)
        public native float m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_4 m4_0(float v);

        @StructMember(5)
        public native float m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S6_4 m5_0(float v);
    }

    static class S6_5 extends Struct<PassReturnByValTest.S6_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S6_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S6_5 m3_0(double v);

        @StructMember(4)
        public native double m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_5 m4_0(double v);

        @StructMember(5)
        public native double m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S6_5 m5_0(double v);
    }

    static class S6_6 extends Struct<PassReturnByValTest.S6_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S6_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S6_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S6_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S6_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S6_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S6_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S6_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S6_6 m3_1(byte v);

        @StructMember(8)
        public native double m4_0();

        @StructMember(8)
        public native PassReturnByValTest.S6_6 m4_0(double v);

        @StructMember(9)
        public native byte m4_1();

        @StructMember(9)
        public native PassReturnByValTest.S6_6 m4_1(byte v);

        @StructMember(10)
        public native double m5_0();

        @StructMember(10)
        public native PassReturnByValTest.S6_6 m5_0(double v);

        @StructMember(11)
        public native byte m5_1();

        @StructMember(11)
        public native PassReturnByValTest.S6_6 m5_1(byte v);
    }

    static class S7_0 extends Struct<PassReturnByValTest.S7_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S7_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S7_0 m3_0(byte v);

        @StructMember(4)
        public native byte m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_0 m4_0(byte v);

        @StructMember(5)
        public native byte m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S7_0 m5_0(byte v);

        @StructMember(6)
        public native byte m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_0 m6_0(byte v);
    }

    static class S7_1 extends Struct<PassReturnByValTest.S7_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S7_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S7_1 m3_0(short v);

        @StructMember(4)
        public native short m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_1 m4_0(short v);

        @StructMember(5)
        public native short m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S7_1 m5_0(short v);

        @StructMember(6)
        public native short m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_1 m6_0(short v);
    }

    static class S7_2 extends Struct<PassReturnByValTest.S7_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S7_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S7_2 m3_0(int v);

        @StructMember(4)
        public native int m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_2 m4_0(int v);

        @StructMember(5)
        public native int m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S7_2 m5_0(int v);

        @StructMember(6)
        public native int m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_2 m6_0(int v);
    }

    static class S7_3 extends Struct<PassReturnByValTest.S7_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S7_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S7_3 m3_0(long v);

        @StructMember(4)
        public native long m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_3 m4_0(long v);

        @StructMember(5)
        public native long m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S7_3 m5_0(long v);

        @StructMember(6)
        public native long m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_3 m6_0(long v);
    }

    static class S7_4 extends Struct<PassReturnByValTest.S7_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S7_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S7_4 m3_0(float v);

        @StructMember(4)
        public native float m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_4 m4_0(float v);

        @StructMember(5)
        public native float m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S7_4 m5_0(float v);

        @StructMember(6)
        public native float m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_4 m6_0(float v);
    }

    static class S7_5 extends Struct<PassReturnByValTest.S7_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S7_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S7_5 m3_0(double v);

        @StructMember(4)
        public native double m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_5 m4_0(double v);

        @StructMember(5)
        public native double m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S7_5 m5_0(double v);

        @StructMember(6)
        public native double m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_5 m6_0(double v);
    }

    static class S7_6 extends Struct<PassReturnByValTest.S7_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S7_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S7_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S7_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S7_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S7_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S7_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S7_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S7_6 m3_1(byte v);

        @StructMember(8)
        public native double m4_0();

        @StructMember(8)
        public native PassReturnByValTest.S7_6 m4_0(double v);

        @StructMember(9)
        public native byte m4_1();

        @StructMember(9)
        public native PassReturnByValTest.S7_6 m4_1(byte v);

        @StructMember(10)
        public native double m5_0();

        @StructMember(10)
        public native PassReturnByValTest.S7_6 m5_0(double v);

        @StructMember(11)
        public native byte m5_1();

        @StructMember(11)
        public native PassReturnByValTest.S7_6 m5_1(byte v);

        @StructMember(12)
        public native double m6_0();

        @StructMember(12)
        public native PassReturnByValTest.S7_6 m6_0(double v);

        @StructMember(13)
        public native byte m6_1();

        @StructMember(13)
        public native PassReturnByValTest.S7_6 m6_1(byte v);
    }

    static class S8_0 extends Struct<PassReturnByValTest.S8_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S8_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S8_0 m3_0(byte v);

        @StructMember(4)
        public native byte m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_0 m4_0(byte v);

        @StructMember(5)
        public native byte m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S8_0 m5_0(byte v);

        @StructMember(6)
        public native byte m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_0 m6_0(byte v);

        @StructMember(7)
        public native byte m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S8_0 m7_0(byte v);
    }

    static class S8_1 extends Struct<PassReturnByValTest.S8_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S8_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S8_1 m3_0(short v);

        @StructMember(4)
        public native short m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_1 m4_0(short v);

        @StructMember(5)
        public native short m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S8_1 m5_0(short v);

        @StructMember(6)
        public native short m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_1 m6_0(short v);

        @StructMember(7)
        public native short m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S8_1 m7_0(short v);
    }

    static class S8_2 extends Struct<PassReturnByValTest.S8_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S8_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S8_2 m3_0(int v);

        @StructMember(4)
        public native int m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_2 m4_0(int v);

        @StructMember(5)
        public native int m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S8_2 m5_0(int v);

        @StructMember(6)
        public native int m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_2 m6_0(int v);

        @StructMember(7)
        public native int m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S8_2 m7_0(int v);
    }

    static class S8_3 extends Struct<PassReturnByValTest.S8_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S8_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S8_3 m3_0(long v);

        @StructMember(4)
        public native long m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_3 m4_0(long v);

        @StructMember(5)
        public native long m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S8_3 m5_0(long v);

        @StructMember(6)
        public native long m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_3 m6_0(long v);

        @StructMember(7)
        public native long m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S8_3 m7_0(long v);
    }

    static class S8_4 extends Struct<PassReturnByValTest.S8_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S8_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S8_4 m3_0(float v);

        @StructMember(4)
        public native float m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_4 m4_0(float v);

        @StructMember(5)
        public native float m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S8_4 m5_0(float v);

        @StructMember(6)
        public native float m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_4 m6_0(float v);

        @StructMember(7)
        public native float m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S8_4 m7_0(float v);
    }

    static class S8_5 extends Struct<PassReturnByValTest.S8_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S8_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S8_5 m3_0(double v);

        @StructMember(4)
        public native double m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_5 m4_0(double v);

        @StructMember(5)
        public native double m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S8_5 m5_0(double v);

        @StructMember(6)
        public native double m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_5 m6_0(double v);

        @StructMember(7)
        public native double m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S8_5 m7_0(double v);
    }

    static class S8_6 extends Struct<PassReturnByValTest.S8_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S8_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S8_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S8_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S8_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S8_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S8_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S8_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S8_6 m3_1(byte v);

        @StructMember(8)
        public native double m4_0();

        @StructMember(8)
        public native PassReturnByValTest.S8_6 m4_0(double v);

        @StructMember(9)
        public native byte m4_1();

        @StructMember(9)
        public native PassReturnByValTest.S8_6 m4_1(byte v);

        @StructMember(10)
        public native double m5_0();

        @StructMember(10)
        public native PassReturnByValTest.S8_6 m5_0(double v);

        @StructMember(11)
        public native byte m5_1();

        @StructMember(11)
        public native PassReturnByValTest.S8_6 m5_1(byte v);

        @StructMember(12)
        public native double m6_0();

        @StructMember(12)
        public native PassReturnByValTest.S8_6 m6_0(double v);

        @StructMember(13)
        public native byte m6_1();

        @StructMember(13)
        public native PassReturnByValTest.S8_6 m6_1(byte v);

        @StructMember(14)
        public native double m7_0();

        @StructMember(14)
        public native PassReturnByValTest.S8_6 m7_0(double v);

        @StructMember(15)
        public native byte m7_1();

        @StructMember(15)
        public native PassReturnByValTest.S8_6 m7_1(byte v);
    }

    static class S9_0 extends Struct<PassReturnByValTest.S9_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S9_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S9_0 m3_0(byte v);

        @StructMember(4)
        public native byte m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_0 m4_0(byte v);

        @StructMember(5)
        public native byte m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S9_0 m5_0(byte v);

        @StructMember(6)
        public native byte m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_0 m6_0(byte v);

        @StructMember(7)
        public native byte m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S9_0 m7_0(byte v);

        @StructMember(8)
        public native byte m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_0 m8_0(byte v);
    }

    static class S9_1 extends Struct<PassReturnByValTest.S9_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S9_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S9_1 m3_0(short v);

        @StructMember(4)
        public native short m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_1 m4_0(short v);

        @StructMember(5)
        public native short m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S9_1 m5_0(short v);

        @StructMember(6)
        public native short m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_1 m6_0(short v);

        @StructMember(7)
        public native short m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S9_1 m7_0(short v);

        @StructMember(8)
        public native short m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_1 m8_0(short v);
    }

    static class S9_2 extends Struct<PassReturnByValTest.S9_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S9_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S9_2 m3_0(int v);

        @StructMember(4)
        public native int m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_2 m4_0(int v);

        @StructMember(5)
        public native int m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S9_2 m5_0(int v);

        @StructMember(6)
        public native int m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_2 m6_0(int v);

        @StructMember(7)
        public native int m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S9_2 m7_0(int v);

        @StructMember(8)
        public native int m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_2 m8_0(int v);
    }

    static class S9_3 extends Struct<PassReturnByValTest.S9_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S9_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S9_3 m3_0(long v);

        @StructMember(4)
        public native long m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_3 m4_0(long v);

        @StructMember(5)
        public native long m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S9_3 m5_0(long v);

        @StructMember(6)
        public native long m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_3 m6_0(long v);

        @StructMember(7)
        public native long m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S9_3 m7_0(long v);

        @StructMember(8)
        public native long m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_3 m8_0(long v);
    }

    static class S9_4 extends Struct<PassReturnByValTest.S9_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S9_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S9_4 m3_0(float v);

        @StructMember(4)
        public native float m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_4 m4_0(float v);

        @StructMember(5)
        public native float m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S9_4 m5_0(float v);

        @StructMember(6)
        public native float m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_4 m6_0(float v);

        @StructMember(7)
        public native float m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S9_4 m7_0(float v);

        @StructMember(8)
        public native float m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_4 m8_0(float v);
    }

    static class S9_5 extends Struct<PassReturnByValTest.S9_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S9_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S9_5 m3_0(double v);

        @StructMember(4)
        public native double m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_5 m4_0(double v);

        @StructMember(5)
        public native double m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S9_5 m5_0(double v);

        @StructMember(6)
        public native double m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_5 m6_0(double v);

        @StructMember(7)
        public native double m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S9_5 m7_0(double v);

        @StructMember(8)
        public native double m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_5 m8_0(double v);
    }

    static class S9_6 extends Struct<PassReturnByValTest.S9_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S9_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S9_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S9_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S9_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S9_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S9_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S9_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S9_6 m3_1(byte v);

        @StructMember(8)
        public native double m4_0();

        @StructMember(8)
        public native PassReturnByValTest.S9_6 m4_0(double v);

        @StructMember(9)
        public native byte m4_1();

        @StructMember(9)
        public native PassReturnByValTest.S9_6 m4_1(byte v);

        @StructMember(10)
        public native double m5_0();

        @StructMember(10)
        public native PassReturnByValTest.S9_6 m5_0(double v);

        @StructMember(11)
        public native byte m5_1();

        @StructMember(11)
        public native PassReturnByValTest.S9_6 m5_1(byte v);

        @StructMember(12)
        public native double m6_0();

        @StructMember(12)
        public native PassReturnByValTest.S9_6 m6_0(double v);

        @StructMember(13)
        public native byte m6_1();

        @StructMember(13)
        public native PassReturnByValTest.S9_6 m6_1(byte v);

        @StructMember(14)
        public native double m7_0();

        @StructMember(14)
        public native PassReturnByValTest.S9_6 m7_0(double v);

        @StructMember(15)
        public native byte m7_1();

        @StructMember(15)
        public native PassReturnByValTest.S9_6 m7_1(byte v);

        @StructMember(16)
        public native double m8_0();

        @StructMember(16)
        public native PassReturnByValTest.S9_6 m8_0(double v);

        @StructMember(17)
        public native byte m8_1();

        @StructMember(17)
        public native PassReturnByValTest.S9_6 m8_1(byte v);
    }

    static class S10_0 extends Struct<PassReturnByValTest.S10_0> {
        @StructMember(0)
        public native byte m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_0 m0_0(byte v);

        @StructMember(1)
        public native byte m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S10_0 m1_0(byte v);

        @StructMember(2)
        public native byte m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_0 m2_0(byte v);

        @StructMember(3)
        public native byte m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S10_0 m3_0(byte v);

        @StructMember(4)
        public native byte m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_0 m4_0(byte v);

        @StructMember(5)
        public native byte m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S10_0 m5_0(byte v);

        @StructMember(6)
        public native byte m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_0 m6_0(byte v);

        @StructMember(7)
        public native byte m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S10_0 m7_0(byte v);

        @StructMember(8)
        public native byte m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_0 m8_0(byte v);

        @StructMember(9)
        public native byte m9_0();

        @StructMember(9)
        public native PassReturnByValTest.S10_0 m9_0(byte v);
    }

    static class S10_1 extends Struct<PassReturnByValTest.S10_1> {
        @StructMember(0)
        public native short m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_1 m0_0(short v);

        @StructMember(1)
        public native short m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S10_1 m1_0(short v);

        @StructMember(2)
        public native short m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_1 m2_0(short v);

        @StructMember(3)
        public native short m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S10_1 m3_0(short v);

        @StructMember(4)
        public native short m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_1 m4_0(short v);

        @StructMember(5)
        public native short m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S10_1 m5_0(short v);

        @StructMember(6)
        public native short m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_1 m6_0(short v);

        @StructMember(7)
        public native short m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S10_1 m7_0(short v);

        @StructMember(8)
        public native short m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_1 m8_0(short v);

        @StructMember(9)
        public native short m9_0();

        @StructMember(9)
        public native PassReturnByValTest.S10_1 m9_0(short v);
    }

    static class S10_2 extends Struct<PassReturnByValTest.S10_2> {
        @StructMember(0)
        public native int m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_2 m0_0(int v);

        @StructMember(1)
        public native int m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S10_2 m1_0(int v);

        @StructMember(2)
        public native int m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_2 m2_0(int v);

        @StructMember(3)
        public native int m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S10_2 m3_0(int v);

        @StructMember(4)
        public native int m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_2 m4_0(int v);

        @StructMember(5)
        public native int m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S10_2 m5_0(int v);

        @StructMember(6)
        public native int m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_2 m6_0(int v);

        @StructMember(7)
        public native int m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S10_2 m7_0(int v);

        @StructMember(8)
        public native int m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_2 m8_0(int v);

        @StructMember(9)
        public native int m9_0();

        @StructMember(9)
        public native PassReturnByValTest.S10_2 m9_0(int v);
    }

    static class S10_3 extends Struct<PassReturnByValTest.S10_3> {
        @StructMember(0)
        public native long m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_3 m0_0(long v);

        @StructMember(1)
        public native long m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S10_3 m1_0(long v);

        @StructMember(2)
        public native long m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_3 m2_0(long v);

        @StructMember(3)
        public native long m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S10_3 m3_0(long v);

        @StructMember(4)
        public native long m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_3 m4_0(long v);

        @StructMember(5)
        public native long m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S10_3 m5_0(long v);

        @StructMember(6)
        public native long m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_3 m6_0(long v);

        @StructMember(7)
        public native long m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S10_3 m7_0(long v);

        @StructMember(8)
        public native long m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_3 m8_0(long v);

        @StructMember(9)
        public native long m9_0();

        @StructMember(9)
        public native PassReturnByValTest.S10_3 m9_0(long v);
    }

    static class S10_4 extends Struct<PassReturnByValTest.S10_4> {
        @StructMember(0)
        public native float m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_4 m0_0(float v);

        @StructMember(1)
        public native float m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S10_4 m1_0(float v);

        @StructMember(2)
        public native float m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_4 m2_0(float v);

        @StructMember(3)
        public native float m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S10_4 m3_0(float v);

        @StructMember(4)
        public native float m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_4 m4_0(float v);

        @StructMember(5)
        public native float m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S10_4 m5_0(float v);

        @StructMember(6)
        public native float m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_4 m6_0(float v);

        @StructMember(7)
        public native float m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S10_4 m7_0(float v);

        @StructMember(8)
        public native float m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_4 m8_0(float v);

        @StructMember(9)
        public native float m9_0();

        @StructMember(9)
        public native PassReturnByValTest.S10_4 m9_0(float v);
    }

    static class S10_5 extends Struct<PassReturnByValTest.S10_5> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_5 m0_0(double v);

        @StructMember(1)
        public native double m1_0();

        @StructMember(1)
        public native PassReturnByValTest.S10_5 m1_0(double v);

        @StructMember(2)
        public native double m2_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_5 m2_0(double v);

        @StructMember(3)
        public native double m3_0();

        @StructMember(3)
        public native PassReturnByValTest.S10_5 m3_0(double v);

        @StructMember(4)
        public native double m4_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_5 m4_0(double v);

        @StructMember(5)
        public native double m5_0();

        @StructMember(5)
        public native PassReturnByValTest.S10_5 m5_0(double v);

        @StructMember(6)
        public native double m6_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_5 m6_0(double v);

        @StructMember(7)
        public native double m7_0();

        @StructMember(7)
        public native PassReturnByValTest.S10_5 m7_0(double v);

        @StructMember(8)
        public native double m8_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_5 m8_0(double v);

        @StructMember(9)
        public native double m9_0();

        @StructMember(9)
        public native PassReturnByValTest.S10_5 m9_0(double v);
    }

    static class S10_6 extends Struct<PassReturnByValTest.S10_6> {
        @StructMember(0)
        public native double m0_0();

        @StructMember(0)
        public native PassReturnByValTest.S10_6 m0_0(double v);

        @StructMember(1)
        public native byte m0_1();

        @StructMember(1)
        public native PassReturnByValTest.S10_6 m0_1(byte v);

        @StructMember(2)
        public native double m1_0();

        @StructMember(2)
        public native PassReturnByValTest.S10_6 m1_0(double v);

        @StructMember(3)
        public native byte m1_1();

        @StructMember(3)
        public native PassReturnByValTest.S10_6 m1_1(byte v);

        @StructMember(4)
        public native double m2_0();

        @StructMember(4)
        public native PassReturnByValTest.S10_6 m2_0(double v);

        @StructMember(5)
        public native byte m2_1();

        @StructMember(5)
        public native PassReturnByValTest.S10_6 m2_1(byte v);

        @StructMember(6)
        public native double m3_0();

        @StructMember(6)
        public native PassReturnByValTest.S10_6 m3_0(double v);

        @StructMember(7)
        public native byte m3_1();

        @StructMember(7)
        public native PassReturnByValTest.S10_6 m3_1(byte v);

        @StructMember(8)
        public native double m4_0();

        @StructMember(8)
        public native PassReturnByValTest.S10_6 m4_0(double v);

        @StructMember(9)
        public native byte m4_1();

        @StructMember(9)
        public native PassReturnByValTest.S10_6 m4_1(byte v);

        @StructMember(10)
        public native double m5_0();

        @StructMember(10)
        public native PassReturnByValTest.S10_6 m5_0(double v);

        @StructMember(11)
        public native byte m5_1();

        @StructMember(11)
        public native PassReturnByValTest.S10_6 m5_1(byte v);

        @StructMember(12)
        public native double m6_0();

        @StructMember(12)
        public native PassReturnByValTest.S10_6 m6_0(double v);

        @StructMember(13)
        public native byte m6_1();

        @StructMember(13)
        public native PassReturnByValTest.S10_6 m6_1(byte v);

        @StructMember(14)
        public native double m7_0();

        @StructMember(14)
        public native PassReturnByValTest.S10_6 m7_0(double v);

        @StructMember(15)
        public native byte m7_1();

        @StructMember(15)
        public native PassReturnByValTest.S10_6 m7_1(byte v);

        @StructMember(16)
        public native double m8_0();

        @StructMember(16)
        public native PassReturnByValTest.S10_6 m8_0(double v);

        @StructMember(17)
        public native byte m8_1();

        @StructMember(17)
        public native PassReturnByValTest.S10_6 m8_1(byte v);

        @StructMember(18)
        public native double m9_0();

        @StructMember(18)
        public native PassReturnByValTest.S10_6 m9_0(double v);

        @StructMember(19)
        public native byte m9_1();

        @StructMember(19)
        public native PassReturnByValTest.S10_6 m9_1(byte v);
    }

    @Test
    public void testSizeOf_S1_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S1_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S1_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S1_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S1_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S1_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S1_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S1_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S2_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S2_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S3_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S3_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S4_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S4_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S5_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S5_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S6_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S6_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S7_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S7_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S8_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S8_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S9_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S9_6(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_0() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_0(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_1() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_1(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_2() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_2(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_3() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_3(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_4() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_4(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_5() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_5(), sizeOf());
    }

    @Test
    public void testSizeOf_S10_6() {
        PassReturnByValTest.assertEquals(PassReturnByValTest.native_sizeof_S10_6(), sizeOf());
    }

    @Test
    public void testPassS1_0ByVal() {
        PassReturnByValTest.S1_0 s = new PassReturnByValTest.S1_0();
        s.m0_0(((byte) (34)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S1_0_m0_0(s));
    }

    @Test
    public void testPassS1_1ByVal() {
        PassReturnByValTest.S1_1 s = new PassReturnByValTest.S1_1();
        s.m0_0(((short) (9)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S1_1_m0_0(s));
    }

    @Test
    public void testPassS1_2ByVal() {
        PassReturnByValTest.S1_2 s = new PassReturnByValTest.S1_2();
        s.m0_0(45);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S1_2_m0_0(s));
    }

    @Test
    public void testPassS1_3ByVal() {
        PassReturnByValTest.S1_3 s = new PassReturnByValTest.S1_3();
        s.m0_0(12845L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S1_3_m0_0(s));
    }

    @Test
    public void testPassS1_4ByVal() {
        PassReturnByValTest.S1_4 s = new PassReturnByValTest.S1_4();
        s.m0_0(0.1234F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S1_4_m0_0(s));
    }

    @Test
    public void testPassS1_5ByVal() {
        PassReturnByValTest.S1_5 s = new PassReturnByValTest.S1_5();
        s.m0_0(0.1234);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S1_5_m0_0(s));
    }

    @Test
    public void testPassS1_6ByVal() {
        PassReturnByValTest.S1_6 s = new PassReturnByValTest.S1_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S1_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S1_6_m0_1(s));
    }

    @Test
    public void testPassS2_0ByVal() {
        PassReturnByValTest.S2_0 s = new PassReturnByValTest.S2_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S2_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S2_0_m1_0(s));
    }

    @Test
    public void testPassS2_1ByVal() {
        PassReturnByValTest.S2_1 s = new PassReturnByValTest.S2_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S2_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S2_1_m1_0(s));
    }

    @Test
    public void testPassS2_2ByVal() {
        PassReturnByValTest.S2_2 s = new PassReturnByValTest.S2_2();
        s.m0_0(45);
        s.m1_0(43828);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S2_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S2_2_m1_0(s));
    }

    @Test
    public void testPassS2_3ByVal() {
        PassReturnByValTest.S2_3 s = new PassReturnByValTest.S2_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S2_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S2_3_m1_0(s));
    }

    @Test
    public void testPassS2_4ByVal() {
        PassReturnByValTest.S2_4 s = new PassReturnByValTest.S2_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S2_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S2_4_m1_0(s));
    }

    @Test
    public void testPassS2_5ByVal() {
        PassReturnByValTest.S2_5 s = new PassReturnByValTest.S2_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S2_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S2_5_m1_0(s));
    }

    @Test
    public void testPassS2_6ByVal() {
        PassReturnByValTest.S2_6 s = new PassReturnByValTest.S2_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S2_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S2_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S2_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S2_6_m1_1(s));
    }

    @Test
    public void testPassS3_0ByVal() {
        PassReturnByValTest.S3_0 s = new PassReturnByValTest.S3_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S3_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S3_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S3_0_m2_0(s));
    }

    @Test
    public void testPassS3_1ByVal() {
        PassReturnByValTest.S3_1 s = new PassReturnByValTest.S3_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S3_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S3_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S3_1_m2_0(s));
    }

    @Test
    public void testPassS3_2ByVal() {
        PassReturnByValTest.S3_2 s = new PassReturnByValTest.S3_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S3_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S3_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S3_2_m2_0(s));
    }

    @Test
    public void testPassS3_3ByVal() {
        PassReturnByValTest.S3_3 s = new PassReturnByValTest.S3_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S3_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S3_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S3_3_m2_0(s));
    }

    @Test
    public void testPassS3_4ByVal() {
        PassReturnByValTest.S3_4 s = new PassReturnByValTest.S3_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S3_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S3_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S3_4_m2_0(s));
    }

    @Test
    public void testPassS3_5ByVal() {
        PassReturnByValTest.S3_5 s = new PassReturnByValTest.S3_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S3_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S3_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S3_5_m2_0(s));
    }

    @Test
    public void testPassS3_6ByVal() {
        PassReturnByValTest.S3_6 s = new PassReturnByValTest.S3_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S3_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S3_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S3_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S3_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S3_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S3_6_m2_1(s));
    }

    @Test
    public void testPassS4_0ByVal() {
        PassReturnByValTest.S4_0 s = new PassReturnByValTest.S4_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S4_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S4_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S4_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S4_0_m3_0(s));
    }

    @Test
    public void testPassS4_1ByVal() {
        PassReturnByValTest.S4_1 s = new PassReturnByValTest.S4_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S4_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S4_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S4_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S4_1_m3_0(s));
    }

    @Test
    public void testPassS4_2ByVal() {
        PassReturnByValTest.S4_2 s = new PassReturnByValTest.S4_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S4_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S4_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S4_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S4_2_m3_0(s));
    }

    @Test
    public void testPassS4_3ByVal() {
        PassReturnByValTest.S4_3 s = new PassReturnByValTest.S4_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S4_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S4_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S4_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S4_3_m3_0(s));
    }

    @Test
    public void testPassS4_4ByVal() {
        PassReturnByValTest.S4_4 s = new PassReturnByValTest.S4_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S4_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S4_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S4_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S4_4_m3_0(s));
    }

    @Test
    public void testPassS4_5ByVal() {
        PassReturnByValTest.S4_5 s = new PassReturnByValTest.S4_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S4_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S4_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S4_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S4_5_m3_0(s));
    }

    @Test
    public void testPassS4_6ByVal() {
        PassReturnByValTest.S4_6 s = new PassReturnByValTest.S4_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S4_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S4_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S4_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S4_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S4_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S4_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S4_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S4_6_m3_1(s));
    }

    @Test
    public void testPassS5_0ByVal() {
        PassReturnByValTest.S5_0 s = new PassReturnByValTest.S5_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        s.m4_0(((byte) (34)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S5_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S5_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S5_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S5_0_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S5_0_m4_0(s));
    }

    @Test
    public void testPassS5_1ByVal() {
        PassReturnByValTest.S5_1 s = new PassReturnByValTest.S5_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        s.m4_0(((short) (9)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S5_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S5_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S5_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S5_1_m3_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S5_1_m4_0(s));
    }

    @Test
    public void testPassS5_2ByVal() {
        PassReturnByValTest.S5_2 s = new PassReturnByValTest.S5_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        s.m4_0(45);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S5_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S5_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S5_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S5_2_m3_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S5_2_m4_0(s));
    }

    @Test
    public void testPassS5_3ByVal() {
        PassReturnByValTest.S5_3 s = new PassReturnByValTest.S5_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        s.m4_0(12845L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S5_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S5_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S5_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S5_3_m3_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S5_3_m4_0(s));
    }

    @Test
    public void testPassS5_4ByVal() {
        PassReturnByValTest.S5_4 s = new PassReturnByValTest.S5_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        s.m4_0(0.1234F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S5_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S5_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S5_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S5_4_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S5_4_m4_0(s));
    }

    @Test
    public void testPassS5_5ByVal() {
        PassReturnByValTest.S5_5 s = new PassReturnByValTest.S5_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        s.m4_0(0.1234);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S5_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S5_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S5_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S5_5_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S5_5_m4_0(s));
    }

    @Test
    public void testPassS5_6ByVal() {
        PassReturnByValTest.S5_6 s = new PassReturnByValTest.S5_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        s.m4_0(0.1234);
        s.m4_1(((byte) (83)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S5_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S5_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S5_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S5_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S5_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S5_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S5_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S5_6_m3_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S5_6_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S5_6_m4_1(s));
    }

    @Test
    public void testPassS6_0ByVal() {
        PassReturnByValTest.S6_0 s = new PassReturnByValTest.S6_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        s.m4_0(((byte) (34)));
        s.m5_0(((byte) (59)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S6_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S6_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S6_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S6_0_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S6_0_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S6_0_m5_0(s));
    }

    @Test
    public void testPassS6_1ByVal() {
        PassReturnByValTest.S6_1 s = new PassReturnByValTest.S6_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        s.m4_0(((short) (9)));
        s.m5_0(((short) (66)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S6_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S6_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S6_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S6_1_m3_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S6_1_m4_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S6_1_m5_0(s));
    }

    @Test
    public void testPassS6_2ByVal() {
        PassReturnByValTest.S6_2 s = new PassReturnByValTest.S6_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        s.m4_0(45);
        s.m5_0(43828);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S6_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S6_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S6_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S6_2_m3_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S6_2_m4_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S6_2_m5_0(s));
    }

    @Test
    public void testPassS6_3ByVal() {
        PassReturnByValTest.S6_3 s = new PassReturnByValTest.S6_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        s.m4_0(12845L);
        s.m5_0(682356595L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S6_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S6_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S6_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S6_3_m3_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S6_3_m4_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S6_3_m5_0(s));
    }

    @Test
    public void testPassS6_4ByVal() {
        PassReturnByValTest.S6_4 s = new PassReturnByValTest.S6_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        s.m4_0(0.1234F);
        s.m5_0(123.4567F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S6_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S6_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S6_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S6_4_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S6_4_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S6_4_m5_0(s));
    }

    @Test
    public void testPassS6_5ByVal() {
        PassReturnByValTest.S6_5 s = new PassReturnByValTest.S6_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        s.m4_0(0.1234);
        s.m5_0(123.4567);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S6_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S6_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S6_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S6_5_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S6_5_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S6_5_m5_0(s));
    }

    @Test
    public void testPassS6_6ByVal() {
        PassReturnByValTest.S6_6 s = new PassReturnByValTest.S6_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        s.m4_0(0.1234);
        s.m4_1(((byte) (83)));
        s.m5_0(123.4567);
        s.m5_1(((byte) (103)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S6_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S6_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S6_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S6_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S6_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S6_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S6_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S6_6_m3_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S6_6_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S6_6_m4_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S6_6_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S6_6_m5_1(s));
    }

    @Test
    public void testPassS7_0ByVal() {
        PassReturnByValTest.S7_0 s = new PassReturnByValTest.S7_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        s.m4_0(((byte) (34)));
        s.m5_0(((byte) (59)));
        s.m6_0(((byte) (101)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S7_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S7_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S7_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S7_0_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S7_0_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S7_0_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S7_0_m6_0(s));
    }

    @Test
    public void testPassS7_1ByVal() {
        PassReturnByValTest.S7_1 s = new PassReturnByValTest.S7_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        s.m4_0(((short) (9)));
        s.m5_0(((short) (66)));
        s.m6_0(((short) (2219)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S7_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S7_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S7_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S7_1_m3_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S7_1_m4_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S7_1_m5_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S7_1_m6_0(s));
    }

    @Test
    public void testPassS7_2ByVal() {
        PassReturnByValTest.S7_2 s = new PassReturnByValTest.S7_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        s.m4_0(45);
        s.m5_0(43828);
        s.m6_0(1687238);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S7_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S7_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S7_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S7_2_m3_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S7_2_m4_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S7_2_m5_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S7_2_m6_0(s));
    }

    @Test
    public void testPassS7_3ByVal() {
        PassReturnByValTest.S7_3 s = new PassReturnByValTest.S7_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        s.m4_0(12845L);
        s.m5_0(682356595L);
        s.m6_0(177196055709953L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S7_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S7_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S7_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S7_3_m3_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S7_3_m4_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S7_3_m5_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S7_3_m6_0(s));
    }

    @Test
    public void testPassS7_4ByVal() {
        PassReturnByValTest.S7_4 s = new PassReturnByValTest.S7_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        s.m4_0(0.1234F);
        s.m5_0(123.4567F);
        s.m6_0(123456.79F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S7_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S7_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S7_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S7_4_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S7_4_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S7_4_m5_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S7_4_m6_0(s));
    }

    @Test
    public void testPassS7_5ByVal() {
        PassReturnByValTest.S7_5 s = new PassReturnByValTest.S7_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        s.m4_0(0.1234);
        s.m5_0(123.4567);
        s.m6_0(123456.789);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S7_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S7_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S7_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S7_5_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S7_5_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S7_5_m5_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S7_5_m6_0(s));
    }

    @Test
    public void testPassS7_6ByVal() {
        PassReturnByValTest.S7_6 s = new PassReturnByValTest.S7_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        s.m4_0(0.1234);
        s.m4_1(((byte) (83)));
        s.m5_0(123.4567);
        s.m5_1(((byte) (103)));
        s.m6_0(123456.789);
        s.m6_1(((byte) (189)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S7_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S7_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S7_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S7_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S7_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S7_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S7_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S7_6_m3_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S7_6_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S7_6_m4_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S7_6_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S7_6_m5_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S7_6_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S7_6_m6_1(s));
    }

    @Test
    public void testPassS8_0ByVal() {
        PassReturnByValTest.S8_0 s = new PassReturnByValTest.S8_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        s.m4_0(((byte) (34)));
        s.m5_0(((byte) (59)));
        s.m6_0(((byte) (101)));
        s.m7_0(((byte) (158)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S8_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S8_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S8_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S8_0_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S8_0_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S8_0_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S8_0_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S8_0_m7_0(s));
    }

    @Test
    public void testPassS8_1ByVal() {
        PassReturnByValTest.S8_1 s = new PassReturnByValTest.S8_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        s.m4_0(((short) (9)));
        s.m5_0(((short) (66)));
        s.m6_0(((short) (2219)));
        s.m7_0(((short) (42233)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S8_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S8_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S8_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S8_1_m3_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S8_1_m4_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S8_1_m5_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S8_1_m6_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S8_1_m7_0(s));
    }

    @Test
    public void testPassS8_2ByVal() {
        PassReturnByValTest.S8_2 s = new PassReturnByValTest.S8_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        s.m4_0(45);
        s.m5_0(43828);
        s.m6_0(1687238);
        s.m7_0(-441768328);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S8_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S8_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S8_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S8_2_m3_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S8_2_m4_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S8_2_m5_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S8_2_m6_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S8_2_m7_0(s));
    }

    @Test
    public void testPassS8_3ByVal() {
        PassReturnByValTest.S8_3 s = new PassReturnByValTest.S8_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        s.m4_0(12845L);
        s.m5_0(682356595L);
        s.m6_0(177196055709953L);
        s.m7_0(7041571270605544278L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S8_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S8_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S8_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S8_3_m3_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S8_3_m4_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S8_3_m5_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S8_3_m6_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S8_3_m7_0(s));
    }

    @Test
    public void testPassS8_4ByVal() {
        PassReturnByValTest.S8_4 s = new PassReturnByValTest.S8_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        s.m4_0(0.1234F);
        s.m5_0(123.4567F);
        s.m6_0(123456.79F);
        s.m7_0(1.2345679E7F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S8_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S8_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S8_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S8_4_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S8_4_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S8_4_m5_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S8_4_m6_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S8_4_m7_0(s));
    }

    @Test
    public void testPassS8_5ByVal() {
        PassReturnByValTest.S8_5 s = new PassReturnByValTest.S8_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        s.m4_0(0.1234);
        s.m5_0(123.4567);
        s.m6_0(123456.789);
        s.m7_0(1.234567890123E7);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S8_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S8_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S8_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S8_5_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S8_5_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S8_5_m5_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S8_5_m6_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S8_5_m7_0(s));
    }

    @Test
    public void testPassS8_6ByVal() {
        PassReturnByValTest.S8_6 s = new PassReturnByValTest.S8_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        s.m4_0(0.1234);
        s.m4_1(((byte) (83)));
        s.m5_0(123.4567);
        s.m5_1(((byte) (103)));
        s.m6_0(123456.789);
        s.m6_1(((byte) (189)));
        s.m7_0(1.234567890123E7);
        s.m7_1(((byte) (247)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S8_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S8_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S8_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S8_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S8_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S8_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S8_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S8_6_m3_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S8_6_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S8_6_m4_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S8_6_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S8_6_m5_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S8_6_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S8_6_m6_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S8_6_m7_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S8_6_m7_1(s));
    }

    @Test
    public void testPassS9_0ByVal() {
        PassReturnByValTest.S9_0 s = new PassReturnByValTest.S9_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        s.m4_0(((byte) (34)));
        s.m5_0(((byte) (59)));
        s.m6_0(((byte) (101)));
        s.m7_0(((byte) (158)));
        s.m8_0(((byte) (34)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S9_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S9_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S9_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S9_0_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S9_0_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S9_0_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S9_0_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S9_0_m7_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S9_0_m8_0(s));
    }

    @Test
    public void testPassS9_1ByVal() {
        PassReturnByValTest.S9_1 s = new PassReturnByValTest.S9_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        s.m4_0(((short) (9)));
        s.m5_0(((short) (66)));
        s.m6_0(((short) (2219)));
        s.m7_0(((short) (42233)));
        s.m8_0(((short) (9)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S9_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S9_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S9_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S9_1_m3_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S9_1_m4_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S9_1_m5_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S9_1_m6_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S9_1_m7_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S9_1_m8_0(s));
    }

    @Test
    public void testPassS9_2ByVal() {
        PassReturnByValTest.S9_2 s = new PassReturnByValTest.S9_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        s.m4_0(45);
        s.m5_0(43828);
        s.m6_0(1687238);
        s.m7_0(-441768328);
        s.m8_0(45);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S9_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S9_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S9_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S9_2_m3_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S9_2_m4_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S9_2_m5_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S9_2_m6_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S9_2_m7_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S9_2_m8_0(s));
    }

    @Test
    public void testPassS9_3ByVal() {
        PassReturnByValTest.S9_3 s = new PassReturnByValTest.S9_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        s.m4_0(12845L);
        s.m5_0(682356595L);
        s.m6_0(177196055709953L);
        s.m7_0(7041571270605544278L);
        s.m8_0(12845L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S9_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S9_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S9_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S9_3_m3_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S9_3_m4_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S9_3_m5_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S9_3_m6_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S9_3_m7_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S9_3_m8_0(s));
    }

    @Test
    public void testPassS9_4ByVal() {
        PassReturnByValTest.S9_4 s = new PassReturnByValTest.S9_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        s.m4_0(0.1234F);
        s.m5_0(123.4567F);
        s.m6_0(123456.79F);
        s.m7_0(1.2345679E7F);
        s.m8_0(0.1234F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S9_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S9_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S9_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S9_4_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S9_4_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S9_4_m5_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S9_4_m6_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S9_4_m7_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S9_4_m8_0(s));
    }

    @Test
    public void testPassS9_5ByVal() {
        PassReturnByValTest.S9_5 s = new PassReturnByValTest.S9_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        s.m4_0(0.1234);
        s.m5_0(123.4567);
        s.m6_0(123456.789);
        s.m7_0(1.234567890123E7);
        s.m8_0(0.1234);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S9_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S9_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S9_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S9_5_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S9_5_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S9_5_m5_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S9_5_m6_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S9_5_m7_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S9_5_m8_0(s));
    }

    @Test
    public void testPassS9_6ByVal() {
        PassReturnByValTest.S9_6 s = new PassReturnByValTest.S9_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        s.m4_0(0.1234);
        s.m4_1(((byte) (83)));
        s.m5_0(123.4567);
        s.m5_1(((byte) (103)));
        s.m6_0(123456.789);
        s.m6_1(((byte) (189)));
        s.m7_0(1.234567890123E7);
        s.m7_1(((byte) (247)));
        s.m8_0(0.1234);
        s.m8_1(((byte) (83)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S9_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S9_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S9_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S9_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S9_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S9_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S9_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S9_6_m3_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S9_6_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S9_6_m4_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S9_6_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S9_6_m5_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S9_6_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S9_6_m6_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S9_6_m7_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S9_6_m7_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S9_6_m8_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S9_6_m8_1(s));
    }

    @Test
    public void testPassS10_0ByVal() {
        PassReturnByValTest.S10_0 s = new PassReturnByValTest.S10_0();
        s.m0_0(((byte) (34)));
        s.m1_0(((byte) (59)));
        s.m2_0(((byte) (101)));
        s.m3_0(((byte) (158)));
        s.m4_0(((byte) (34)));
        s.m5_0(((byte) (59)));
        s.m6_0(((byte) (101)));
        s.m7_0(((byte) (158)));
        s.m8_0(((byte) (34)));
        s.m9_0(((byte) (59)));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S10_0_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S10_0_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S10_0_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S10_0_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S10_0_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S10_0_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (101)), PassReturnByValTest.native_get_S10_0_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (158)), PassReturnByValTest.native_get_S10_0_m7_0(s));
        PassReturnByValTest.assertEquals(((byte) (34)), PassReturnByValTest.native_get_S10_0_m8_0(s));
        PassReturnByValTest.assertEquals(((byte) (59)), PassReturnByValTest.native_get_S10_0_m9_0(s));
    }

    @Test
    public void testPassS10_1ByVal() {
        PassReturnByValTest.S10_1 s = new PassReturnByValTest.S10_1();
        s.m0_0(((short) (9)));
        s.m1_0(((short) (66)));
        s.m2_0(((short) (2219)));
        s.m3_0(((short) (42233)));
        s.m4_0(((short) (9)));
        s.m5_0(((short) (66)));
        s.m6_0(((short) (2219)));
        s.m7_0(((short) (42233)));
        s.m8_0(((short) (9)));
        s.m9_0(((short) (66)));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S10_1_m0_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S10_1_m1_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S10_1_m2_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S10_1_m3_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S10_1_m4_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S10_1_m5_0(s));
        PassReturnByValTest.assertEquals(((short) (2219)), PassReturnByValTest.native_get_S10_1_m6_0(s));
        PassReturnByValTest.assertEquals(((short) (42233)), PassReturnByValTest.native_get_S10_1_m7_0(s));
        PassReturnByValTest.assertEquals(((short) (9)), PassReturnByValTest.native_get_S10_1_m8_0(s));
        PassReturnByValTest.assertEquals(((short) (66)), PassReturnByValTest.native_get_S10_1_m9_0(s));
    }

    @Test
    public void testPassS10_2ByVal() {
        PassReturnByValTest.S10_2 s = new PassReturnByValTest.S10_2();
        s.m0_0(45);
        s.m1_0(43828);
        s.m2_0(1687238);
        s.m3_0(-441768328);
        s.m4_0(45);
        s.m5_0(43828);
        s.m6_0(1687238);
        s.m7_0(-441768328);
        s.m8_0(45);
        s.m9_0(43828);
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S10_2_m0_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S10_2_m1_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S10_2_m2_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S10_2_m3_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S10_2_m4_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S10_2_m5_0(s));
        PassReturnByValTest.assertEquals(1687238, PassReturnByValTest.native_get_S10_2_m6_0(s));
        PassReturnByValTest.assertEquals(-441768328, PassReturnByValTest.native_get_S10_2_m7_0(s));
        PassReturnByValTest.assertEquals(45, PassReturnByValTest.native_get_S10_2_m8_0(s));
        PassReturnByValTest.assertEquals(43828, PassReturnByValTest.native_get_S10_2_m9_0(s));
    }

    @Test
    public void testPassS10_3ByVal() {
        PassReturnByValTest.S10_3 s = new PassReturnByValTest.S10_3();
        s.m0_0(12845L);
        s.m1_0(682356595L);
        s.m2_0(177196055709953L);
        s.m3_0(7041571270605544278L);
        s.m4_0(12845L);
        s.m5_0(682356595L);
        s.m6_0(177196055709953L);
        s.m7_0(7041571270605544278L);
        s.m8_0(12845L);
        s.m9_0(682356595L);
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S10_3_m0_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S10_3_m1_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S10_3_m2_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S10_3_m3_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S10_3_m4_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S10_3_m5_0(s));
        PassReturnByValTest.assertEquals(177196055709953L, PassReturnByValTest.native_get_S10_3_m6_0(s));
        PassReturnByValTest.assertEquals(7041571270605544278L, PassReturnByValTest.native_get_S10_3_m7_0(s));
        PassReturnByValTest.assertEquals(12845L, PassReturnByValTest.native_get_S10_3_m8_0(s));
        PassReturnByValTest.assertEquals(682356595L, PassReturnByValTest.native_get_S10_3_m9_0(s));
    }

    @Test
    public void testPassS10_4ByVal() {
        PassReturnByValTest.S10_4 s = new PassReturnByValTest.S10_4();
        s.m0_0(0.1234F);
        s.m1_0(123.4567F);
        s.m2_0(123456.79F);
        s.m3_0(1.2345679E7F);
        s.m4_0(0.1234F);
        s.m5_0(123.4567F);
        s.m6_0(123456.79F);
        s.m7_0(1.2345679E7F);
        s.m8_0(0.1234F);
        s.m9_0(123.4567F);
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S10_4_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S10_4_m1_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S10_4_m2_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S10_4_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S10_4_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S10_4_m5_0(s));
        PassReturnByValTest.assertEquals(123456.79F, PassReturnByValTest.native_get_S10_4_m6_0(s));
        PassReturnByValTest.assertEquals(1.2345679E7F, PassReturnByValTest.native_get_S10_4_m7_0(s));
        PassReturnByValTest.assertEquals(0.1234F, PassReturnByValTest.native_get_S10_4_m8_0(s));
        PassReturnByValTest.assertEquals(123.4567F, PassReturnByValTest.native_get_S10_4_m9_0(s));
    }

    @Test
    public void testPassS10_5ByVal() {
        PassReturnByValTest.S10_5 s = new PassReturnByValTest.S10_5();
        s.m0_0(0.1234);
        s.m1_0(123.4567);
        s.m2_0(123456.789);
        s.m3_0(1.234567890123E7);
        s.m4_0(0.1234);
        s.m5_0(123.4567);
        s.m6_0(123456.789);
        s.m7_0(1.234567890123E7);
        s.m8_0(0.1234);
        s.m9_0(123.4567);
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S10_5_m0_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S10_5_m1_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S10_5_m2_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S10_5_m3_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S10_5_m4_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S10_5_m5_0(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S10_5_m6_0(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S10_5_m7_0(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S10_5_m8_0(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S10_5_m9_0(s));
    }

    @Test
    public void testPassS10_6ByVal() {
        PassReturnByValTest.S10_6 s = new PassReturnByValTest.S10_6();
        s.m0_0(0.1234);
        s.m0_1(((byte) (83)));
        s.m1_0(123.4567);
        s.m1_1(((byte) (103)));
        s.m2_0(123456.789);
        s.m2_1(((byte) (189)));
        s.m3_0(1.234567890123E7);
        s.m3_1(((byte) (247)));
        s.m4_0(0.1234);
        s.m4_1(((byte) (83)));
        s.m5_0(123.4567);
        s.m5_1(((byte) (103)));
        s.m6_0(123456.789);
        s.m6_1(((byte) (189)));
        s.m7_0(1.234567890123E7);
        s.m7_1(((byte) (247)));
        s.m8_0(0.1234);
        s.m8_1(((byte) (83)));
        s.m9_0(123.4567);
        s.m9_1(((byte) (103)));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S10_6_m0_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S10_6_m0_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S10_6_m1_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S10_6_m1_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S10_6_m2_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S10_6_m2_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S10_6_m3_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S10_6_m3_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S10_6_m4_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S10_6_m4_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S10_6_m5_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S10_6_m5_1(s));
        PassReturnByValTest.assertEquals(123456.789, PassReturnByValTest.native_get_S10_6_m6_0(s));
        PassReturnByValTest.assertEquals(((byte) (189)), PassReturnByValTest.native_get_S10_6_m6_1(s));
        PassReturnByValTest.assertEquals(1.234567890123E7, PassReturnByValTest.native_get_S10_6_m7_0(s));
        PassReturnByValTest.assertEquals(((byte) (247)), PassReturnByValTest.native_get_S10_6_m7_1(s));
        PassReturnByValTest.assertEquals(0.1234, PassReturnByValTest.native_get_S10_6_m8_0(s));
        PassReturnByValTest.assertEquals(((byte) (83)), PassReturnByValTest.native_get_S10_6_m8_1(s));
        PassReturnByValTest.assertEquals(123.4567, PassReturnByValTest.native_get_S10_6_m9_0(s));
        PassReturnByValTest.assertEquals(((byte) (103)), PassReturnByValTest.native_get_S10_6_m9_1(s));
    }

    @Test
    public void testReturnS1_0ByVal() {
        PassReturnByValTest.S1_0 s = PassReturnByValTest.native_new_S1_0(((byte) (34)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
    }

    @Test
    public void testReturnS1_1ByVal() {
        PassReturnByValTest.S1_1 s = PassReturnByValTest.native_new_S1_1(((short) (9)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
    }

    @Test
    public void testReturnS1_2ByVal() {
        PassReturnByValTest.S1_2 s = PassReturnByValTest.native_new_S1_2(45);
        PassReturnByValTest.assertEquals(45, s.m0_0());
    }

    @Test
    public void testReturnS1_3ByVal() {
        PassReturnByValTest.S1_3 s = PassReturnByValTest.native_new_S1_3(12845L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
    }

    @Test
    public void testReturnS1_4ByVal() {
        PassReturnByValTest.S1_4 s = PassReturnByValTest.native_new_S1_4(0.1234F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
    }

    @Test
    public void testReturnS1_5ByVal() {
        PassReturnByValTest.S1_5 s = PassReturnByValTest.native_new_S1_5(0.1234);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
    }

    @Test
    public void testReturnS1_6ByVal() {
        PassReturnByValTest.S1_6 s = PassReturnByValTest.native_new_S1_6(0.1234, ((byte) (83)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
    }

    @Test
    public void testReturnS2_0ByVal() {
        PassReturnByValTest.S2_0 s = PassReturnByValTest.native_new_S2_0(((byte) (34)), ((byte) (59)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
    }

    @Test
    public void testReturnS2_1ByVal() {
        PassReturnByValTest.S2_1 s = PassReturnByValTest.native_new_S2_1(((short) (9)), ((short) (66)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
    }

    @Test
    public void testReturnS2_2ByVal() {
        PassReturnByValTest.S2_2 s = PassReturnByValTest.native_new_S2_2(45, 43828);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
    }

    @Test
    public void testReturnS2_3ByVal() {
        PassReturnByValTest.S2_3 s = PassReturnByValTest.native_new_S2_3(12845L, 682356595L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
    }

    @Test
    public void testReturnS2_4ByVal() {
        PassReturnByValTest.S2_4 s = PassReturnByValTest.native_new_S2_4(0.1234F, 123.4567F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
    }

    @Test
    public void testReturnS2_5ByVal() {
        PassReturnByValTest.S2_5 s = PassReturnByValTest.native_new_S2_5(0.1234, 123.4567);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
    }

    @Test
    public void testReturnS2_6ByVal() {
        PassReturnByValTest.S2_6 s = PassReturnByValTest.native_new_S2_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
    }

    @Test
    public void testReturnS3_0ByVal() {
        PassReturnByValTest.S3_0 s = PassReturnByValTest.native_new_S3_0(((byte) (34)), ((byte) (59)), ((byte) (101)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
    }

    @Test
    public void testReturnS3_1ByVal() {
        PassReturnByValTest.S3_1 s = PassReturnByValTest.native_new_S3_1(((short) (9)), ((short) (66)), ((short) (2219)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
    }

    @Test
    public void testReturnS3_2ByVal() {
        PassReturnByValTest.S3_2 s = PassReturnByValTest.native_new_S3_2(45, 43828, 1687238);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
    }

    @Test
    public void testReturnS3_3ByVal() {
        PassReturnByValTest.S3_3 s = PassReturnByValTest.native_new_S3_3(12845L, 682356595L, 177196055709953L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
    }

    @Test
    public void testReturnS3_4ByVal() {
        PassReturnByValTest.S3_4 s = PassReturnByValTest.native_new_S3_4(0.1234F, 123.4567F, 123456.79F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
    }

    @Test
    public void testReturnS3_5ByVal() {
        PassReturnByValTest.S3_5 s = PassReturnByValTest.native_new_S3_5(0.1234, 123.4567, 123456.789);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
    }

    @Test
    public void testReturnS3_6ByVal() {
        PassReturnByValTest.S3_6 s = PassReturnByValTest.native_new_S3_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
    }

    @Test
    public void testReturnS4_0ByVal() {
        PassReturnByValTest.S4_0 s = PassReturnByValTest.native_new_S4_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
    }

    @Test
    public void testReturnS4_1ByVal() {
        PassReturnByValTest.S4_1 s = PassReturnByValTest.native_new_S4_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
    }

    @Test
    public void testReturnS4_2ByVal() {
        PassReturnByValTest.S4_2 s = PassReturnByValTest.native_new_S4_2(45, 43828, 1687238, -441768328);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
    }

    @Test
    public void testReturnS4_3ByVal() {
        PassReturnByValTest.S4_3 s = PassReturnByValTest.native_new_S4_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
    }

    @Test
    public void testReturnS4_4ByVal() {
        PassReturnByValTest.S4_4 s = PassReturnByValTest.native_new_S4_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
    }

    @Test
    public void testReturnS4_5ByVal() {
        PassReturnByValTest.S4_5 s = PassReturnByValTest.native_new_S4_5(0.1234, 123.4567, 123456.789, 1.234567890123E7);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
    }

    @Test
    public void testReturnS4_6ByVal() {
        PassReturnByValTest.S4_6 s = PassReturnByValTest.native_new_S4_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
    }

    @Test
    public void testReturnS5_0ByVal() {
        PassReturnByValTest.S5_0 s = PassReturnByValTest.native_new_S5_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m4_0());
    }

    @Test
    public void testReturnS5_1ByVal() {
        PassReturnByValTest.S5_1 s = PassReturnByValTest.native_new_S5_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m4_0());
    }

    @Test
    public void testReturnS5_2ByVal() {
        PassReturnByValTest.S5_2 s = PassReturnByValTest.native_new_S5_2(45, 43828, 1687238, -441768328, 45);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
        PassReturnByValTest.assertEquals(45, s.m4_0());
    }

    @Test
    public void testReturnS5_3ByVal() {
        PassReturnByValTest.S5_3 s = PassReturnByValTest.native_new_S5_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
        PassReturnByValTest.assertEquals(12845L, s.m4_0());
    }

    @Test
    public void testReturnS5_4ByVal() {
        PassReturnByValTest.S5_4 s = PassReturnByValTest.native_new_S5_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m4_0());
    }

    @Test
    public void testReturnS5_5ByVal() {
        PassReturnByValTest.S5_5 s = PassReturnByValTest.native_new_S5_5(0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
    }

    @Test
    public void testReturnS5_6ByVal() {
        PassReturnByValTest.S5_6 s = PassReturnByValTest.native_new_S5_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m4_1());
    }

    @Test
    public void testReturnS6_0ByVal() {
        PassReturnByValTest.S6_0 s = PassReturnByValTest.native_new_S6_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)), ((byte) (59)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m5_0());
    }

    @Test
    public void testReturnS6_1ByVal() {
        PassReturnByValTest.S6_1 s = PassReturnByValTest.native_new_S6_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)), ((short) (66)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m4_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m5_0());
    }

    @Test
    public void testReturnS6_2ByVal() {
        PassReturnByValTest.S6_2 s = PassReturnByValTest.native_new_S6_2(45, 43828, 1687238, -441768328, 45, 43828);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
        PassReturnByValTest.assertEquals(45, s.m4_0());
        PassReturnByValTest.assertEquals(43828, s.m5_0());
    }

    @Test
    public void testReturnS6_3ByVal() {
        PassReturnByValTest.S6_3 s = PassReturnByValTest.native_new_S6_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L, 682356595L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
        PassReturnByValTest.assertEquals(12845L, s.m4_0());
        PassReturnByValTest.assertEquals(682356595L, s.m5_0());
    }

    @Test
    public void testReturnS6_4ByVal() {
        PassReturnByValTest.S6_4 s = PassReturnByValTest.native_new_S6_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F, 123.4567F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m5_0());
    }

    @Test
    public void testReturnS6_5ByVal() {
        PassReturnByValTest.S6_5 s = PassReturnByValTest.native_new_S6_5(0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234, 123.4567);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
    }

    @Test
    public void testReturnS6_6ByVal() {
        PassReturnByValTest.S6_6 s = PassReturnByValTest.native_new_S6_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)), 123.4567, ((byte) (103)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m4_1());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m5_1());
    }

    @Test
    public void testReturnS7_0ByVal() {
        PassReturnByValTest.S7_0 s = PassReturnByValTest.native_new_S7_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)), ((byte) (59)), ((byte) (101)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m6_0());
    }

    @Test
    public void testReturnS7_1ByVal() {
        PassReturnByValTest.S7_1 s = PassReturnByValTest.native_new_S7_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)), ((short) (66)), ((short) (2219)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m4_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m5_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m6_0());
    }

    @Test
    public void testReturnS7_2ByVal() {
        PassReturnByValTest.S7_2 s = PassReturnByValTest.native_new_S7_2(45, 43828, 1687238, -441768328, 45, 43828, 1687238);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
        PassReturnByValTest.assertEquals(45, s.m4_0());
        PassReturnByValTest.assertEquals(43828, s.m5_0());
        PassReturnByValTest.assertEquals(1687238, s.m6_0());
    }

    @Test
    public void testReturnS7_3ByVal() {
        PassReturnByValTest.S7_3 s = PassReturnByValTest.native_new_S7_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L, 682356595L, 177196055709953L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
        PassReturnByValTest.assertEquals(12845L, s.m4_0());
        PassReturnByValTest.assertEquals(682356595L, s.m5_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m6_0());
    }

    @Test
    public void testReturnS7_4ByVal() {
        PassReturnByValTest.S7_4 s = PassReturnByValTest.native_new_S7_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F, 123.4567F, 123456.79F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m5_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m6_0());
    }

    @Test
    public void testReturnS7_5ByVal() {
        PassReturnByValTest.S7_5 s = PassReturnByValTest.native_new_S7_5(0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234, 123.4567, 123456.789);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
    }

    @Test
    public void testReturnS7_6ByVal() {
        PassReturnByValTest.S7_6 s = PassReturnByValTest.native_new_S7_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m4_1());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m5_1());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m6_1());
    }

    @Test
    public void testReturnS8_0ByVal() {
        PassReturnByValTest.S8_0 s = PassReturnByValTest.native_new_S8_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m7_0());
    }

    @Test
    public void testReturnS8_1ByVal() {
        PassReturnByValTest.S8_1 s = PassReturnByValTest.native_new_S8_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m4_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m5_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m6_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m7_0());
    }

    @Test
    public void testReturnS8_2ByVal() {
        PassReturnByValTest.S8_2 s = PassReturnByValTest.native_new_S8_2(45, 43828, 1687238, -441768328, 45, 43828, 1687238, -441768328);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
        PassReturnByValTest.assertEquals(45, s.m4_0());
        PassReturnByValTest.assertEquals(43828, s.m5_0());
        PassReturnByValTest.assertEquals(1687238, s.m6_0());
        PassReturnByValTest.assertEquals(-441768328, s.m7_0());
    }

    @Test
    public void testReturnS8_3ByVal() {
        PassReturnByValTest.S8_3 s = PassReturnByValTest.native_new_S8_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L, 682356595L, 177196055709953L, 7041571270605544278L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
        PassReturnByValTest.assertEquals(12845L, s.m4_0());
        PassReturnByValTest.assertEquals(682356595L, s.m5_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m6_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m7_0());
    }

    @Test
    public void testReturnS8_4ByVal() {
        PassReturnByValTest.S8_4 s = PassReturnByValTest.native_new_S8_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F, 123.4567F, 123456.79F, 1.2345679E7F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m5_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m6_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m7_0());
    }

    @Test
    public void testReturnS8_5ByVal() {
        PassReturnByValTest.S8_5 s = PassReturnByValTest.native_new_S8_5(0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234, 123.4567, 123456.789, 1.234567890123E7);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m7_0());
    }

    @Test
    public void testReturnS8_6ByVal() {
        PassReturnByValTest.S8_6 s = PassReturnByValTest.native_new_S8_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m4_1());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m5_1());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m6_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m7_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m7_1());
    }

    @Test
    public void testReturnS9_0ByVal() {
        PassReturnByValTest.S9_0 s = PassReturnByValTest.native_new_S9_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m7_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m8_0());
    }

    @Test
    public void testReturnS9_1ByVal() {
        PassReturnByValTest.S9_1 s = PassReturnByValTest.native_new_S9_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m4_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m5_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m6_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m7_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m8_0());
    }

    @Test
    public void testReturnS9_2ByVal() {
        PassReturnByValTest.S9_2 s = PassReturnByValTest.native_new_S9_2(45, 43828, 1687238, -441768328, 45, 43828, 1687238, -441768328, 45);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
        PassReturnByValTest.assertEquals(45, s.m4_0());
        PassReturnByValTest.assertEquals(43828, s.m5_0());
        PassReturnByValTest.assertEquals(1687238, s.m6_0());
        PassReturnByValTest.assertEquals(-441768328, s.m7_0());
        PassReturnByValTest.assertEquals(45, s.m8_0());
    }

    @Test
    public void testReturnS9_3ByVal() {
        PassReturnByValTest.S9_3 s = PassReturnByValTest.native_new_S9_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
        PassReturnByValTest.assertEquals(12845L, s.m4_0());
        PassReturnByValTest.assertEquals(682356595L, s.m5_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m6_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m7_0());
        PassReturnByValTest.assertEquals(12845L, s.m8_0());
    }

    @Test
    public void testReturnS9_4ByVal() {
        PassReturnByValTest.S9_4 s = PassReturnByValTest.native_new_S9_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m5_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m6_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m7_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m8_0());
    }

    @Test
    public void testReturnS9_5ByVal() {
        PassReturnByValTest.S9_5 s = PassReturnByValTest.native_new_S9_5(0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m7_0());
        PassReturnByValTest.assertEquals(0.1234, s.m8_0());
    }

    @Test
    public void testReturnS9_6ByVal() {
        PassReturnByValTest.S9_6 s = PassReturnByValTest.native_new_S9_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m4_1());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m5_1());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m6_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m7_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m7_1());
        PassReturnByValTest.assertEquals(0.1234, s.m8_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m8_1());
    }

    @Test
    public void testReturnS10_0ByVal() {
        PassReturnByValTest.S10_0 s = PassReturnByValTest.native_new_S10_0(((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)), ((byte) (59)), ((byte) (101)), ((byte) (158)), ((byte) (34)), ((byte) (59)));
        PassReturnByValTest.assertEquals(((byte) (34)), s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (101)), s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (158)), s.m7_0());
        PassReturnByValTest.assertEquals(((byte) (34)), s.m8_0());
        PassReturnByValTest.assertEquals(((byte) (59)), s.m9_0());
    }

    @Test
    public void testReturnS10_1ByVal() {
        PassReturnByValTest.S10_1 s = PassReturnByValTest.native_new_S10_1(((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)), ((short) (66)), ((short) (2219)), ((short) (42233)), ((short) (9)), ((short) (66)));
        PassReturnByValTest.assertEquals(((short) (9)), s.m0_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m1_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m2_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m3_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m4_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m5_0());
        PassReturnByValTest.assertEquals(((short) (2219)), s.m6_0());
        PassReturnByValTest.assertEquals(((short) (42233)), s.m7_0());
        PassReturnByValTest.assertEquals(((short) (9)), s.m8_0());
        PassReturnByValTest.assertEquals(((short) (66)), s.m9_0());
    }

    @Test
    public void testReturnS10_2ByVal() {
        PassReturnByValTest.S10_2 s = PassReturnByValTest.native_new_S10_2(45, 43828, 1687238, -441768328, 45, 43828, 1687238, -441768328, 45, 43828);
        PassReturnByValTest.assertEquals(45, s.m0_0());
        PassReturnByValTest.assertEquals(43828, s.m1_0());
        PassReturnByValTest.assertEquals(1687238, s.m2_0());
        PassReturnByValTest.assertEquals(-441768328, s.m3_0());
        PassReturnByValTest.assertEquals(45, s.m4_0());
        PassReturnByValTest.assertEquals(43828, s.m5_0());
        PassReturnByValTest.assertEquals(1687238, s.m6_0());
        PassReturnByValTest.assertEquals(-441768328, s.m7_0());
        PassReturnByValTest.assertEquals(45, s.m8_0());
        PassReturnByValTest.assertEquals(43828, s.m9_0());
    }

    @Test
    public void testReturnS10_3ByVal() {
        PassReturnByValTest.S10_3 s = PassReturnByValTest.native_new_S10_3(12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L, 682356595L, 177196055709953L, 7041571270605544278L, 12845L, 682356595L);
        PassReturnByValTest.assertEquals(12845L, s.m0_0());
        PassReturnByValTest.assertEquals(682356595L, s.m1_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m2_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m3_0());
        PassReturnByValTest.assertEquals(12845L, s.m4_0());
        PassReturnByValTest.assertEquals(682356595L, s.m5_0());
        PassReturnByValTest.assertEquals(177196055709953L, s.m6_0());
        PassReturnByValTest.assertEquals(7041571270605544278L, s.m7_0());
        PassReturnByValTest.assertEquals(12845L, s.m8_0());
        PassReturnByValTest.assertEquals(682356595L, s.m9_0());
    }

    @Test
    public void testReturnS10_4ByVal() {
        PassReturnByValTest.S10_4 s = PassReturnByValTest.native_new_S10_4(0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F, 123.4567F, 123456.79F, 1.2345679E7F, 0.1234F, 123.4567F);
        PassReturnByValTest.assertEquals(0.1234F, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m1_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m2_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m5_0());
        PassReturnByValTest.assertEquals(123456.79F, s.m6_0());
        PassReturnByValTest.assertEquals(1.2345679E7F, s.m7_0());
        PassReturnByValTest.assertEquals(0.1234F, s.m8_0());
        PassReturnByValTest.assertEquals(123.4567F, s.m9_0());
    }

    @Test
    public void testReturnS10_5ByVal() {
        PassReturnByValTest.S10_5 s = PassReturnByValTest.native_new_S10_5(0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234, 123.4567, 123456.789, 1.234567890123E7, 0.1234, 123.4567);
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m7_0());
        PassReturnByValTest.assertEquals(0.1234, s.m8_0());
        PassReturnByValTest.assertEquals(123.4567, s.m9_0());
    }

    @Test
    public void testReturnS10_6ByVal() {
        PassReturnByValTest.S10_6 s = PassReturnByValTest.native_new_S10_6(0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)), 123.4567, ((byte) (103)), 123456.789, ((byte) (189)), 1.234567890123E7, ((byte) (247)), 0.1234, ((byte) (83)), 123.4567, ((byte) (103)));
        PassReturnByValTest.assertEquals(0.1234, s.m0_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m0_1());
        PassReturnByValTest.assertEquals(123.4567, s.m1_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m1_1());
        PassReturnByValTest.assertEquals(123456.789, s.m2_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m2_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m3_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m3_1());
        PassReturnByValTest.assertEquals(0.1234, s.m4_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m4_1());
        PassReturnByValTest.assertEquals(123.4567, s.m5_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m5_1());
        PassReturnByValTest.assertEquals(123456.789, s.m6_0());
        PassReturnByValTest.assertEquals(((byte) (189)), s.m6_1());
        PassReturnByValTest.assertEquals(1.234567890123E7, s.m7_0());
        PassReturnByValTest.assertEquals(((byte) (247)), s.m7_1());
        PassReturnByValTest.assertEquals(0.1234, s.m8_0());
        PassReturnByValTest.assertEquals(((byte) (83)), s.m8_1());
        PassReturnByValTest.assertEquals(123.4567, s.m9_0());
        PassReturnByValTest.assertEquals(((byte) (103)), s.m9_1());
    }
}

