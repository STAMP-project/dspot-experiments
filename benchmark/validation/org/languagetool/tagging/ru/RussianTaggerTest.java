/**
 * LanguageTool, a natural language style checker
 * Copyright (C) 2006 Daniel Naber (http://www.danielnaber.de)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
 * USA
 */
package org.languagetool.tagging.ru;


import java.io.IOException;
import org.junit.Test;
import org.languagetool.TestTools;
import org.languagetool.language.Russian;
import org.languagetool.tokenizers.WordTokenizer;


public class RussianTaggerTest {
    private RussianTagger tagger;

    private WordTokenizer tokenizer;

    @Test
    public void testDictionary() throws IOException {
        TestTools.testDictionary(tagger, new Russian());
    }

    @Test
    public void testTagger() throws IOException {
        TestTools.myAssert("??? ?????????? ????? ?????? ???? ?? ?????,  ??????  ????????????  ????? ??????????? ??-??????.", "???/[????]ADJ:MPR:PL:Nom|???/[????]ADJ:MPR:PL:V|???/[???]PNN:PL:Nom|???/[???]PNN:PL:V|???/[???]PNN:Sin:Nom|???/[???]PNN:Sin:V -- ??????????/[??????????]ADJ:Posit:PL:Nom|??????????/[??????????]ADJ:Posit:PL:V -- ?????/[?????]NN:Inanim:Fem:PL:Nom|?????/[?????]NN:Inanim:Fem:PL:V|?????/[?????]NN:Inanim:Fem:Sin:R -- ??????/[???????]ADJ:Short:PL -- ????/[????]NN:Anim:Masc:Sin:Nom -- ??/[??]PREP -- ?????/[????]NN:Anim:Masc:Sin:R|?????/[????]NN:Anim:Masc:Sin:V -- ??????/[??????]ADJ:MPR:Fem:Nom -- ????????????/[????????????]ADJ:Posit:Fem:Nom -- ?????/[?????]NN:Inanim:Fem:Sin:Nom -- ???????????/[????????????]ADJ:Short:Fem -- ??-??????/[??-??????]ADV", tokenizer, tagger);
        TestTools.myAssert("??? ????????? ? ???? ?????????.", "???/[????]ADJ:MPR:PL:Nom|???/[????]ADJ:MPR:PL:V|???/[???]PNN:PL:Nom|???/[???]PNN:PL:V|???/[???]PNN:Sin:Nom|???/[???]PNN:Sin:V -- ?????????/[?????????]VB:Past:INTR:PFV:Neut -- ?/[?]PREP -- ????/[???]NN:Inanim:Masc:Sin:P -- ?????????/[null]null", tokenizer, tagger);
    }
}

