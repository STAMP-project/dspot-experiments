/**
 * LanguageTool, a natural language style checker
 * Copyright (C) 2016 Daniel Naber (http://www.danielnaber.de)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
 * USA
 */
package org.languagetool.rules.ru;


import java.io.IOException;
import org.junit.Assert;
import org.junit.Test;
import org.languagetool.JLanguageTool;
import org.languagetool.language.Russian;


public class RussianWordCoherencyRuleTest {
    private final JLanguageTool lt = new JLanguageTool(new Russian());

    @Test
    public void testRule() throws IOException {
        assertGood("?? ????? ??????? ??????????? ???? ????????????? ??????????? ?273,15 ?C.");
        assertGood("?? ????? ??????? ??????????? ???? ????????????? ??????????? ?273,15 ?C.");
        assertError("?? ????? ??????? ??????????? ???? ????????????? ??????????? ?273,15 ?C ??? ???? ?? ????? ????????.");
    }

    @Test
    public void testCallIndependence() throws IOException {
        assertGood("?????????? ????.");
        assertGood("???? ?? ????? ????????.");// this won't be noticed, the calls are independent of each other

    }

    @Test
    public void testRuleCompleteTexts() throws IOException {
        Assert.assertEquals(0, lt.check("?? ????? ??????? ??????????? ???? ????????????? ??????????? ?273,15 ?C ??? ???? ?? ????? ????????.").size());
        Assert.assertEquals(1, lt.check("?? ????? ??????? ??????????? ???? ????????????? ??????????? ?273,15 ?C ??? ???? ?? ????? ????????.").size());
        // cross-paragraph checks:
        Assert.assertEquals(1, lt.check("\u0410\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u044b\u0439 \u043d\u0443\u043b\u044c.\n\n\u0421\u043e\u0432\u0441\u0435\u043c \u043d\u0435\u0434\u043e\u0441\u0442\u0438\u0436\u0438\u043c. \u0418 \u043d\u043e\u043b\u044c \u043f\u043e \u0448\u043a\u0430\u043b\u0435 \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0430.").size());
    }
}

