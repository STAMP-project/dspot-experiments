/**
 * LanguageTool, a natural language style checker
 * Copyright (C) 2005 Daniel Naber (http://www.danielnaber.de)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
 * USA
 */
package org.languagetool.tokenizers.uk;


import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Test;


public class UkrainianWordTokenizerTest {
    private final UkrainianWordTokenizer w = new UkrainianWordTokenizer();

    @Test
    public void testTokenizeUrl() {
        String url = "http://youtube.com:80/herewego?start=11&quality=high%3F";
        List<String> testList = w.tokenize(url);
        Assert.assertEquals(Arrays.asList(url), testList);
    }

    @Test
    public void testNumbers() {
        List<String> testList = w.tokenize("300 ??? ?? ???????");
        Assert.assertEquals(Arrays.asList("300", " ", "???", " ", "??", " ", "???????"), testList);
        testList = w.tokenize("???????? 2,2 ????????");
        Assert.assertEquals(Arrays.asList("????????", " ", "2,2", " ", "????????"), testList);
        testList = w.tokenize("???????? 84,46 ????????");
        Assert.assertEquals(Arrays.asList("????????", " ", "84,46", " ", "????????"), testList);
        // TODO:
        // testList = w.tokenize("? 1996,1997,1998");
        // assertEquals(Arrays.asList("?", " ", "1996,1997,1998"), testList);
        testList = w.tokenize("2 000 ??? ? 12 000 ?????");
        Assert.assertEquals(Arrays.asList("2 000", " ", "???", " ", "?", " ", "12 000", " ", "?????"), testList);
        testList = w.tokenize("???????? 12 000 000 ???");
        Assert.assertEquals(Arrays.asList("????????", " ", "12 000 000", " ", "???"), testList);
        testList = w.tokenize("\u043d\u0430\u0434\u0456\u0439\u0448\u043b\u043e 12\u202f000\u202f000 \u0442\u043e\u043d");
        Assert.assertEquals(Arrays.asList("????????", " ", "12 000 000", " ", "???"), testList);
        testList = w.tokenize("?? 01.01.42 400 000 ??.");
        Assert.assertEquals(Arrays.asList("??", " ", "01.01.42", " ", "400 000", " ", "??."), testList);
        // should not merge these numbers
        testList = w.tokenize("2 15 ?????????");
        Assert.assertEquals(Arrays.asList("2", " ", "15", " ", "?????????"), testList);
        testList = w.tokenize("? 2004 200 ?????????");
        Assert.assertEquals(Arrays.asList("?", " ", "2004", " ", "200", " ", "?????????"), testList);
        testList = w.tokenize("? ???????-2004 200 ?????????");
        Assert.assertEquals(Arrays.asList("?", " ", "???????-2004", " ", "200", " ", "?????????"), testList);
        testList = w.tokenize("? 12 0001 ?????");
        Assert.assertEquals(Arrays.asList("?", " ", "12", " ", "0001", " ", "?????"), testList);
        testList = w.tokenize("??????? 14.07.2001 ?????");
        Assert.assertEquals(Arrays.asList("???????", " ", "14.07.2001", " ", "?????"), testList);
        testList = w.tokenize("????? ? 7.30 ?????");
        Assert.assertEquals(Arrays.asList("?????", " ", "?", " ", "7.30", " ", "?????"), testList);
        testList = w.tokenize("????? ? 7:30 ?????");
        Assert.assertEquals(Arrays.asList("?????", " ", "?", " ", "7:30", " ", "?????"), testList);
    }

    @Test
    public void testTokenize() {
        List<String> testList = w.tokenize("???? ??????? ??????.");
        Assert.assertEquals(Arrays.asList("????", " ", "???????", " ", "??????", "."), testList);
        testList = w.tokenize("???? ??????? ??????? ?????????.");
        Assert.assertEquals(Arrays.asList("????", " ", "???????", " ", "?'?????", " ", "???'?????", "."), testList);
        // testList = w.tokenize("????\u0301 ???\u00AD???? ???\u0301???? ?????\u00AD????.");
        // assertEquals(Arrays.asList("????", " ", "???????", " ", "?'?????", " ", "???'?????", "."), testList);
        testList = w.tokenize("? ?????????(????????");
        Assert.assertEquals(Arrays.asList("?", " ", "?????????", "(", "????????"), testList);
        testList = w.tokenize("???(?) ?? ??(?)?");
        Assert.assertEquals(Arrays.asList("???(?)", " ", "??", " ", "??(?)?"), testList);
        testList = w.tokenize("?????? ?... ???????????");
        Assert.assertEquals(Arrays.asList("??????", " ", "?", "...", " ", "???????????"), testList);
        testList = w.tokenize("??????????!.. ?????");
        Assert.assertEquals(Arrays.asList("??????????", "!..", " ", "?????"), testList);
        testList = w.tokenize("??? ??????.");
        Assert.assertEquals(Arrays.asList("???", " ", "??????", "."), testList);
        testList = w.tokenize("? ??.");
        Assert.assertEquals(Arrays.asList("?", " ", "??", "."), testList);
        testList = w.tokenize("\u0441\u0442\u0456\u043d\u00ad\u043a\u0443");
        Assert.assertEquals(Arrays.asList("\u0441\u0442\u0456\u043d\u00ad\u043a\u0443"), testList);
        testList = w.tokenize("\u0441\u0442\u0456\u043d\u00ad\n\u043a\u0443");
        Assert.assertEquals(Arrays.asList("\u0441\u0442\u0456\u043d\u00ad\n\u043a\u0443"), testList);
        testList = w.tokenize("\u043f\"\u044f\u043d\u0438\u0439");
        Assert.assertEquals(Arrays.asList("?'????"), testList);
        testList = w.tokenize("??????????**");
        Assert.assertEquals(Arrays.asList("??????????", "**"), testList);
        testList = w.tokenize("????***,");
        Assert.assertEquals(Arrays.asList("????", "***", ","), testList);
        testList = w.tokenize("*????????");
        Assert.assertEquals(Arrays.asList("*", "????????"), testList);
        testList = w.tokenize("?*??????");
        Assert.assertEquals(Arrays.asList("?*??????"), testList);
    }

    @Test
    public void testAbbreviations() {
        List<String> testList = w.tokenize("??????? ?.???????.");
        // assertEquals(Arrays.asList("???????", " ", "?.", "???????", "."), testList);
        testList = w.tokenize("??????? ?. ?. ???????.");
        Assert.assertEquals(Arrays.asList("???????", " ", "?.", " ", "?.", " ", "???????", "."), testList);
        testList = w.tokenize("??????? ?.?.???????.");
        Assert.assertEquals(Arrays.asList("???????", " ", "?.", "?.", "???????", "."), testList);
        testList = w.tokenize("\u0406.\u00a0\u0404\u0440\u043c\u043e\u043b\u044e\u043a.");
        Assert.assertEquals(Arrays.asList("?.", "\u00a0", "???????", "."), testList);
        testList = w.tokenize("??????? ??????? ?.");
        Assert.assertEquals(Arrays.asList("???????", " ", "???????", " ", "?."), testList);
        testList = w.tokenize("??????? ??????? ?. ?.");
        Assert.assertEquals(Arrays.asList("???????", " ", "???????", " ", "?.", " ", "?."), testList);
        testList = w.tokenize("??????? ??????? ?. ?? ????");
        Assert.assertEquals(Arrays.asList("???????", " ", "???????", " ", "?.", " ", "??", " ", "????"), testList);
        // ??????????
        testList = w.tokenize("140 ???. ???????????");
        Assert.assertEquals(Arrays.asList("140", " ", "???.", " ", "???????????"), testList);
        testList = w.tokenize("450 ???. 297 ???");
        Assert.assertEquals(Arrays.asList("450", " ", "???.", " ", "297", " ", "???"), testList);
        testList = w.tokenize("450 ???.");
        Assert.assertEquals(Arrays.asList("450", " ", "???."), testList);
        testList = w.tokenize("354\u202f\u0442\u0438\u0441.");
        Assert.assertEquals(Arrays.asList("354", "\u202f", "???."), testList);
        testList = w.tokenize("911 ???.???. ? ???????");
        Assert.assertEquals(Arrays.asList("911", " ", "???.", "???", ".", " ", "?", " ", "???????"), testList);
        testList = w.tokenize("\u0437\u0430 $400\n  \u0442\u0438\u0441., \u0437\u0434\u0430\u0432\u0430\u043b\u043e\u0441\u044f \u0431");
        Assert.assertEquals(Arrays.asList("??", " ", "$400", "\n", " ", " ", "???.", ",", " ", "?????????", " ", "?"), testList);
        testList = w.tokenize("?????????? ?????? ??????????");
        Assert.assertEquals(Arrays.asList("??????????", " ", "?????", "?", " ", "??????????"), testList);
        testList = w.tokenize("????. ???????");
        Assert.assertEquals(Arrays.asList("????.", " ", "???????"), testList);
        testList = w.tokenize("\u043f\u0440\u043e\u0444.\u00a0\u0410\u0440\u0442\u044e\u0445\u043e\u0432");
        Assert.assertEquals(Arrays.asList("????.", "\u00a0", "???????"), testList);
        testList = w.tokenize("\u043a\u0443\u0442\u044e\u00a0\u2014 \u0449\u0435\u0434\u0440\u0443");
        Assert.assertEquals(Arrays.asList("????", "\u00a0", "?", " ", "?????"), testList);
        testList = w.tokenize("????? ???. ????????");
        Assert.assertEquals(Arrays.asList("?????", " ", "???.", " ", "????????"), testList);
        testList = w.tokenize("?? ?. ?.");
        Assert.assertEquals(Arrays.asList("??", " ", "?.", " ", "?."), testList);
        testList = w.tokenize("?? ?.?.");
        Assert.assertEquals(Arrays.asList("??", " ", "?.", "?."), testList);
        testList = w.tokenize("?. ?. ??????????");
        Assert.assertEquals(Arrays.asList("?.", " ", "?.", " ", "??????????"), testList);
        testList = w.tokenize("?.?. ??????????");
        Assert.assertEquals(Arrays.asList("?.", "?.", " ", "??????????"), testList);
        testList = w.tokenize("100 ?.?.");
        Assert.assertEquals(Arrays.asList("100", " ", "?.", "?."), testList);
        testList = w.tokenize("1998 ?.?.");
        Assert.assertEquals(Arrays.asList("1998", " ", "?.", "?."), testList);
        testList = w.tokenize("22 ???.");
        Assert.assertEquals(Arrays.asList("22", " ", "???."), testList);
        testList = w.tokenize("800 ??. ?'???");
        Assert.assertEquals(Arrays.asList("800", " ", "??.", " ", "?'???"), testList);
        testList = w.tokenize("18-19 ??.??. ????");
        Assert.assertEquals(Arrays.asList("18-19", " ", "??.", "??.", " ", "????"), testList);
        testList = w.tokenize("? ??. 11");
        Assert.assertEquals(Arrays.asList("?", " ", "??.", " ", "11"), testList);
        testList = w.tokenize("???. ?");
        Assert.assertEquals(Arrays.asList("???.", " ", "?"), testList);
        testList = w.tokenize("???.?");
        Assert.assertEquals(Arrays.asList("???.", "?"), testList);
        testList = w.tokenize("? ?. ?????");
        Assert.assertEquals(Arrays.asList("?", " ", "?.", " ", "?????"), testList);
        testList = w.tokenize("???????? 30 ??. ? ?????.");
        Assert.assertEquals(Arrays.asList("????????", " ", "30", " ", "??", ".", " ", "?", " ", "?????", "."), testList);
        testList = w.tokenize("???????? 30 ??. ???????.");
        Assert.assertEquals(Arrays.asList("????????", " ", "30", " ", "??", ".", " ", "???????", "."), testList);
        testList = w.tokenize("100 ?. ??????.");
        Assert.assertEquals(Arrays.asList("100", " ", "?", ".", " ", "??????", "."), testList);
        testList = w.tokenize("?? ?????? 4000 ?...");
        Assert.assertEquals(Arrays.asList("??", " ", "??????", " ", "4000", " ", "?", "..."), testList);
        testList = w.tokenize("?47 (?. ????'?????)");
        Assert.assertEquals(Arrays.asList("?47", " ", "(", "?.", " ", "????'?????", ")"), testList);
        testList = w.tokenize("?.-?.");
        Assert.assertEquals(Arrays.asList("?.-?."), testList);
        testList = w.tokenize("100 ???. ? ????");
        Assert.assertEquals(Arrays.asList("100", " ", "???", ".", " ", "?", " ", "????"), testList);
        testList = w.tokenize("???? ?? ??.");
        Assert.assertEquals(Arrays.asList("????", " ", "??", " ", "??."), testList);
        testList = w.tokenize("? ?. ??.");
        Assert.assertEquals(Arrays.asList("?", " ", "?.", " ", "??."), testList);
        testList = w.tokenize("???????? ??. ????. ????????????.");
        Assert.assertEquals(Arrays.asList("????????", " ", "??.", " ", "????.", " ", "????????????", "."), testList);
        testList = w.tokenize("????? ??. ???????? ??????????????.");
        Assert.assertEquals(Arrays.asList("?????", " ", "??.", " ", "????????", " ", "??????????????", "."), testList);
        testList = w.tokenize("??? ???. momento");
        Assert.assertEquals(Arrays.asList("???", " ", "???.", " ", "momento"), testList);
        testList = w.tokenize("?? 1-????. ??. ? ??????");
        Assert.assertEquals(Arrays.asList("??", " ", "1-????.", " ", "??.", " ", "?", " ", "??????"), testList);
        testList = w.tokenize("\u0412\u0430\u043b\u0435\u0440\u0456\u0439 (\u043c\u0456\u043b\u0456\u0446\u0456\u043e\u043d\u0435\u0440-\u043f\u0430\u0440\u043e\u0434\u0438\u0441\u0442.\n\u2013  \u0410\u0432\u0442.) \u0441\u0442\u0430\u043d\u0435 \u043f\u0430\u0440\u043e\u0434\u0438\u0441\u0442\u043e\u043c.");
        Assert.assertEquals(Arrays.asList("???????", " ", "(", "??????????-????????", ".", "\n", "?", " ", " ", "???.", ")", " ", "?????", " ", "??????????", "."), testList);
        testList = w.tokenize("???????? (? ??????.  ? ???.), ??????.");
        Assert.assertEquals(Arrays.asList("????????", " ", "(", "?", " ", "??????", ".", " ", " ", "?", " ", "???.", ")", ",", " ", "??????", "."), testList);
        testList = w.tokenize("Fair trade [???????????? ?????????. ?    ???.], ???? ??????? ?? ???, ??? ? ???????");
        Assert.assertTrue(testList.toString(), testList.contains("???."));
        testList = w.tokenize("???? ? ???.");
        Assert.assertEquals(Arrays.asList("????", " ", "?", " ", "???", "."), testList);
        testList = w.tokenize("???? ? ???...");
        Assert.assertEquals(Arrays.asList("????", " ", "?", " ", "???", "..."), testList);
        testList = w.tokenize("???.: 044-425-20-63");
        Assert.assertEquals(Arrays.asList("???.", ":", " ", "044-425-20-63"), testList);
        testList = w.tokenize("?/?");
        Assert.assertEquals(Arrays.asList("?/?"), testList);
        testList = w.tokenize("??.??????");
        Assert.assertEquals(Arrays.asList("??.", "??????"), testList);
        testList = w.tokenize("??.231");
        Assert.assertEquals(Arrays.asList("??.", "231"), testList);
        testList = w.tokenize("2016-2017??.");
        Assert.assertEquals(Arrays.asList("2016-2017", "??."), testList);
        testList = w.tokenize("30.04.2010?.");
        Assert.assertEquals(Arrays.asList("30.04.2010", "?."), testList);
    }
}

