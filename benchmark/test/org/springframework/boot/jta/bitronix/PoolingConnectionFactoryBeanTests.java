/**
 * Copyright 2012-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.springframework.boot.jta.bitronix;


import javax.jms.XAConnectionFactory;
import org.junit.Test;
import org.mockito.Mockito;


/**
 * Tests for {@link PoolingConnectionFactoryBean}.
 *
 * @author Phillip Webb
 */
public class PoolingConnectionFactoryBeanTests {
    @SuppressWarnings("serial")
    private PoolingConnectionFactoryBean bean = new PoolingConnectionFactoryBean() {
        @Override
        public synchronized void init() {
            // Stub out for the tests
        }
    };

    @Test
    public void sensibleDefaults() {
        assertThat(this.bean.getMaxPoolSize()).isEqualTo(10);
        assertThat(this.bean.getTestConnections()).isTrue();
        assertThat(this.bean.getAutomaticEnlistingEnabled()).isTrue();
        assertThat(this.bean.getAllowLocalTransactions()).isTrue();
    }

    @Test
    public void setsUniqueNameIfNull() throws Exception {
        this.bean.setBeanName("beanName");
        this.bean.afterPropertiesSet();
        assertThat(this.bean.getUniqueName()).isEqualTo("beanName");
    }

    @Test
    public void doesNotSetUniqueNameIfNotNull() throws Exception {
        this.bean.setBeanName("beanName");
        this.bean.setUniqueName("un");
        this.bean.afterPropertiesSet();
        assertThat(this.bean.getUniqueName()).isEqualTo("un");
    }

    @Test
    public void setConnectionFactory() throws Exception {
        XAConnectionFactory factory = Mockito.mock(XAConnectionFactory.class);
        this.bean.setConnectionFactory(factory);
        this.bean.setBeanName("beanName");
        this.bean.afterPropertiesSet();
        this.bean.init();
        this.bean.createPooledConnection(factory, this.bean);
        Mockito.verify(factory).createXAConnection();
    }
}

