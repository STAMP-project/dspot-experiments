package org.apache.commons.lang3;


import org.junit.Assert;
import org.junit.Test;


public class AmplJavaVersionTest {
    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10207() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54_add10207__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71null13255() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088_literalMutationString17514() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1[.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109_add11185_literalMutationString18362() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("`.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        o_testGetJavaVersionnull109__8.toString();
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_literalMutationString1385() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1?.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101_add11681() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681__10 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18_add11996_literalMutationString18252() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0A.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("z.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        o_testGetJavaVersion_literalMutationString18__9.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_literalMutationString1385_add30567() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1?.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47_literalMutationString1385_add30567__34 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47_literalMutationString1385_add30567__34)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47_literalMutationString1385_add30567__34)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206_literalMutationString21701() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("11.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105_literalMutationString4667() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1T.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString23_add9797() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString23__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__4 = JavaVersion.get("1[.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
        o_testGetJavaVersion_literalMutationString23__3.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4null12913null37150() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__9);
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6_literalMutationString668() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("+.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10207null36614() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__1);
        JavaVersion o_testGetJavaVersion_literalMutationString54_add10207__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64null13799() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63null13249null37610() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__5);
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__14);
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54null13207() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109_add11185() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        o_testGetJavaVersionnull109__8.toString();
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_literalMutationString1385_add30571() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1?.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47_literalMutationString1385_add30571__40 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47_literalMutationString1385_add30571__40)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47_literalMutationString1385_add30571__40)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47null13074() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100_add11376_add31743() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        o_testGetJavaVersionnull100__10.toString();
        o_testGetJavaVersionnull100__13.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9985() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9985__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18_add11996_add32362() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("z.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        o_testGetJavaVersion_literalMutationString18__9.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        o_testGetJavaVersion_literalMutationString18__13.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9989() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9989__7 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9989__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9989__7)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10207null36622() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54_add10207__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__8);
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100_add11376() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        o_testGetJavaVersionnull100__10.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088null36796() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__2);
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4null12913() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9985_literalMutationString21505() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9985__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("3.5");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__6);
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_literalMutationString1385_literalMutationString15066() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("12.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1?.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54null13207_literalMutationString22228() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("C.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101_add11681_add31593() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681__10 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681_add31593__43 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101_add11681_add31593__43)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101_add11681_add31593__43)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70_add12065_add32137() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70_add12065_add32137__43 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70_add12065_add32137__43)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        o_testGetJavaVersion_literalMutationString70__13.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70_add12065_add32137__43)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70_add12065() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        o_testGetJavaVersion_literalMutationString70__13.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71_add10370() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        o_testGetJavaVersion_literalMutationString71__4.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18_add11996_remove36339() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("z.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18_add11996() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("z.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        o_testGetJavaVersion_literalMutationString18__9.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10207_literalMutationString16531() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54_add10207__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("<C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48null12975() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9985null37550() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9985__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__5);
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_literalMutationString1385null36350() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1?.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71_add10370_add32072() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        o_testGetJavaVersion_literalMutationString71__5.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        o_testGetJavaVersion_literalMutationString71__4.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_literalMutationString1385null36351() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__5);
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17null13858_add33551() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17null13858_add33551__7 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17null13858_add33551__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17null13858_add33551__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17null13858() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110null13635() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString23_add9797_add32535() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString23__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__4 = JavaVersion.get("1[.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23_add9797_add32535__37 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23_add9797_add32535__37)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
        o_testGetJavaVersion_literalMutationString23__3.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23_add9797_add32535__37)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63null13249() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__14);
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51_add10045() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51_add10045__25 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51_add10045__25)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51_add10045__25)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104null13516() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63null13243() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__8);
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString15_add10281() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString15__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__3 = JavaVersion.get("12");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__15)).toString());
        o_testGetJavaVersion_literalMutationString15__3.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63_add10306_remove36324() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48null12971() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__6);
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull102null13558() throws Exception {
        JavaVersion o_testGetJavaVersionnull102__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        JavaVersion o_testGetJavaVersionnull102__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        JavaVersion o_testGetJavaVersionnull102__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        JavaVersion o_testGetJavaVersionnull102__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        JavaVersion o_testGetJavaVersionnull102__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        JavaVersion o_testGetJavaVersionnull102__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        JavaVersion o_testGetJavaVersionnull102__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        JavaVersion o_testGetJavaVersionnull102__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        JavaVersion o_testGetJavaVersionnull102__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        JavaVersion o_testGetJavaVersionnull102__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        JavaVersion o_testGetJavaVersionnull102__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        JavaVersion o_testGetJavaVersionnull102__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull102__12);
        JavaVersion o_testGetJavaVersionnull102__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        JavaVersion o_testGetJavaVersionnull102__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
        JavaVersion o_testGetJavaVersionnull102__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull102__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString23_add9797_remove36343() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString23__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__4 = JavaVersion.get("1[.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6_add9433() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6_add9433__31 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6_add9433__31)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6_add9433__31)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51null13156() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString51__11);
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString51__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull107_add11558_remove36341() throws Exception {
        JavaVersion o_testGetJavaVersionnull107__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        JavaVersion o_testGetJavaVersionnull107__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        JavaVersion o_testGetJavaVersionnull107__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        JavaVersion o_testGetJavaVersionnull107__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        JavaVersion o_testGetJavaVersionnull107__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        JavaVersion o_testGetJavaVersionnull107__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        JavaVersion o_testGetJavaVersionnull107__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        JavaVersion o_testGetJavaVersionnull107__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        JavaVersion o_testGetJavaVersionnull107__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        JavaVersion o_testGetJavaVersionnull107__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        JavaVersion o_testGetJavaVersionnull107__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        JavaVersion o_testGetJavaVersionnull107__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        JavaVersion o_testGetJavaVersionnull107__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        JavaVersion o_testGetJavaVersionnull107__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
        JavaVersion o_testGetJavaVersionnull107__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4_add9353() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        o_testGetJavaVersion_literalMutationString4__14.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString15() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString15__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__3 = JavaVersion.get("12");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString78null13198() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString78__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString78__8);
        JavaVersion o_testGetJavaVersion_literalMutationString78__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__14 = JavaVersion.getJavaVersion("w.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString78__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull103null13691() throws Exception {
        JavaVersion o_testGetJavaVersionnull103__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        JavaVersion o_testGetJavaVersionnull103__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        JavaVersion o_testGetJavaVersionnull103__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        JavaVersion o_testGetJavaVersionnull103__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull103__4);
        JavaVersion o_testGetJavaVersionnull103__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        JavaVersion o_testGetJavaVersionnull103__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        JavaVersion o_testGetJavaVersionnull103__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        JavaVersion o_testGetJavaVersionnull103__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        JavaVersion o_testGetJavaVersionnull103__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        JavaVersion o_testGetJavaVersionnull103__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        JavaVersion o_testGetJavaVersionnull103__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        JavaVersion o_testGetJavaVersionnull103__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        JavaVersion o_testGetJavaVersionnull103__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        JavaVersion o_testGetJavaVersionnull103__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
        JavaVersion o_testGetJavaVersionnull103__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull103__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_add9812() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        o_testGetJavaVersion_literalMutationString47__2.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64null13804() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__14);
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_add9817() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47_add9817__13 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47_add9817__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47_add9817__13)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("z.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51_add10068_remove36326() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101null13707() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__7);
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString23() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString23__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__4 = JavaVersion.get("1[.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString22() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString22__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__4 = JavaVersion.get(" .3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString21() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString21__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__4 = JavaVersion.get("13");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100_add11376_remove36330() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47null13074_add32706() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47null13074_add32706__40 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47null13074_add32706__40)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47null13074_add32706__40)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51null13151() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString51__6);
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString51__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71null13255_literalMutationString20274() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("a.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17_add12130() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        o_testGetJavaVersion_literalMutationString17__10.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull106_add11128() throws Exception {
        JavaVersion o_testGetJavaVersionnull106_add11128__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106_add11128__1)).toString());
        JavaVersion o_testGetJavaVersionnull106__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        JavaVersion o_testGetJavaVersionnull106__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        JavaVersion o_testGetJavaVersionnull106__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        JavaVersion o_testGetJavaVersionnull106__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        JavaVersion o_testGetJavaVersionnull106__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        JavaVersion o_testGetJavaVersionnull106__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        JavaVersion o_testGetJavaVersionnull106__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        JavaVersion o_testGetJavaVersionnull106__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        JavaVersion o_testGetJavaVersionnull106__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        JavaVersion o_testGetJavaVersionnull106__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        JavaVersion o_testGetJavaVersionnull106__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        JavaVersion o_testGetJavaVersionnull106__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        JavaVersion o_testGetJavaVersionnull106__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        JavaVersion o_testGetJavaVersionnull106__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
        JavaVersion o_testGetJavaVersionnull106__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106_add11128__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110null13635null37379() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull110__7);
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70null13829() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString70__9);
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString70__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString11() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString11__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__2 = JavaVersion.get("c.1");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString3null13165() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString3__1 = JavaVersion.get("*.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString3__5);
        JavaVersion o_testGetJavaVersion_literalMutationString3__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString3__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString10() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString10__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__2 = JavaVersion.get("1C.1");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString10__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString10__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51_add10068() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        o_testGetJavaVersion_literalMutationString51__10.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString76_literalMutationString4949() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString76__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__7 = JavaVersion.get("&.6");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__14 = JavaVersion.getJavaVersion("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105_literalMutationString4667null36395() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__4);
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1T.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206_literalMutationString21639() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("O.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54null13214() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__9);
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString69null13095() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString69__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString69__10);
        JavaVersion o_testGetJavaVersion_literalMutationString69__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__13 = JavaVersion.get("1`.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString69__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString36() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString36__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__6 = JavaVersion.get("1|.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString36__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString36__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_literalMutationString2115() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("16");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47null13084() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__14);
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString42() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString42__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__7 = JavaVersion.get("1V.6");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71null13255_add33485() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        o_testGetJavaVersion_literalMutationString71__12.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString41() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString41__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__7 = JavaVersion.get("^.6");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110null13635_add33665() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        o_testGetJavaVersionnull110__8.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString40() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString40__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__7 = JavaVersion.get("16");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString40__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString40__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString46() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString46__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__8 = JavaVersion.get("=.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70_add12065_remove36335() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6_literalMutationString668_add30636() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        o_testGetJavaVersion_literalMutationString6__2.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("+.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100null13597() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__9);
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47_add9812_remove36344() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6null12945() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString6__10);
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString6__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71_add10370null36866() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__11);
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        o_testGetJavaVersion_literalMutationString71__4.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_literalMutationString1708() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1*.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51_add10045null37574() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51_add10045__25 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51_add10045__25)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString51__13);
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51_add10045__25)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString51__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull108_add11329() throws Exception {
        JavaVersion o_testGetJavaVersionnull108__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        JavaVersion o_testGetJavaVersionnull108__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        JavaVersion o_testGetJavaVersionnull108__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        JavaVersion o_testGetJavaVersionnull108__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        JavaVersion o_testGetJavaVersionnull108__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        JavaVersion o_testGetJavaVersionnull108__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        JavaVersion o_testGetJavaVersionnull108__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        JavaVersion o_testGetJavaVersionnull108__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        JavaVersion o_testGetJavaVersionnull108__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        JavaVersion o_testGetJavaVersionnull108__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        JavaVersion o_testGetJavaVersionnull108__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        JavaVersion o_testGetJavaVersionnull108__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        JavaVersion o_testGetJavaVersionnull108__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        JavaVersion o_testGetJavaVersionnull108__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
        JavaVersion o_testGetJavaVersionnull108__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__15)).toString());
        o_testGetJavaVersionnull108__4.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString28() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString28__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__5 = JavaVersion.get("1Q.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull99() throws Exception {
        JavaVersion o_testGetJavaVersionnull99__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull99__1)).toString());
        JavaVersion o_testGetJavaVersionnull99__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull99__2)).toString());
        JavaVersion o_testGetJavaVersionnull99__3 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull99__3);
        JavaVersion o_testGetJavaVersionnull99__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull99__4)).toString());
        JavaVersion o_testGetJavaVersionnull99__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull99__5)).toString());
        JavaVersion o_testGetJavaVersionnull99__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__6)).toString());
        JavaVersion o_testGetJavaVersionnull99__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull99__7)).toString());
        JavaVersion o_testGetJavaVersionnull99__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull99__8)).toString());
        JavaVersion o_testGetJavaVersionnull99__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__9)).toString());
        JavaVersion o_testGetJavaVersionnull99__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull99__10)).toString());
        JavaVersion o_testGetJavaVersionnull99__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull99__11)).toString());
        JavaVersion o_testGetJavaVersionnull99__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__12)).toString());
        JavaVersion o_testGetJavaVersionnull99__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__13)).toString());
        JavaVersion o_testGetJavaVersionnull99__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__14)).toString());
        JavaVersion o_testGetJavaVersionnull99__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull99__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull99__2)).toString());
        Assert.assertNull(o_testGetJavaVersionnull99__3);
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull99__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull99__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull99__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull99__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull99__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull99__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63_add10293() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63_add10293__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63_add10293__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63_add10293__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull98() throws Exception {
        JavaVersion o_testGetJavaVersionnull98__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull98__1)).toString());
        JavaVersion o_testGetJavaVersionnull98__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull98__2);
        JavaVersion o_testGetJavaVersionnull98__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull98__3)).toString());
        JavaVersion o_testGetJavaVersionnull98__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull98__4)).toString());
        JavaVersion o_testGetJavaVersionnull98__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull98__5)).toString());
        JavaVersion o_testGetJavaVersionnull98__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__6)).toString());
        JavaVersion o_testGetJavaVersionnull98__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull98__7)).toString());
        JavaVersion o_testGetJavaVersionnull98__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull98__8)).toString());
        JavaVersion o_testGetJavaVersionnull98__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__9)).toString());
        JavaVersion o_testGetJavaVersionnull98__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull98__10)).toString());
        JavaVersion o_testGetJavaVersionnull98__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull98__11)).toString());
        JavaVersion o_testGetJavaVersionnull98__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__12)).toString());
        JavaVersion o_testGetJavaVersionnull98__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__13)).toString());
        JavaVersion o_testGetJavaVersionnull98__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__14)).toString());
        JavaVersion o_testGetJavaVersionnull98__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull98__1)).toString());
        Assert.assertNull(o_testGetJavaVersionnull98__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull98__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull98__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull98__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull98__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull98__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull98__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull98__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString25() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString25__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__5 = JavaVersion.get("{.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString25__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString25__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull97() throws Exception {
        JavaVersion o_testGetJavaVersionnull97__1 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull97__1);
        JavaVersion o_testGetJavaVersionnull97__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull97__2)).toString());
        JavaVersion o_testGetJavaVersionnull97__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull97__3)).toString());
        JavaVersion o_testGetJavaVersionnull97__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull97__4)).toString());
        JavaVersion o_testGetJavaVersionnull97__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull97__5)).toString());
        JavaVersion o_testGetJavaVersionnull97__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__6)).toString());
        JavaVersion o_testGetJavaVersionnull97__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull97__7)).toString());
        JavaVersion o_testGetJavaVersionnull97__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull97__8)).toString());
        JavaVersion o_testGetJavaVersionnull97__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__9)).toString());
        JavaVersion o_testGetJavaVersionnull97__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull97__10)).toString());
        JavaVersion o_testGetJavaVersionnull97__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull97__11)).toString());
        JavaVersion o_testGetJavaVersionnull97__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__12)).toString());
        JavaVersion o_testGetJavaVersionnull97__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__13)).toString());
        JavaVersion o_testGetJavaVersionnull97__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__14)).toString());
        JavaVersion o_testGetJavaVersionnull97__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__15)).toString());
        Assert.assertNull(o_testGetJavaVersionnull97__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull97__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull97__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull97__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull97__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull97__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull97__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull97__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull97__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48null12975_add34366() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48null12975_add34366__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48null12975_add34366__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48null12975_add34366__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString30() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString30__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__5 = JavaVersion.get("14");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString30__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString30__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString35() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString35__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__6 = JavaVersion.get("2.5");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString35__6);
        JavaVersion o_testGetJavaVersion_literalMutationString35__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__5)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString35__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71null13255_add33492() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        o_testGetJavaVersion_literalMutationString71__1.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString34() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString34__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__6 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104null13516_literalMutationString20003() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17_add12130_remove36336() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString75_add9613() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString75__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75_add9613__37 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75_add9613__37)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__14 = JavaVersion.getJavaVersion("1O.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75_add9613__37)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9989null36588() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9989__7 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9989__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__5);
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9989__7)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101_add11681_literalMutationString16921() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681__10 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("P.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105null13676() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__3);
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__3);
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48null12975null37625() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__6);
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104null13516null37274() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull104__14);
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088null36804() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__11);
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString23null13063() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString23__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__4 = JavaVersion.get("1[.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString23__8);
        JavaVersion o_testGetJavaVersion_literalMutationString23__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString23__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4null12913_add32955() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4null12913_add32955__37 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4null12913_add32955__37)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4null12913_add32955__37)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString15_add10281_remove36337() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString15__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__3 = JavaVersion.get("12");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109_add11185_add32408() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        o_testGetJavaVersionnull109__8.toString();
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        o_testGetJavaVersionnull109__14.toString();
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64_add11955() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64_add11955__28 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64_add11955__28)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64_add11955__28)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6_literalMutationString668_literalMutationString15216() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("a.1");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("+.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64_add11957() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64_add11957__31 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64_add11957__31)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64_add11957__31)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9985_add34182() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9985__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        o_testGetJavaVersion_literalMutationString53__5.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9985__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString3_add10095() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString3__1 = JavaVersion.get("*.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3_add10095__34 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3_add10095__34)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3_add10095__34)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101_add11681null36705() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681__10 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull101__14);
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17null13858null37350() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__5);
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109_add11185null36969() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        o_testGetJavaVersionnull109__8.toString();
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__10);
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString47null13074null37059() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString47__1 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__1);
        JavaVersion o_testGetJavaVersion_literalMutationString47__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        JavaVersion o_testGetJavaVersion_literalMutationString47__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString47__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__3)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString47__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString47__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString7_add9411() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString7__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__2 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__15)).toString());
        o_testGetJavaVersion_literalMutationString7__13.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull102_add11216() throws Exception {
        JavaVersion o_testGetJavaVersionnull102__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        JavaVersion o_testGetJavaVersionnull102__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        JavaVersion o_testGetJavaVersionnull102_add11216__7 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102_add11216__7)).toString());
        JavaVersion o_testGetJavaVersionnull102__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        JavaVersion o_testGetJavaVersionnull102__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        JavaVersion o_testGetJavaVersionnull102__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        JavaVersion o_testGetJavaVersionnull102__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        JavaVersion o_testGetJavaVersionnull102__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        JavaVersion o_testGetJavaVersionnull102__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        JavaVersion o_testGetJavaVersionnull102__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        JavaVersion o_testGetJavaVersionnull102__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        JavaVersion o_testGetJavaVersionnull102__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        JavaVersion o_testGetJavaVersionnull102__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__12)).toString());
        JavaVersion o_testGetJavaVersionnull102__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        JavaVersion o_testGetJavaVersionnull102__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
        JavaVersion o_testGetJavaVersionnull102__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102_add11216__7)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54null13207_add34575() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        o_testGetJavaVersion_literalMutationString54__14.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17null13858_literalMutationString20434() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("1_.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1$.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString17__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63_add10306() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        o_testGetJavaVersion_literalMutationString63__7.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206_remove36345() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110null13635_literalMutationString20551() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersionnull110__1);
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206null37585() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__9);
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206null37587() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__11);
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48null12975_literalMutationString21883() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1l.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString48__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48_add9541() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        o_testGetJavaVersion_literalMutationString48__11.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088_literalMutationString17490() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64null13799null37027() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4_add9353_remove36328() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString7() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString7__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__2 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54null13207null37679() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__5);
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString54__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109_literalMutationString3848() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0i.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString3() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString3__1 = JavaVersion.get("*.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString3__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString3__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206_add34240() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48_add9529() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48_add9529__43 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48_add9529__43)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48_add9529__43)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71_literalMutationString2381() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1@.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull102() throws Exception {
        JavaVersion o_testGetJavaVersionnull102__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        JavaVersion o_testGetJavaVersionnull102__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        JavaVersion o_testGetJavaVersionnull102__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        JavaVersion o_testGetJavaVersionnull102__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        JavaVersion o_testGetJavaVersionnull102__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        JavaVersion o_testGetJavaVersionnull102__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        JavaVersion o_testGetJavaVersionnull102__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        JavaVersion o_testGetJavaVersionnull102__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        JavaVersion o_testGetJavaVersionnull102__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        JavaVersion o_testGetJavaVersionnull102__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        JavaVersion o_testGetJavaVersionnull102__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        JavaVersion o_testGetJavaVersionnull102__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__12)).toString());
        JavaVersion o_testGetJavaVersionnull102__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        JavaVersion o_testGetJavaVersionnull102__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
        JavaVersion o_testGetJavaVersionnull102__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString69() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString69__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__13 = JavaVersion.get("1`.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull107_add11558() throws Exception {
        JavaVersion o_testGetJavaVersionnull107__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        JavaVersion o_testGetJavaVersionnull107__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        JavaVersion o_testGetJavaVersionnull107__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        JavaVersion o_testGetJavaVersionnull107__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        JavaVersion o_testGetJavaVersionnull107__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        o_testGetJavaVersionnull107__5.toString();
        JavaVersion o_testGetJavaVersionnull107__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        JavaVersion o_testGetJavaVersionnull107__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        JavaVersion o_testGetJavaVersionnull107__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        JavaVersion o_testGetJavaVersionnull107__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        JavaVersion o_testGetJavaVersionnull107__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        JavaVersion o_testGetJavaVersionnull107__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        JavaVersion o_testGetJavaVersionnull107__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        JavaVersion o_testGetJavaVersionnull107__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        JavaVersion o_testGetJavaVersionnull107__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
        JavaVersion o_testGetJavaVersionnull107__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull106() throws Exception {
        JavaVersion o_testGetJavaVersionnull106__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        JavaVersion o_testGetJavaVersionnull106__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        JavaVersion o_testGetJavaVersionnull106__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        JavaVersion o_testGetJavaVersionnull106__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        JavaVersion o_testGetJavaVersionnull106__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        JavaVersion o_testGetJavaVersionnull106__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        JavaVersion o_testGetJavaVersionnull106__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        JavaVersion o_testGetJavaVersionnull106__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        JavaVersion o_testGetJavaVersionnull106__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        JavaVersion o_testGetJavaVersionnull106__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        JavaVersion o_testGetJavaVersionnull106__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        JavaVersion o_testGetJavaVersionnull106__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        JavaVersion o_testGetJavaVersionnull106__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        JavaVersion o_testGetJavaVersionnull106__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
        JavaVersion o_testGetJavaVersionnull106__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull103() throws Exception {
        JavaVersion o_testGetJavaVersionnull103__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        JavaVersion o_testGetJavaVersionnull103__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        JavaVersion o_testGetJavaVersionnull103__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        JavaVersion o_testGetJavaVersionnull103__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        JavaVersion o_testGetJavaVersionnull103__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        JavaVersion o_testGetJavaVersionnull103__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        JavaVersion o_testGetJavaVersionnull103__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        JavaVersion o_testGetJavaVersionnull103__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        JavaVersion o_testGetJavaVersionnull103__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        JavaVersion o_testGetJavaVersionnull103__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        JavaVersion o_testGetJavaVersionnull103__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        JavaVersion o_testGetJavaVersionnull103__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        JavaVersion o_testGetJavaVersionnull103__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        JavaVersion o_testGetJavaVersionnull103__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
        JavaVersion o_testGetJavaVersionnull103__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString75() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString75__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__14 = JavaVersion.getJavaVersion("1O.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull103_literalMutationString4680() throws Exception {
        JavaVersion o_testGetJavaVersionnull103__1 = JavaVersion.get("0U.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        JavaVersion o_testGetJavaVersionnull103__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        JavaVersion o_testGetJavaVersionnull103__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        JavaVersion o_testGetJavaVersionnull103__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        JavaVersion o_testGetJavaVersionnull103__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        JavaVersion o_testGetJavaVersionnull103__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        JavaVersion o_testGetJavaVersionnull103__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        JavaVersion o_testGetJavaVersionnull103__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        JavaVersion o_testGetJavaVersionnull103__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        JavaVersion o_testGetJavaVersionnull103__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        JavaVersion o_testGetJavaVersionnull103__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        JavaVersion o_testGetJavaVersionnull103__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        JavaVersion o_testGetJavaVersionnull103__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        JavaVersion o_testGetJavaVersionnull103__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
        JavaVersion o_testGetJavaVersionnull103__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6_literalMutationString668null36378() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("0}.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString6__2);
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("+.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString6__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18null13815() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("z.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString18__10);
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString18__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088_add31889() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088_add31889__16 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104_add11088_add31889__16)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104_add11088_add31889__16)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString78() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString78__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__14 = JavaVersion.getJavaVersion("w.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18_add11996null36947() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString18__3);
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        o_testGetJavaVersion_literalMutationString18__9.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString18__3);
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString76() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString76__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__14 = JavaVersion.getJavaVersion("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString69_add9883() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString69__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__13 = JavaVersion.get("1`.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__15)).toString());
        o_testGetJavaVersion_literalMutationString69__1.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104_add11088_add31887() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104_add11088_add31887__13 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104_add11088_add31887__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104_add11088__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104_add11088_add31887__13)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101_add11681_add31566() throws Exception {
        JavaVersion o_testGetJavaVersionnull101_add11681_add31566__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101_add11681_add31566__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681__10 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101_add11681_add31566__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull107null13664() throws Exception {
        JavaVersion o_testGetJavaVersionnull107__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        JavaVersion o_testGetJavaVersionnull107__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        JavaVersion o_testGetJavaVersionnull107__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        JavaVersion o_testGetJavaVersionnull107__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        JavaVersion o_testGetJavaVersionnull107__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull107__5);
        JavaVersion o_testGetJavaVersionnull107__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        JavaVersion o_testGetJavaVersionnull107__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        JavaVersion o_testGetJavaVersionnull107__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        JavaVersion o_testGetJavaVersionnull107__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        JavaVersion o_testGetJavaVersionnull107__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        JavaVersion o_testGetJavaVersionnull107__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        JavaVersion o_testGetJavaVersionnull107__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        JavaVersion o_testGetJavaVersionnull107__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        JavaVersion o_testGetJavaVersionnull107__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
        JavaVersion o_testGetJavaVersionnull107__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull107__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull106null13529() throws Exception {
        JavaVersion o_testGetJavaVersionnull106__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        JavaVersion o_testGetJavaVersionnull106__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        JavaVersion o_testGetJavaVersionnull106__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        JavaVersion o_testGetJavaVersionnull106__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        JavaVersion o_testGetJavaVersionnull106__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        JavaVersion o_testGetJavaVersionnull106__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        JavaVersion o_testGetJavaVersionnull106__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        JavaVersion o_testGetJavaVersionnull106__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        JavaVersion o_testGetJavaVersionnull106__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        JavaVersion o_testGetJavaVersionnull106__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        JavaVersion o_testGetJavaVersionnull106__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull106__11);
        JavaVersion o_testGetJavaVersionnull106__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        JavaVersion o_testGetJavaVersionnull106__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        JavaVersion o_testGetJavaVersionnull106__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
        JavaVersion o_testGetJavaVersionnull106__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        Assert.assertNull(o_testGetJavaVersionnull106__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101_add11681null36692() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__1);
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101_add11681__10 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101_add11681__10)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString78_literalMutationString2022() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString78__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__5 = JavaVersion.get("14");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__14 = JavaVersion.getJavaVersion("w.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull107() throws Exception {
        JavaVersion o_testGetJavaVersionnull107__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        JavaVersion o_testGetJavaVersionnull107__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        JavaVersion o_testGetJavaVersionnull107__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        JavaVersion o_testGetJavaVersionnull107__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        JavaVersion o_testGetJavaVersionnull107__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        JavaVersion o_testGetJavaVersionnull107__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        JavaVersion o_testGetJavaVersionnull107__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        JavaVersion o_testGetJavaVersionnull107__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        JavaVersion o_testGetJavaVersionnull107__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        JavaVersion o_testGetJavaVersionnull107__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        JavaVersion o_testGetJavaVersionnull107__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        JavaVersion o_testGetJavaVersionnull107__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        JavaVersion o_testGetJavaVersionnull107__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        JavaVersion o_testGetJavaVersionnull107__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
        JavaVersion o_testGetJavaVersionnull107__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull108() throws Exception {
        JavaVersion o_testGetJavaVersionnull108__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        JavaVersion o_testGetJavaVersionnull108__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        JavaVersion o_testGetJavaVersionnull108__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        JavaVersion o_testGetJavaVersionnull108__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        JavaVersion o_testGetJavaVersionnull108__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        JavaVersion o_testGetJavaVersionnull108__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        JavaVersion o_testGetJavaVersionnull108__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        JavaVersion o_testGetJavaVersionnull108__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        JavaVersion o_testGetJavaVersionnull108__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        JavaVersion o_testGetJavaVersionnull108__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        JavaVersion o_testGetJavaVersionnull108__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        JavaVersion o_testGetJavaVersionnull108__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        JavaVersion o_testGetJavaVersionnull108__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        JavaVersion o_testGetJavaVersionnull108__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
        JavaVersion o_testGetJavaVersionnull108__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105_add11620() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        o_testGetJavaVersionnull105__1.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull103_add11670() throws Exception {
        JavaVersion o_testGetJavaVersionnull103__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        JavaVersion o_testGetJavaVersionnull103__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        JavaVersion o_testGetJavaVersionnull103__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        JavaVersion o_testGetJavaVersionnull103__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        JavaVersion o_testGetJavaVersionnull103__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        JavaVersion o_testGetJavaVersionnull103__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        JavaVersion o_testGetJavaVersionnull103__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        JavaVersion o_testGetJavaVersionnull103__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        JavaVersion o_testGetJavaVersionnull103__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        JavaVersion o_testGetJavaVersionnull103__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        JavaVersion o_testGetJavaVersionnull103__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        JavaVersion o_testGetJavaVersionnull103__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        JavaVersion o_testGetJavaVersionnull103__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        JavaVersion o_testGetJavaVersionnull103__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
        JavaVersion o_testGetJavaVersionnull103__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__15)).toString());
        o_testGetJavaVersionnull103__10.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105_add11629() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        o_testGetJavaVersionnull105__11.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString48_add9541_remove36325() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString48__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__8 = JavaVersion.get("1s.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString48__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString48__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104null13516_add33321() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104null13516_add33321__40 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104null13516_add33321__40)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104null13516_add33321__40)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64null13799_add32560() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        o_testGetJavaVersion_literalMutationString64__2.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10207_add31367() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54_add10207__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        o_testGetJavaVersion_literalMutationString54__15.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add87() throws Exception {
        JavaVersion o_testGetJavaVersion_add87__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add87__1)).toString());
        JavaVersion o_testGetJavaVersion_add87__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add87__2)).toString());
        JavaVersion o_testGetJavaVersion_add87__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add87__3)).toString());
        JavaVersion o_testGetJavaVersion_add87__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add87__4)).toString());
        JavaVersion o_testGetJavaVersion_add87__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add87__5)).toString());
        JavaVersion o_testGetJavaVersion_add87__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__6)).toString());
        JavaVersion o_testGetJavaVersion_add87__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__7)).toString());
        JavaVersion o_testGetJavaVersion_add87__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add87__8)).toString());
        JavaVersion o_testGetJavaVersion_add87__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add87__9)).toString());
        JavaVersion o_testGetJavaVersion_add87__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__10)).toString());
        JavaVersion o_testGetJavaVersion_add87__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add87__11)).toString());
        JavaVersion o_testGetJavaVersion_add87__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add87__12)).toString());
        JavaVersion o_testGetJavaVersion_add87__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__13)).toString());
        JavaVersion o_testGetJavaVersion_add87__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__14)).toString());
        JavaVersion o_testGetJavaVersion_add87__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__15)).toString());
        JavaVersion o_testGetJavaVersion_add87__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add87__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add87__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add87__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add87__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add87__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add87__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add87__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add87__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add87__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100_add11376_literalMutationString17150() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("c.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        o_testGetJavaVersionnull100__10.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add88() throws Exception {
        JavaVersion o_testGetJavaVersion_add88__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add88__1)).toString());
        JavaVersion o_testGetJavaVersion_add88__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add88__2)).toString());
        JavaVersion o_testGetJavaVersion_add88__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add88__3)).toString());
        JavaVersion o_testGetJavaVersion_add88__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add88__4)).toString());
        JavaVersion o_testGetJavaVersion_add88__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add88__5)).toString());
        JavaVersion o_testGetJavaVersion_add88__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__6)).toString());
        JavaVersion o_testGetJavaVersion_add88__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__7)).toString());
        JavaVersion o_testGetJavaVersion_add88__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__8)).toString());
        JavaVersion o_testGetJavaVersion_add88__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add88__9)).toString());
        JavaVersion o_testGetJavaVersion_add88__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__10)).toString());
        JavaVersion o_testGetJavaVersion_add88__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add88__11)).toString());
        JavaVersion o_testGetJavaVersion_add88__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add88__12)).toString());
        JavaVersion o_testGetJavaVersion_add88__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__13)).toString());
        JavaVersion o_testGetJavaVersion_add88__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__14)).toString());
        JavaVersion o_testGetJavaVersion_add88__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__15)).toString());
        JavaVersion o_testGetJavaVersion_add88__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add88__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add88__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add88__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add88__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add88__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add88__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add88__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add88__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add89() throws Exception {
        JavaVersion o_testGetJavaVersion_add89__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add89__1)).toString());
        JavaVersion o_testGetJavaVersion_add89__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add89__2)).toString());
        JavaVersion o_testGetJavaVersion_add89__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add89__3)).toString());
        JavaVersion o_testGetJavaVersion_add89__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add89__4)).toString());
        JavaVersion o_testGetJavaVersion_add89__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add89__5)).toString());
        JavaVersion o_testGetJavaVersion_add89__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__6)).toString());
        JavaVersion o_testGetJavaVersion_add89__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add89__7)).toString());
        JavaVersion o_testGetJavaVersion_add89__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__8)).toString());
        JavaVersion o_testGetJavaVersion_add89__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__9)).toString());
        JavaVersion o_testGetJavaVersion_add89__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__10)).toString());
        JavaVersion o_testGetJavaVersion_add89__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add89__11)).toString());
        JavaVersion o_testGetJavaVersion_add89__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add89__12)).toString());
        JavaVersion o_testGetJavaVersion_add89__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__13)).toString());
        JavaVersion o_testGetJavaVersion_add89__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__14)).toString());
        JavaVersion o_testGetJavaVersion_add89__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__15)).toString());
        JavaVersion o_testGetJavaVersion_add89__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add89__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add89__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add89__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add89__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add89__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add89__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add89__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add89__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add83() throws Exception {
        JavaVersion o_testGetJavaVersion_add83__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add83__1)).toString());
        JavaVersion o_testGetJavaVersion_add83__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__2)).toString());
        JavaVersion o_testGetJavaVersion_add83__3 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__3)).toString());
        JavaVersion o_testGetJavaVersion_add83__4 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add83__4)).toString());
        JavaVersion o_testGetJavaVersion_add83__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add83__5)).toString());
        JavaVersion o_testGetJavaVersion_add83__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add83__6)).toString());
        JavaVersion o_testGetJavaVersion_add83__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__7)).toString());
        JavaVersion o_testGetJavaVersion_add83__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add83__8)).toString());
        JavaVersion o_testGetJavaVersion_add83__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add83__9)).toString());
        JavaVersion o_testGetJavaVersion_add83__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__10)).toString());
        JavaVersion o_testGetJavaVersion_add83__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add83__11)).toString());
        JavaVersion o_testGetJavaVersion_add83__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add83__12)).toString());
        JavaVersion o_testGetJavaVersion_add83__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__13)).toString());
        JavaVersion o_testGetJavaVersion_add83__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__14)).toString());
        JavaVersion o_testGetJavaVersion_add83__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__15)).toString());
        JavaVersion o_testGetJavaVersion_add83__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add83__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__2)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__3)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add83__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add83__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add83__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add83__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add83__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add83__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add83__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString76_add11773() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString76__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76_add11773__19 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76_add11773__19)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__14 = JavaVersion.getJavaVersion("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76_add11773__19)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add84() throws Exception {
        JavaVersion o_testGetJavaVersion_add84__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add84__1)).toString());
        JavaVersion o_testGetJavaVersion_add84__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add84__2)).toString());
        JavaVersion o_testGetJavaVersion_add84__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__3)).toString());
        JavaVersion o_testGetJavaVersion_add84__4 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__4)).toString());
        JavaVersion o_testGetJavaVersion_add84__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add84__5)).toString());
        JavaVersion o_testGetJavaVersion_add84__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add84__6)).toString());
        JavaVersion o_testGetJavaVersion_add84__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__7)).toString());
        JavaVersion o_testGetJavaVersion_add84__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add84__8)).toString());
        JavaVersion o_testGetJavaVersion_add84__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add84__9)).toString());
        JavaVersion o_testGetJavaVersion_add84__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__10)).toString());
        JavaVersion o_testGetJavaVersion_add84__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add84__11)).toString());
        JavaVersion o_testGetJavaVersion_add84__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add84__12)).toString());
        JavaVersion o_testGetJavaVersion_add84__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__13)).toString());
        JavaVersion o_testGetJavaVersion_add84__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__14)).toString());
        JavaVersion o_testGetJavaVersion_add84__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__15)).toString());
        JavaVersion o_testGetJavaVersion_add84__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add84__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add84__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__3)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add84__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add84__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add84__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add84__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add84__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add84__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53_add9989_add31264() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53_add9989__7 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9989__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        o_testGetJavaVersion_literalMutationString53__10.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53_add9989__7)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add85() throws Exception {
        JavaVersion o_testGetJavaVersion_add85__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add85__1)).toString());
        JavaVersion o_testGetJavaVersion_add85__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add85__2)).toString());
        JavaVersion o_testGetJavaVersion_add85__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add85__3)).toString());
        JavaVersion o_testGetJavaVersion_add85__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__4)).toString());
        JavaVersion o_testGetJavaVersion_add85__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__5)).toString());
        JavaVersion o_testGetJavaVersion_add85__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add85__6)).toString());
        JavaVersion o_testGetJavaVersion_add85__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__7)).toString());
        JavaVersion o_testGetJavaVersion_add85__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add85__8)).toString());
        JavaVersion o_testGetJavaVersion_add85__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add85__9)).toString());
        JavaVersion o_testGetJavaVersion_add85__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__10)).toString());
        JavaVersion o_testGetJavaVersion_add85__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add85__11)).toString());
        JavaVersion o_testGetJavaVersion_add85__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add85__12)).toString());
        JavaVersion o_testGetJavaVersion_add85__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__13)).toString());
        JavaVersion o_testGetJavaVersion_add85__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__14)).toString());
        JavaVersion o_testGetJavaVersion_add85__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__15)).toString());
        JavaVersion o_testGetJavaVersion_add85__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add85__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add85__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add85__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add85__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add85__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add85__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add85__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add85__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add86() throws Exception {
        JavaVersion o_testGetJavaVersion_add86__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add86__1)).toString());
        JavaVersion o_testGetJavaVersion_add86__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add86__2)).toString());
        JavaVersion o_testGetJavaVersion_add86__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add86__3)).toString());
        JavaVersion o_testGetJavaVersion_add86__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add86__4)).toString());
        JavaVersion o_testGetJavaVersion_add86__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__5)).toString());
        JavaVersion o_testGetJavaVersion_add86__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__6)).toString());
        JavaVersion o_testGetJavaVersion_add86__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__7)).toString());
        JavaVersion o_testGetJavaVersion_add86__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add86__8)).toString());
        JavaVersion o_testGetJavaVersion_add86__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add86__9)).toString());
        JavaVersion o_testGetJavaVersion_add86__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__10)).toString());
        JavaVersion o_testGetJavaVersion_add86__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add86__11)).toString());
        JavaVersion o_testGetJavaVersion_add86__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add86__12)).toString());
        JavaVersion o_testGetJavaVersion_add86__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__13)).toString());
        JavaVersion o_testGetJavaVersion_add86__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__14)).toString());
        JavaVersion o_testGetJavaVersion_add86__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__15)).toString());
        JavaVersion o_testGetJavaVersion_add86__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add86__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add86__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add86__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add86__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add86__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add86__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add86__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add86__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add82() throws Exception {
        JavaVersion o_testGetJavaVersion_add82__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__1)).toString());
        JavaVersion o_testGetJavaVersion_add82__2 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__2)).toString());
        JavaVersion o_testGetJavaVersion_add82__3 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add82__3)).toString());
        JavaVersion o_testGetJavaVersion_add82__4 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add82__4)).toString());
        JavaVersion o_testGetJavaVersion_add82__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add82__5)).toString());
        JavaVersion o_testGetJavaVersion_add82__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add82__6)).toString());
        JavaVersion o_testGetJavaVersion_add82__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__7)).toString());
        JavaVersion o_testGetJavaVersion_add82__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add82__8)).toString());
        JavaVersion o_testGetJavaVersion_add82__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add82__9)).toString());
        JavaVersion o_testGetJavaVersion_add82__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__10)).toString());
        JavaVersion o_testGetJavaVersion_add82__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add82__11)).toString());
        JavaVersion o_testGetJavaVersion_add82__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add82__12)).toString());
        JavaVersion o_testGetJavaVersion_add82__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__13)).toString());
        JavaVersion o_testGetJavaVersion_add82__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__14)).toString());
        JavaVersion o_testGetJavaVersion_add82__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__15)).toString());
        JavaVersion o_testGetJavaVersion_add82__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__2)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add82__3)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add82__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add82__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add82__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add82__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add82__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add82__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add82__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull108_add11329_remove36342() throws Exception {
        JavaVersion o_testGetJavaVersionnull108__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        JavaVersion o_testGetJavaVersionnull108__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        JavaVersion o_testGetJavaVersionnull108__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        JavaVersion o_testGetJavaVersionnull108__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        JavaVersion o_testGetJavaVersionnull108__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        JavaVersion o_testGetJavaVersionnull108__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        JavaVersion o_testGetJavaVersionnull108__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        JavaVersion o_testGetJavaVersionnull108__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        JavaVersion o_testGetJavaVersionnull108__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        JavaVersion o_testGetJavaVersionnull108__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        JavaVersion o_testGetJavaVersionnull108__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        JavaVersion o_testGetJavaVersionnull108__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        JavaVersion o_testGetJavaVersionnull108__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        JavaVersion o_testGetJavaVersionnull108__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
        JavaVersion o_testGetJavaVersionnull108__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63null13249_add34335() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        o_testGetJavaVersion_literalMutationString63__6.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1T.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__14);
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString78_add10180() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString78__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        o_testGetJavaVersion_literalMutationString78__10.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString78__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__14 = JavaVersion.getJavaVersion("w.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString4null12913_literalMutationString19341() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString4__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        JavaVersion o_testGetJavaVersion_literalMutationString4__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__6 = JavaVersion.get("1-.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        JavaVersion o_testGetJavaVersion_literalMutationString4__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString4__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__7)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString4__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString4__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString7_add9411_remove36327() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString7__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__2 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105_literalMutationString4667_add30697() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        o_testGetJavaVersionnull105__11.toString();
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1T.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString15null13225() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString15__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__3 = JavaVersion.get("12");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString15__5);
        JavaVersion o_testGetJavaVersion_literalMutationString15__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString15__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70_add12065null36880() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString70__10);
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        o_testGetJavaVersion_literalMutationString70__13.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString70__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString64null13799_literalMutationString18652() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString64__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__3 = JavaVersion.get("12");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        JavaVersion o_testGetJavaVersion_literalMutationString64__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        JavaVersion o_testGetJavaVersion_literalMutationString64__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString64__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString64__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString64__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add94() throws Exception {
        JavaVersion o_testGetJavaVersion_add94__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add94__1)).toString());
        JavaVersion o_testGetJavaVersion_add94__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add94__2)).toString());
        JavaVersion o_testGetJavaVersion_add94__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add94__3)).toString());
        JavaVersion o_testGetJavaVersion_add94__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add94__4)).toString());
        JavaVersion o_testGetJavaVersion_add94__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add94__5)).toString());
        JavaVersion o_testGetJavaVersion_add94__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__6)).toString());
        JavaVersion o_testGetJavaVersion_add94__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add94__7)).toString());
        JavaVersion o_testGetJavaVersion_add94__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add94__8)).toString());
        JavaVersion o_testGetJavaVersion_add94__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__9)).toString());
        JavaVersion o_testGetJavaVersion_add94__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add94__10)).toString());
        JavaVersion o_testGetJavaVersion_add94__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add94__11)).toString());
        JavaVersion o_testGetJavaVersion_add94__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__12)).toString());
        JavaVersion o_testGetJavaVersion_add94__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__13)).toString());
        JavaVersion o_testGetJavaVersion_add94__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__14)).toString());
        JavaVersion o_testGetJavaVersion_add94__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__15)).toString());
        JavaVersion o_testGetJavaVersion_add94__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add94__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add94__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add94__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add94__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add94__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add94__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add94__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add94__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add94__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString23_add9797null37007() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString23__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__4 = JavaVersion.get("1[.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString23__6);
        JavaVersion o_testGetJavaVersion_literalMutationString23__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString23__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
        o_testGetJavaVersion_literalMutationString23__3.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__5)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString23__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString23__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add95() throws Exception {
        JavaVersion o_testGetJavaVersion_add95__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add95__1)).toString());
        JavaVersion o_testGetJavaVersion_add95__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add95__2)).toString());
        JavaVersion o_testGetJavaVersion_add95__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add95__3)).toString());
        JavaVersion o_testGetJavaVersion_add95__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add95__4)).toString());
        JavaVersion o_testGetJavaVersion_add95__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add95__5)).toString());
        JavaVersion o_testGetJavaVersion_add95__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__6)).toString());
        JavaVersion o_testGetJavaVersion_add95__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add95__7)).toString());
        JavaVersion o_testGetJavaVersion_add95__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add95__8)).toString());
        JavaVersion o_testGetJavaVersion_add95__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__9)).toString());
        JavaVersion o_testGetJavaVersion_add95__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add95__10)).toString());
        JavaVersion o_testGetJavaVersion_add95__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add95__11)).toString());
        JavaVersion o_testGetJavaVersion_add95__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__12)).toString());
        JavaVersion o_testGetJavaVersion_add95__13 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__13)).toString());
        JavaVersion o_testGetJavaVersion_add95__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__14)).toString());
        JavaVersion o_testGetJavaVersion_add95__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__15)).toString());
        JavaVersion o_testGetJavaVersion_add95__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add95__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add95__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add95__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add95__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add95__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add95__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add95__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add95__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add95__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add96() throws Exception {
        JavaVersion o_testGetJavaVersion_add96__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add96__1)).toString());
        JavaVersion o_testGetJavaVersion_add96__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add96__2)).toString());
        JavaVersion o_testGetJavaVersion_add96__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add96__3)).toString());
        JavaVersion o_testGetJavaVersion_add96__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add96__4)).toString());
        JavaVersion o_testGetJavaVersion_add96__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add96__5)).toString());
        JavaVersion o_testGetJavaVersion_add96__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__6)).toString());
        JavaVersion o_testGetJavaVersion_add96__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add96__7)).toString());
        JavaVersion o_testGetJavaVersion_add96__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add96__8)).toString());
        JavaVersion o_testGetJavaVersion_add96__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__9)).toString());
        JavaVersion o_testGetJavaVersion_add96__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add96__10)).toString());
        JavaVersion o_testGetJavaVersion_add96__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add96__11)).toString());
        JavaVersion o_testGetJavaVersion_add96__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__12)).toString());
        JavaVersion o_testGetJavaVersion_add96__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__13)).toString());
        JavaVersion o_testGetJavaVersion_add96__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__14)).toString());
        JavaVersion o_testGetJavaVersion_add96__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__15)).toString());
        JavaVersion o_testGetJavaVersion_add96__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add96__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add96__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add96__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add96__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add96__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add96__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add96__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add96__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add96__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add90() throws Exception {
        JavaVersion o_testGetJavaVersion_add90__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add90__1)).toString());
        JavaVersion o_testGetJavaVersion_add90__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add90__2)).toString());
        JavaVersion o_testGetJavaVersion_add90__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add90__3)).toString());
        JavaVersion o_testGetJavaVersion_add90__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add90__4)).toString());
        JavaVersion o_testGetJavaVersion_add90__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add90__5)).toString());
        JavaVersion o_testGetJavaVersion_add90__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__6)).toString());
        JavaVersion o_testGetJavaVersion_add90__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add90__7)).toString());
        JavaVersion o_testGetJavaVersion_add90__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add90__8)).toString());
        JavaVersion o_testGetJavaVersion_add90__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__9)).toString());
        JavaVersion o_testGetJavaVersion_add90__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__10)).toString());
        JavaVersion o_testGetJavaVersion_add90__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add90__11)).toString());
        JavaVersion o_testGetJavaVersion_add90__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add90__12)).toString());
        JavaVersion o_testGetJavaVersion_add90__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__13)).toString());
        JavaVersion o_testGetJavaVersion_add90__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__14)).toString());
        JavaVersion o_testGetJavaVersion_add90__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__15)).toString());
        JavaVersion o_testGetJavaVersion_add90__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add90__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add90__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add90__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add90__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add90__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add90__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add90__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add90__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add90__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100_add11376null36743() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__8);
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        o_testGetJavaVersionnull100__10.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add91() throws Exception {
        JavaVersion o_testGetJavaVersion_add91__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add91__1)).toString());
        JavaVersion o_testGetJavaVersion_add91__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add91__2)).toString());
        JavaVersion o_testGetJavaVersion_add91__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add91__3)).toString());
        JavaVersion o_testGetJavaVersion_add91__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add91__4)).toString());
        JavaVersion o_testGetJavaVersion_add91__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add91__5)).toString());
        JavaVersion o_testGetJavaVersion_add91__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__6)).toString());
        JavaVersion o_testGetJavaVersion_add91__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add91__7)).toString());
        JavaVersion o_testGetJavaVersion_add91__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add91__8)).toString());
        JavaVersion o_testGetJavaVersion_add91__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__9)).toString());
        JavaVersion o_testGetJavaVersion_add91__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__10)).toString());
        JavaVersion o_testGetJavaVersion_add91__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__11)).toString());
        JavaVersion o_testGetJavaVersion_add91__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add91__12)).toString());
        JavaVersion o_testGetJavaVersion_add91__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__13)).toString());
        JavaVersion o_testGetJavaVersion_add91__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__14)).toString());
        JavaVersion o_testGetJavaVersion_add91__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__15)).toString());
        JavaVersion o_testGetJavaVersion_add91__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add91__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add91__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add91__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add91__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add91__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add91__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add91__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add91__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add92() throws Exception {
        JavaVersion o_testGetJavaVersion_add92__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add92__1)).toString());
        JavaVersion o_testGetJavaVersion_add92__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add92__2)).toString());
        JavaVersion o_testGetJavaVersion_add92__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add92__3)).toString());
        JavaVersion o_testGetJavaVersion_add92__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add92__4)).toString());
        JavaVersion o_testGetJavaVersion_add92__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add92__5)).toString());
        JavaVersion o_testGetJavaVersion_add92__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__6)).toString());
        JavaVersion o_testGetJavaVersion_add92__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add92__7)).toString());
        JavaVersion o_testGetJavaVersion_add92__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add92__8)).toString());
        JavaVersion o_testGetJavaVersion_add92__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__9)).toString());
        JavaVersion o_testGetJavaVersion_add92__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add92__10)).toString());
        JavaVersion o_testGetJavaVersion_add92__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__11)).toString());
        JavaVersion o_testGetJavaVersion_add92__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__12)).toString());
        JavaVersion o_testGetJavaVersion_add92__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__13)).toString());
        JavaVersion o_testGetJavaVersion_add92__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__14)).toString());
        JavaVersion o_testGetJavaVersion_add92__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__15)).toString());
        JavaVersion o_testGetJavaVersion_add92__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add92__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add92__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add92__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add92__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add92__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add92__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add92__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add92__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71_add10370_remove36334() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add93() throws Exception {
        JavaVersion o_testGetJavaVersion_add93__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add93__1)).toString());
        JavaVersion o_testGetJavaVersion_add93__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add93__2)).toString());
        JavaVersion o_testGetJavaVersion_add93__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add93__3)).toString());
        JavaVersion o_testGetJavaVersion_add93__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add93__4)).toString());
        JavaVersion o_testGetJavaVersion_add93__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add93__5)).toString());
        JavaVersion o_testGetJavaVersion_add93__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__6)).toString());
        JavaVersion o_testGetJavaVersion_add93__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add93__7)).toString());
        JavaVersion o_testGetJavaVersion_add93__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add93__8)).toString());
        JavaVersion o_testGetJavaVersion_add93__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__9)).toString());
        JavaVersion o_testGetJavaVersion_add93__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add93__10)).toString());
        JavaVersion o_testGetJavaVersion_add93__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add93__11)).toString());
        JavaVersion o_testGetJavaVersion_add93__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__12)).toString());
        JavaVersion o_testGetJavaVersion_add93__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__13)).toString());
        JavaVersion o_testGetJavaVersion_add93__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__14)).toString());
        JavaVersion o_testGetJavaVersion_add93__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__15)).toString());
        JavaVersion o_testGetJavaVersion_add93__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add93__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add93__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add93__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add93__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add93__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add93__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add93__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add93__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add93__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110_literalMutationString4380() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1U.1");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10206_add34272() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        o_testGetJavaVersion_literalMutationString54__1.toString();
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        o_testGetJavaVersion_literalMutationString54__3.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71null13255null37326() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__10);
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString51_add10045_add34227() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString51__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51_add10045__25 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51_add10045__25)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__9 = JavaVersion.get("I.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString51__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
        o_testGetJavaVersion_literalMutationString51__4.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51_add10045__25)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString51__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109_add11185_remove36340() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71_add10370_literalMutationString17786() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1w.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        o_testGetJavaVersion_literalMutationString71__4.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion() throws Exception {
        JavaVersion o_testGetJavaVersion__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion__1)).toString());
        JavaVersion o_testGetJavaVersion__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion__2)).toString());
        JavaVersion o_testGetJavaVersion__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion__3)).toString());
        JavaVersion o_testGetJavaVersion__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion__4)).toString());
        JavaVersion o_testGetJavaVersion__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion__5)).toString());
        JavaVersion o_testGetJavaVersion__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__6)).toString());
        JavaVersion o_testGetJavaVersion__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion__7)).toString());
        JavaVersion o_testGetJavaVersion__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion__8)).toString());
        JavaVersion o_testGetJavaVersion__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__9)).toString());
        JavaVersion o_testGetJavaVersion__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion__10)).toString());
        JavaVersion o_testGetJavaVersion__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion__11)).toString());
        JavaVersion o_testGetJavaVersion__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__12)).toString());
        JavaVersion o_testGetJavaVersion__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__13)).toString());
        JavaVersion o_testGetJavaVersion__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__14)).toString());
        JavaVersion o_testGetJavaVersion__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110_add11495() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        o_testGetJavaVersionnull110__2.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString54_add10207_add31380() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString54__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54_add10207__4 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__9 = JavaVersion.get("1C.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString54__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
        o_testGetJavaVersion_literalMutationString54__12.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54_add10207__4)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString54__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull106_literalMutationString3814() throws Exception {
        JavaVersion o_testGetJavaVersionnull106__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        JavaVersion o_testGetJavaVersionnull106__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        JavaVersion o_testGetJavaVersionnull106__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        JavaVersion o_testGetJavaVersionnull106__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        JavaVersion o_testGetJavaVersionnull106__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        JavaVersion o_testGetJavaVersionnull106__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        JavaVersion o_testGetJavaVersionnull106__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        JavaVersion o_testGetJavaVersionnull106__8 = JavaVersion.get("17");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        JavaVersion o_testGetJavaVersionnull106__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        JavaVersion o_testGetJavaVersionnull106__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        JavaVersion o_testGetJavaVersionnull106__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        JavaVersion o_testGetJavaVersionnull106__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        JavaVersion o_testGetJavaVersionnull106__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        JavaVersion o_testGetJavaVersionnull106__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
        JavaVersion o_testGetJavaVersionnull106__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71null13255null37330() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("0.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__14);
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString71__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull108null13580() throws Exception {
        JavaVersion o_testGetJavaVersionnull108__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        JavaVersion o_testGetJavaVersionnull108__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        JavaVersion o_testGetJavaVersionnull108__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        JavaVersion o_testGetJavaVersionnull108__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        JavaVersion o_testGetJavaVersionnull108__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull108__5);
        JavaVersion o_testGetJavaVersionnull108__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        JavaVersion o_testGetJavaVersionnull108__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        JavaVersion o_testGetJavaVersionnull108__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        JavaVersion o_testGetJavaVersionnull108__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        JavaVersion o_testGetJavaVersionnull108__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        JavaVersion o_testGetJavaVersionnull108__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        JavaVersion o_testGetJavaVersionnull108__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        JavaVersion o_testGetJavaVersionnull108__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        JavaVersion o_testGetJavaVersionnull108__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
        JavaVersion o_testGetJavaVersionnull108__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull108__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString76null13739() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString76__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString76__9);
        JavaVersion o_testGetJavaVersion_literalMutationString76__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__14 = JavaVersion.getJavaVersion("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString76__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__8)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString76__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString76__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString75null13005() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString75__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString75__10);
        JavaVersion o_testGetJavaVersion_literalMutationString75__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__14 = JavaVersion.getJavaVersion("1O.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString75__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__9)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString75__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString75__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53null13135() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__5);
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53null13134() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__4);
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString53__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString7null12922() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString7__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersion_literalMutationString7__2);
        JavaVersion o_testGetJavaVersion_literalMutationString7__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString7__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString70_add12065_literalMutationString17905() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString70__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__9 = JavaVersion.get("D.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString70__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
        o_testGetJavaVersion_literalMutationString70__13.toString();
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString70__15)).toString());
    }
}

