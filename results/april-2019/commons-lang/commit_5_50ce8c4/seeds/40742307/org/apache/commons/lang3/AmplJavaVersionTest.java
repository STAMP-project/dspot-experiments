package org.apache.commons.lang3;


import org.junit.Assert;
import org.junit.Test;


public class AmplJavaVersionTest {
    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString17() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString17__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__3 = JavaVersion.get("^.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString17__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString17__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull110() throws Exception {
        JavaVersion o_testGetJavaVersionnull110__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        JavaVersion o_testGetJavaVersionnull110__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        JavaVersion o_testGetJavaVersionnull110__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        JavaVersion o_testGetJavaVersionnull110__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        JavaVersion o_testGetJavaVersionnull110__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        JavaVersion o_testGetJavaVersionnull110__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        JavaVersion o_testGetJavaVersionnull110__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        JavaVersion o_testGetJavaVersionnull110__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        JavaVersion o_testGetJavaVersionnull110__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        JavaVersion o_testGetJavaVersionnull110__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        JavaVersion o_testGetJavaVersionnull110__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        JavaVersion o_testGetJavaVersionnull110__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        JavaVersion o_testGetJavaVersionnull110__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        JavaVersion o_testGetJavaVersionnull110__14 = JavaVersion.getJavaVersion(null);
        Assert.assertNull(o_testGetJavaVersionnull110__14);
        JavaVersion o_testGetJavaVersionnull110__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull110__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull110__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull110__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull110__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull110__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull110__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull110__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull110__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull110__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull110__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull110__13)).toString());
        Assert.assertNull(o_testGetJavaVersionnull110__14);
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString15() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString15__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__3 = JavaVersion.get("12");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString15__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString15__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString18() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString18__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__3 = JavaVersion.get("1K.2");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString18__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__2)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString18__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull109() throws Exception {
        JavaVersion o_testGetJavaVersionnull109__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        JavaVersion o_testGetJavaVersionnull109__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        JavaVersion o_testGetJavaVersionnull109__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        JavaVersion o_testGetJavaVersionnull109__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        JavaVersion o_testGetJavaVersionnull109__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        JavaVersion o_testGetJavaVersionnull109__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        JavaVersion o_testGetJavaVersionnull109__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        JavaVersion o_testGetJavaVersionnull109__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        JavaVersion o_testGetJavaVersionnull109__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        JavaVersion o_testGetJavaVersionnull109__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        JavaVersion o_testGetJavaVersionnull109__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        JavaVersion o_testGetJavaVersionnull109__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        JavaVersion o_testGetJavaVersionnull109__13 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        JavaVersion o_testGetJavaVersionnull109__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
        JavaVersion o_testGetJavaVersionnull109__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull109__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull109__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull109__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull109__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull109__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull109__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull109__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull109__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull109__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull109__12)).toString());
        Assert.assertNull(o_testGetJavaVersionnull109__13);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull109__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString63() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString63__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__12 = JavaVersion.get("1.0");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__12);
        JavaVersion o_testGetJavaVersion_literalMutationString63__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString63__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__11)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString63__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString63__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull107() throws Exception {
        JavaVersion o_testGetJavaVersionnull107__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        JavaVersion o_testGetJavaVersionnull107__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        JavaVersion o_testGetJavaVersionnull107__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        JavaVersion o_testGetJavaVersionnull107__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        JavaVersion o_testGetJavaVersionnull107__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        JavaVersion o_testGetJavaVersionnull107__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        JavaVersion o_testGetJavaVersionnull107__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        JavaVersion o_testGetJavaVersionnull107__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        JavaVersion o_testGetJavaVersionnull107__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        JavaVersion o_testGetJavaVersionnull107__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        JavaVersion o_testGetJavaVersionnull107__11 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        JavaVersion o_testGetJavaVersionnull107__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        JavaVersion o_testGetJavaVersionnull107__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        JavaVersion o_testGetJavaVersionnull107__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
        JavaVersion o_testGetJavaVersionnull107__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull107__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull107__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull107__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull107__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull107__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull107__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull107__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull107__10)).toString());
        Assert.assertNull(o_testGetJavaVersionnull107__11);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull107__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull107__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull108() throws Exception {
        JavaVersion o_testGetJavaVersionnull108__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        JavaVersion o_testGetJavaVersionnull108__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        JavaVersion o_testGetJavaVersionnull108__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        JavaVersion o_testGetJavaVersionnull108__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        JavaVersion o_testGetJavaVersionnull108__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        JavaVersion o_testGetJavaVersionnull108__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        JavaVersion o_testGetJavaVersionnull108__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        JavaVersion o_testGetJavaVersionnull108__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        JavaVersion o_testGetJavaVersionnull108__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        JavaVersion o_testGetJavaVersionnull108__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        JavaVersion o_testGetJavaVersionnull108__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        JavaVersion o_testGetJavaVersionnull108__12 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        JavaVersion o_testGetJavaVersionnull108__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        JavaVersion o_testGetJavaVersionnull108__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
        JavaVersion o_testGetJavaVersionnull108__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull108__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull108__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull108__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull108__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull108__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull108__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull108__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull108__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull108__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull108__11)).toString());
        Assert.assertNull(o_testGetJavaVersionnull108__12);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull108__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString24() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString24__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__4 = JavaVersion.get("1D.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString24__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString24__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString22() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString22__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__4 = JavaVersion.get("F.3");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString22__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString22__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString66() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString66__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__12 = JavaVersion.get("1#.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString66__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString66__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString21() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString21__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__4 = JavaVersion.get("13");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString21__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__3)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString21__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add87() throws Exception {
        JavaVersion o_testGetJavaVersion_add87__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add87__1)).toString());
        JavaVersion o_testGetJavaVersion_add87__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add87__2)).toString());
        JavaVersion o_testGetJavaVersion_add87__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add87__3)).toString());
        JavaVersion o_testGetJavaVersion_add87__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add87__4)).toString());
        JavaVersion o_testGetJavaVersion_add87__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add87__5)).toString());
        JavaVersion o_testGetJavaVersion_add87__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__6)).toString());
        JavaVersion o_testGetJavaVersion_add87__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__7)).toString());
        JavaVersion o_testGetJavaVersion_add87__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add87__8)).toString());
        JavaVersion o_testGetJavaVersion_add87__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add87__9)).toString());
        JavaVersion o_testGetJavaVersion_add87__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__10)).toString());
        JavaVersion o_testGetJavaVersion_add87__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add87__11)).toString());
        JavaVersion o_testGetJavaVersion_add87__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add87__12)).toString());
        JavaVersion o_testGetJavaVersion_add87__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__13)).toString());
        JavaVersion o_testGetJavaVersion_add87__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__14)).toString());
        JavaVersion o_testGetJavaVersion_add87__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__15)).toString());
        JavaVersion o_testGetJavaVersion_add87__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add87__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add87__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add87__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add87__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add87__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add87__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add87__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add87__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add87__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add87__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add87__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add88() throws Exception {
        JavaVersion o_testGetJavaVersion_add88__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add88__1)).toString());
        JavaVersion o_testGetJavaVersion_add88__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add88__2)).toString());
        JavaVersion o_testGetJavaVersion_add88__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add88__3)).toString());
        JavaVersion o_testGetJavaVersion_add88__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add88__4)).toString());
        JavaVersion o_testGetJavaVersion_add88__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add88__5)).toString());
        JavaVersion o_testGetJavaVersion_add88__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__6)).toString());
        JavaVersion o_testGetJavaVersion_add88__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__7)).toString());
        JavaVersion o_testGetJavaVersion_add88__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__8)).toString());
        JavaVersion o_testGetJavaVersion_add88__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add88__9)).toString());
        JavaVersion o_testGetJavaVersion_add88__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__10)).toString());
        JavaVersion o_testGetJavaVersion_add88__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add88__11)).toString());
        JavaVersion o_testGetJavaVersion_add88__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add88__12)).toString());
        JavaVersion o_testGetJavaVersion_add88__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__13)).toString());
        JavaVersion o_testGetJavaVersion_add88__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__14)).toString());
        JavaVersion o_testGetJavaVersion_add88__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__15)).toString());
        JavaVersion o_testGetJavaVersion_add88__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add88__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add88__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add88__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add88__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add88__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add88__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add88__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add88__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add88__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add88__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add88__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString49() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString49__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__9 = JavaVersion.get("G.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString49__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString49__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add89() throws Exception {
        JavaVersion o_testGetJavaVersion_add89__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add89__1)).toString());
        JavaVersion o_testGetJavaVersion_add89__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add89__2)).toString());
        JavaVersion o_testGetJavaVersion_add89__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add89__3)).toString());
        JavaVersion o_testGetJavaVersion_add89__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add89__4)).toString());
        JavaVersion o_testGetJavaVersion_add89__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add89__5)).toString());
        JavaVersion o_testGetJavaVersion_add89__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__6)).toString());
        JavaVersion o_testGetJavaVersion_add89__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add89__7)).toString());
        JavaVersion o_testGetJavaVersion_add89__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__8)).toString());
        JavaVersion o_testGetJavaVersion_add89__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__9)).toString());
        JavaVersion o_testGetJavaVersion_add89__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__10)).toString());
        JavaVersion o_testGetJavaVersion_add89__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add89__11)).toString());
        JavaVersion o_testGetJavaVersion_add89__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add89__12)).toString());
        JavaVersion o_testGetJavaVersion_add89__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__13)).toString());
        JavaVersion o_testGetJavaVersion_add89__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__14)).toString());
        JavaVersion o_testGetJavaVersion_add89__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__15)).toString());
        JavaVersion o_testGetJavaVersion_add89__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add89__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add89__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add89__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add89__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add89__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add89__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add89__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add89__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add89__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add89__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add89__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add83() throws Exception {
        JavaVersion o_testGetJavaVersion_add83__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add83__1)).toString());
        JavaVersion o_testGetJavaVersion_add83__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__2)).toString());
        JavaVersion o_testGetJavaVersion_add83__3 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__3)).toString());
        JavaVersion o_testGetJavaVersion_add83__4 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add83__4)).toString());
        JavaVersion o_testGetJavaVersion_add83__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add83__5)).toString());
        JavaVersion o_testGetJavaVersion_add83__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add83__6)).toString());
        JavaVersion o_testGetJavaVersion_add83__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__7)).toString());
        JavaVersion o_testGetJavaVersion_add83__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add83__8)).toString());
        JavaVersion o_testGetJavaVersion_add83__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add83__9)).toString());
        JavaVersion o_testGetJavaVersion_add83__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__10)).toString());
        JavaVersion o_testGetJavaVersion_add83__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add83__11)).toString());
        JavaVersion o_testGetJavaVersion_add83__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add83__12)).toString());
        JavaVersion o_testGetJavaVersion_add83__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__13)).toString());
        JavaVersion o_testGetJavaVersion_add83__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__14)).toString());
        JavaVersion o_testGetJavaVersion_add83__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__15)).toString());
        JavaVersion o_testGetJavaVersion_add83__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add83__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__2)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add83__3)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add83__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add83__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add83__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add83__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add83__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add83__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add83__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add83__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add83__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add84() throws Exception {
        JavaVersion o_testGetJavaVersion_add84__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add84__1)).toString());
        JavaVersion o_testGetJavaVersion_add84__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add84__2)).toString());
        JavaVersion o_testGetJavaVersion_add84__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__3)).toString());
        JavaVersion o_testGetJavaVersion_add84__4 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__4)).toString());
        JavaVersion o_testGetJavaVersion_add84__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add84__5)).toString());
        JavaVersion o_testGetJavaVersion_add84__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add84__6)).toString());
        JavaVersion o_testGetJavaVersion_add84__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__7)).toString());
        JavaVersion o_testGetJavaVersion_add84__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add84__8)).toString());
        JavaVersion o_testGetJavaVersion_add84__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add84__9)).toString());
        JavaVersion o_testGetJavaVersion_add84__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__10)).toString());
        JavaVersion o_testGetJavaVersion_add84__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add84__11)).toString());
        JavaVersion o_testGetJavaVersion_add84__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add84__12)).toString());
        JavaVersion o_testGetJavaVersion_add84__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__13)).toString());
        JavaVersion o_testGetJavaVersion_add84__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__14)).toString());
        JavaVersion o_testGetJavaVersion_add84__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__15)).toString());
        JavaVersion o_testGetJavaVersion_add84__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add84__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add84__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__3)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add84__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add84__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add84__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add84__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add84__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add84__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add84__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add84__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add84__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add85() throws Exception {
        JavaVersion o_testGetJavaVersion_add85__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add85__1)).toString());
        JavaVersion o_testGetJavaVersion_add85__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add85__2)).toString());
        JavaVersion o_testGetJavaVersion_add85__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add85__3)).toString());
        JavaVersion o_testGetJavaVersion_add85__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__4)).toString());
        JavaVersion o_testGetJavaVersion_add85__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__5)).toString());
        JavaVersion o_testGetJavaVersion_add85__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add85__6)).toString());
        JavaVersion o_testGetJavaVersion_add85__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__7)).toString());
        JavaVersion o_testGetJavaVersion_add85__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add85__8)).toString());
        JavaVersion o_testGetJavaVersion_add85__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add85__9)).toString());
        JavaVersion o_testGetJavaVersion_add85__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__10)).toString());
        JavaVersion o_testGetJavaVersion_add85__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add85__11)).toString());
        JavaVersion o_testGetJavaVersion_add85__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add85__12)).toString());
        JavaVersion o_testGetJavaVersion_add85__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__13)).toString());
        JavaVersion o_testGetJavaVersion_add85__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__14)).toString());
        JavaVersion o_testGetJavaVersion_add85__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__15)).toString());
        JavaVersion o_testGetJavaVersion_add85__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add85__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add85__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add85__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add85__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add85__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add85__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add85__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add85__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add85__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add85__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add85__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add86() throws Exception {
        JavaVersion o_testGetJavaVersion_add86__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add86__1)).toString());
        JavaVersion o_testGetJavaVersion_add86__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add86__2)).toString());
        JavaVersion o_testGetJavaVersion_add86__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add86__3)).toString());
        JavaVersion o_testGetJavaVersion_add86__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add86__4)).toString());
        JavaVersion o_testGetJavaVersion_add86__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__5)).toString());
        JavaVersion o_testGetJavaVersion_add86__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__6)).toString());
        JavaVersion o_testGetJavaVersion_add86__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__7)).toString());
        JavaVersion o_testGetJavaVersion_add86__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add86__8)).toString());
        JavaVersion o_testGetJavaVersion_add86__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add86__9)).toString());
        JavaVersion o_testGetJavaVersion_add86__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__10)).toString());
        JavaVersion o_testGetJavaVersion_add86__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add86__11)).toString());
        JavaVersion o_testGetJavaVersion_add86__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add86__12)).toString());
        JavaVersion o_testGetJavaVersion_add86__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__13)).toString());
        JavaVersion o_testGetJavaVersion_add86__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__14)).toString());
        JavaVersion o_testGetJavaVersion_add86__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__15)).toString());
        JavaVersion o_testGetJavaVersion_add86__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add86__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add86__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add86__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add86__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add86__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add86__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add86__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add86__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add86__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add86__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add86__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString53() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString53__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__9 = JavaVersion.get("1d.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString53__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString53__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString52() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString52__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__9 = JavaVersion.get("18");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString52__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString52__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add82() throws Exception {
        JavaVersion o_testGetJavaVersion_add82__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__1)).toString());
        JavaVersion o_testGetJavaVersion_add82__2 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__2)).toString());
        JavaVersion o_testGetJavaVersion_add82__3 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add82__3)).toString());
        JavaVersion o_testGetJavaVersion_add82__4 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add82__4)).toString());
        JavaVersion o_testGetJavaVersion_add82__5 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add82__5)).toString());
        JavaVersion o_testGetJavaVersion_add82__6 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add82__6)).toString());
        JavaVersion o_testGetJavaVersion_add82__7 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__7)).toString());
        JavaVersion o_testGetJavaVersion_add82__8 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add82__8)).toString());
        JavaVersion o_testGetJavaVersion_add82__9 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add82__9)).toString());
        JavaVersion o_testGetJavaVersion_add82__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__10)).toString());
        JavaVersion o_testGetJavaVersion_add82__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add82__11)).toString());
        JavaVersion o_testGetJavaVersion_add82__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add82__12)).toString());
        JavaVersion o_testGetJavaVersion_add82__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__13)).toString());
        JavaVersion o_testGetJavaVersion_add82__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__14)).toString());
        JavaVersion o_testGetJavaVersion_add82__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__15)).toString());
        JavaVersion o_testGetJavaVersion_add82__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__1)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add82__2)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add82__3)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add82__4)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add82__5)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add82__6)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__7)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add82__8)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add82__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add82__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add82__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add82__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add82__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString11() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString11__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__2 = JavaVersion.get("1D.1");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString11__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString11__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString37() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString37__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__7 = JavaVersion.get("(.6");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString37__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString37__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add94() throws Exception {
        JavaVersion o_testGetJavaVersion_add94__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add94__1)).toString());
        JavaVersion o_testGetJavaVersion_add94__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add94__2)).toString());
        JavaVersion o_testGetJavaVersion_add94__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add94__3)).toString());
        JavaVersion o_testGetJavaVersion_add94__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add94__4)).toString());
        JavaVersion o_testGetJavaVersion_add94__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add94__5)).toString());
        JavaVersion o_testGetJavaVersion_add94__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__6)).toString());
        JavaVersion o_testGetJavaVersion_add94__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add94__7)).toString());
        JavaVersion o_testGetJavaVersion_add94__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add94__8)).toString());
        JavaVersion o_testGetJavaVersion_add94__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__9)).toString());
        JavaVersion o_testGetJavaVersion_add94__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add94__10)).toString());
        JavaVersion o_testGetJavaVersion_add94__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add94__11)).toString());
        JavaVersion o_testGetJavaVersion_add94__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__12)).toString());
        JavaVersion o_testGetJavaVersion_add94__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__13)).toString());
        JavaVersion o_testGetJavaVersion_add94__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__14)).toString());
        JavaVersion o_testGetJavaVersion_add94__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__15)).toString());
        JavaVersion o_testGetJavaVersion_add94__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add94__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add94__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add94__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add94__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add94__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add94__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add94__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add94__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add94__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add94__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add94__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add95() throws Exception {
        JavaVersion o_testGetJavaVersion_add95__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add95__1)).toString());
        JavaVersion o_testGetJavaVersion_add95__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add95__2)).toString());
        JavaVersion o_testGetJavaVersion_add95__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add95__3)).toString());
        JavaVersion o_testGetJavaVersion_add95__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add95__4)).toString());
        JavaVersion o_testGetJavaVersion_add95__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add95__5)).toString());
        JavaVersion o_testGetJavaVersion_add95__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__6)).toString());
        JavaVersion o_testGetJavaVersion_add95__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add95__7)).toString());
        JavaVersion o_testGetJavaVersion_add95__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add95__8)).toString());
        JavaVersion o_testGetJavaVersion_add95__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__9)).toString());
        JavaVersion o_testGetJavaVersion_add95__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add95__10)).toString());
        JavaVersion o_testGetJavaVersion_add95__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add95__11)).toString());
        JavaVersion o_testGetJavaVersion_add95__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__12)).toString());
        JavaVersion o_testGetJavaVersion_add95__13 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__13)).toString());
        JavaVersion o_testGetJavaVersion_add95__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__14)).toString());
        JavaVersion o_testGetJavaVersion_add95__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__15)).toString());
        JavaVersion o_testGetJavaVersion_add95__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add95__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add95__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add95__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add95__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add95__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add95__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add95__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add95__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add95__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add95__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add95__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add96() throws Exception {
        JavaVersion o_testGetJavaVersion_add96__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add96__1)).toString());
        JavaVersion o_testGetJavaVersion_add96__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add96__2)).toString());
        JavaVersion o_testGetJavaVersion_add96__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add96__3)).toString());
        JavaVersion o_testGetJavaVersion_add96__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add96__4)).toString());
        JavaVersion o_testGetJavaVersion_add96__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add96__5)).toString());
        JavaVersion o_testGetJavaVersion_add96__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__6)).toString());
        JavaVersion o_testGetJavaVersion_add96__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add96__7)).toString());
        JavaVersion o_testGetJavaVersion_add96__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add96__8)).toString());
        JavaVersion o_testGetJavaVersion_add96__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__9)).toString());
        JavaVersion o_testGetJavaVersion_add96__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add96__10)).toString());
        JavaVersion o_testGetJavaVersion_add96__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add96__11)).toString());
        JavaVersion o_testGetJavaVersion_add96__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__12)).toString());
        JavaVersion o_testGetJavaVersion_add96__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__13)).toString());
        JavaVersion o_testGetJavaVersion_add96__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__14)).toString());
        JavaVersion o_testGetJavaVersion_add96__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__15)).toString());
        JavaVersion o_testGetJavaVersion_add96__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add96__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add96__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add96__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add96__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add96__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add96__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add96__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add96__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add96__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add96__14)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add96__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add90() throws Exception {
        JavaVersion o_testGetJavaVersion_add90__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add90__1)).toString());
        JavaVersion o_testGetJavaVersion_add90__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add90__2)).toString());
        JavaVersion o_testGetJavaVersion_add90__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add90__3)).toString());
        JavaVersion o_testGetJavaVersion_add90__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add90__4)).toString());
        JavaVersion o_testGetJavaVersion_add90__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add90__5)).toString());
        JavaVersion o_testGetJavaVersion_add90__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__6)).toString());
        JavaVersion o_testGetJavaVersion_add90__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add90__7)).toString());
        JavaVersion o_testGetJavaVersion_add90__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add90__8)).toString());
        JavaVersion o_testGetJavaVersion_add90__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__9)).toString());
        JavaVersion o_testGetJavaVersion_add90__10 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__10)).toString());
        JavaVersion o_testGetJavaVersion_add90__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add90__11)).toString());
        JavaVersion o_testGetJavaVersion_add90__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add90__12)).toString());
        JavaVersion o_testGetJavaVersion_add90__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__13)).toString());
        JavaVersion o_testGetJavaVersion_add90__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__14)).toString());
        JavaVersion o_testGetJavaVersion_add90__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__15)).toString());
        JavaVersion o_testGetJavaVersion_add90__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add90__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add90__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add90__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add90__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add90__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add90__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add90__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__9)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add90__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add90__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add90__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add90__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString42() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString42__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__7 = JavaVersion.get("1#.6");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString42__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString42__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add91() throws Exception {
        JavaVersion o_testGetJavaVersion_add91__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add91__1)).toString());
        JavaVersion o_testGetJavaVersion_add91__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add91__2)).toString());
        JavaVersion o_testGetJavaVersion_add91__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add91__3)).toString());
        JavaVersion o_testGetJavaVersion_add91__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add91__4)).toString());
        JavaVersion o_testGetJavaVersion_add91__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add91__5)).toString());
        JavaVersion o_testGetJavaVersion_add91__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__6)).toString());
        JavaVersion o_testGetJavaVersion_add91__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add91__7)).toString());
        JavaVersion o_testGetJavaVersion_add91__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add91__8)).toString());
        JavaVersion o_testGetJavaVersion_add91__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__9)).toString());
        JavaVersion o_testGetJavaVersion_add91__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__10)).toString());
        JavaVersion o_testGetJavaVersion_add91__11 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__11)).toString());
        JavaVersion o_testGetJavaVersion_add91__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add91__12)).toString());
        JavaVersion o_testGetJavaVersion_add91__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__13)).toString());
        JavaVersion o_testGetJavaVersion_add91__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__14)).toString());
        JavaVersion o_testGetJavaVersion_add91__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__15)).toString());
        JavaVersion o_testGetJavaVersion_add91__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add91__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add91__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add91__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add91__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add91__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add91__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add91__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__10)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add91__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add91__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add91__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add91__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString41() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString41__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__7 = JavaVersion.get("16");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString41__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__6)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString41__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add92() throws Exception {
        JavaVersion o_testGetJavaVersion_add92__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add92__1)).toString());
        JavaVersion o_testGetJavaVersion_add92__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add92__2)).toString());
        JavaVersion o_testGetJavaVersion_add92__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add92__3)).toString());
        JavaVersion o_testGetJavaVersion_add92__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add92__4)).toString());
        JavaVersion o_testGetJavaVersion_add92__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add92__5)).toString());
        JavaVersion o_testGetJavaVersion_add92__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__6)).toString());
        JavaVersion o_testGetJavaVersion_add92__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add92__7)).toString());
        JavaVersion o_testGetJavaVersion_add92__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add92__8)).toString());
        JavaVersion o_testGetJavaVersion_add92__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__9)).toString());
        JavaVersion o_testGetJavaVersion_add92__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add92__10)).toString());
        JavaVersion o_testGetJavaVersion_add92__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__11)).toString());
        JavaVersion o_testGetJavaVersion_add92__12 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__12)).toString());
        JavaVersion o_testGetJavaVersion_add92__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__13)).toString());
        JavaVersion o_testGetJavaVersion_add92__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__14)).toString());
        JavaVersion o_testGetJavaVersion_add92__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__15)).toString());
        JavaVersion o_testGetJavaVersion_add92__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add92__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add92__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add92__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add92__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add92__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add92__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add92__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add92__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__11)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add92__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add92__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add92__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_add93() throws Exception {
        JavaVersion o_testGetJavaVersion_add93__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add93__1)).toString());
        JavaVersion o_testGetJavaVersion_add93__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add93__2)).toString());
        JavaVersion o_testGetJavaVersion_add93__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add93__3)).toString());
        JavaVersion o_testGetJavaVersion_add93__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add93__4)).toString());
        JavaVersion o_testGetJavaVersion_add93__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add93__5)).toString());
        JavaVersion o_testGetJavaVersion_add93__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__6)).toString());
        JavaVersion o_testGetJavaVersion_add93__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add93__7)).toString());
        JavaVersion o_testGetJavaVersion_add93__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add93__8)).toString());
        JavaVersion o_testGetJavaVersion_add93__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__9)).toString());
        JavaVersion o_testGetJavaVersion_add93__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add93__10)).toString());
        JavaVersion o_testGetJavaVersion_add93__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add93__11)).toString());
        JavaVersion o_testGetJavaVersion_add93__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__12)).toString());
        JavaVersion o_testGetJavaVersion_add93__13 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__13)).toString());
        JavaVersion o_testGetJavaVersion_add93__14 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__14)).toString());
        JavaVersion o_testGetJavaVersion_add93__15 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__15)).toString());
        JavaVersion o_testGetJavaVersion_add93__16 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__16)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_add93__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_add93__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_add93__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_add93__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_add93__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_add93__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_add93__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_add93__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_add93__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_add93__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__14)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_add93__15)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString46() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString46__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__8 = JavaVersion.get("1K.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString46__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString46__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString45() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString45__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__8 = JavaVersion.get("|.7");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString45__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__7)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString45__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString7() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString7__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__2 = JavaVersion.get("N.1");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString7__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString7__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString8() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString8__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__2 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString8__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__1)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString8__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString5() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString5__1 = JavaVersion.get("09");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString5__1);
        JavaVersion o_testGetJavaVersion_literalMutationString5__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString5__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__15)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString5__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString5__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString6() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString6__1 = JavaVersion.get("00.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString6__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString6__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull101() throws Exception {
        JavaVersion o_testGetJavaVersionnull101__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        JavaVersion o_testGetJavaVersionnull101__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        JavaVersion o_testGetJavaVersionnull101__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        JavaVersion o_testGetJavaVersionnull101__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        JavaVersion o_testGetJavaVersionnull101__5 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        JavaVersion o_testGetJavaVersionnull101__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        JavaVersion o_testGetJavaVersionnull101__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        JavaVersion o_testGetJavaVersionnull101__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        JavaVersion o_testGetJavaVersionnull101__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        JavaVersion o_testGetJavaVersionnull101__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        JavaVersion o_testGetJavaVersionnull101__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        JavaVersion o_testGetJavaVersionnull101__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        JavaVersion o_testGetJavaVersionnull101__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        JavaVersion o_testGetJavaVersionnull101__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
        JavaVersion o_testGetJavaVersionnull101__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull101__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull101__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull101__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull101__4)).toString());
        Assert.assertNull(o_testGetJavaVersionnull101__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull101__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull101__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull101__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull101__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull101__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull101__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString28() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString28__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__5 = JavaVersion.get("3.4");
        Assert.assertNull(o_testGetJavaVersion_literalMutationString28__5);
        JavaVersion o_testGetJavaVersion_literalMutationString28__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString28__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__4)).toString());
        Assert.assertNull(o_testGetJavaVersion_literalMutationString28__5);
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString28__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull102() throws Exception {
        JavaVersion o_testGetJavaVersionnull102__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        JavaVersion o_testGetJavaVersionnull102__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        JavaVersion o_testGetJavaVersionnull102__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        JavaVersion o_testGetJavaVersionnull102__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        JavaVersion o_testGetJavaVersionnull102__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        JavaVersion o_testGetJavaVersionnull102__6 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        JavaVersion o_testGetJavaVersionnull102__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        JavaVersion o_testGetJavaVersionnull102__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        JavaVersion o_testGetJavaVersionnull102__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        JavaVersion o_testGetJavaVersionnull102__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        JavaVersion o_testGetJavaVersionnull102__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        JavaVersion o_testGetJavaVersionnull102__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__12)).toString());
        JavaVersion o_testGetJavaVersionnull102__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        JavaVersion o_testGetJavaVersionnull102__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
        JavaVersion o_testGetJavaVersionnull102__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull102__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull102__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull102__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull102__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull102__5)).toString());
        Assert.assertNull(o_testGetJavaVersionnull102__6);
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull102__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull102__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull102__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull102__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull102__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull102__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString27() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString27__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__5 = JavaVersion.get("14");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString27__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString27__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull99() throws Exception {
        JavaVersion o_testGetJavaVersionnull99__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull99__1)).toString());
        JavaVersion o_testGetJavaVersionnull99__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull99__2)).toString());
        JavaVersion o_testGetJavaVersionnull99__3 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull99__3);
        JavaVersion o_testGetJavaVersionnull99__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull99__4)).toString());
        JavaVersion o_testGetJavaVersionnull99__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull99__5)).toString());
        JavaVersion o_testGetJavaVersionnull99__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__6)).toString());
        JavaVersion o_testGetJavaVersionnull99__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull99__7)).toString());
        JavaVersion o_testGetJavaVersionnull99__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull99__8)).toString());
        JavaVersion o_testGetJavaVersionnull99__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__9)).toString());
        JavaVersion o_testGetJavaVersionnull99__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull99__10)).toString());
        JavaVersion o_testGetJavaVersionnull99__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull99__11)).toString());
        JavaVersion o_testGetJavaVersionnull99__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__12)).toString());
        JavaVersion o_testGetJavaVersionnull99__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__13)).toString());
        JavaVersion o_testGetJavaVersionnull99__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__14)).toString());
        JavaVersion o_testGetJavaVersionnull99__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull99__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull99__2)).toString());
        Assert.assertNull(o_testGetJavaVersionnull99__3);
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull99__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull99__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull99__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull99__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull99__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull99__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull99__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull99__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString1() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString1__1 = JavaVersion.get("v.9");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString1__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__15)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString1__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull98() throws Exception {
        JavaVersion o_testGetJavaVersionnull98__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull98__1)).toString());
        JavaVersion o_testGetJavaVersionnull98__2 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull98__2);
        JavaVersion o_testGetJavaVersionnull98__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull98__3)).toString());
        JavaVersion o_testGetJavaVersionnull98__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull98__4)).toString());
        JavaVersion o_testGetJavaVersionnull98__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull98__5)).toString());
        JavaVersion o_testGetJavaVersionnull98__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__6)).toString());
        JavaVersion o_testGetJavaVersionnull98__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull98__7)).toString());
        JavaVersion o_testGetJavaVersionnull98__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull98__8)).toString());
        JavaVersion o_testGetJavaVersionnull98__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__9)).toString());
        JavaVersion o_testGetJavaVersionnull98__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull98__10)).toString());
        JavaVersion o_testGetJavaVersionnull98__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull98__11)).toString());
        JavaVersion o_testGetJavaVersionnull98__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__12)).toString());
        JavaVersion o_testGetJavaVersionnull98__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__13)).toString());
        JavaVersion o_testGetJavaVersionnull98__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__14)).toString());
        JavaVersion o_testGetJavaVersionnull98__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull98__1)).toString());
        Assert.assertNull(o_testGetJavaVersionnull98__2);
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull98__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull98__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull98__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull98__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull98__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull98__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull98__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull98__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull98__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull100() throws Exception {
        JavaVersion o_testGetJavaVersionnull100__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        JavaVersion o_testGetJavaVersionnull100__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        JavaVersion o_testGetJavaVersionnull100__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        JavaVersion o_testGetJavaVersionnull100__4 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        JavaVersion o_testGetJavaVersionnull100__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        JavaVersion o_testGetJavaVersionnull100__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        JavaVersion o_testGetJavaVersionnull100__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        JavaVersion o_testGetJavaVersionnull100__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        JavaVersion o_testGetJavaVersionnull100__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        JavaVersion o_testGetJavaVersionnull100__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        JavaVersion o_testGetJavaVersionnull100__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        JavaVersion o_testGetJavaVersionnull100__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        JavaVersion o_testGetJavaVersionnull100__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        JavaVersion o_testGetJavaVersionnull100__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
        JavaVersion o_testGetJavaVersionnull100__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull100__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull100__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull100__3)).toString());
        Assert.assertNull(o_testGetJavaVersionnull100__4);
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull100__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull100__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull100__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull100__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull100__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull100__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull100__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString69() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString69__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__13 = JavaVersion.get("K.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString69__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString69__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull97() throws Exception {
        JavaVersion o_testGetJavaVersionnull97__1 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull97__1);
        JavaVersion o_testGetJavaVersionnull97__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull97__2)).toString());
        JavaVersion o_testGetJavaVersionnull97__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull97__3)).toString());
        JavaVersion o_testGetJavaVersionnull97__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull97__4)).toString());
        JavaVersion o_testGetJavaVersionnull97__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull97__5)).toString());
        JavaVersion o_testGetJavaVersionnull97__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__6)).toString());
        JavaVersion o_testGetJavaVersionnull97__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull97__7)).toString());
        JavaVersion o_testGetJavaVersionnull97__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull97__8)).toString());
        JavaVersion o_testGetJavaVersionnull97__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__9)).toString());
        JavaVersion o_testGetJavaVersionnull97__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull97__10)).toString());
        JavaVersion o_testGetJavaVersionnull97__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull97__11)).toString());
        JavaVersion o_testGetJavaVersionnull97__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__12)).toString());
        JavaVersion o_testGetJavaVersionnull97__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__13)).toString());
        JavaVersion o_testGetJavaVersionnull97__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__14)).toString());
        JavaVersion o_testGetJavaVersionnull97__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__15)).toString());
        Assert.assertNull(o_testGetJavaVersionnull97__1);
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull97__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull97__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull97__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull97__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull97__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull97__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull97__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull97__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull97__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull97__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion() throws Exception {
        JavaVersion o_testGetJavaVersion__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion__1)).toString());
        JavaVersion o_testGetJavaVersion__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion__2)).toString());
        JavaVersion o_testGetJavaVersion__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion__3)).toString());
        JavaVersion o_testGetJavaVersion__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion__4)).toString());
        JavaVersion o_testGetJavaVersion__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion__5)).toString());
        JavaVersion o_testGetJavaVersion__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__6)).toString());
        JavaVersion o_testGetJavaVersion__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion__7)).toString());
        JavaVersion o_testGetJavaVersion__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion__8)).toString());
        JavaVersion o_testGetJavaVersion__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__9)).toString());
        JavaVersion o_testGetJavaVersion__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion__10)).toString());
        JavaVersion o_testGetJavaVersion__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion__11)).toString());
        JavaVersion o_testGetJavaVersion__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__12)).toString());
        JavaVersion o_testGetJavaVersion__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__13)).toString());
        JavaVersion o_testGetJavaVersion__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__14)).toString());
        JavaVersion o_testGetJavaVersion__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull105() throws Exception {
        JavaVersion o_testGetJavaVersionnull105__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        JavaVersion o_testGetJavaVersionnull105__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        JavaVersion o_testGetJavaVersionnull105__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        JavaVersion o_testGetJavaVersionnull105__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        JavaVersion o_testGetJavaVersionnull105__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        JavaVersion o_testGetJavaVersionnull105__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        JavaVersion o_testGetJavaVersionnull105__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        JavaVersion o_testGetJavaVersionnull105__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        JavaVersion o_testGetJavaVersionnull105__9 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        JavaVersion o_testGetJavaVersionnull105__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        JavaVersion o_testGetJavaVersionnull105__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        JavaVersion o_testGetJavaVersionnull105__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        JavaVersion o_testGetJavaVersionnull105__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        JavaVersion o_testGetJavaVersionnull105__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
        JavaVersion o_testGetJavaVersionnull105__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull105__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull105__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull105__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull105__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull105__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull105__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull105__8)).toString());
        Assert.assertNull(o_testGetJavaVersionnull105__9);
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull105__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull105__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull105__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull105__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull106() throws Exception {
        JavaVersion o_testGetJavaVersionnull106__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        JavaVersion o_testGetJavaVersionnull106__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        JavaVersion o_testGetJavaVersionnull106__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        JavaVersion o_testGetJavaVersionnull106__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        JavaVersion o_testGetJavaVersionnull106__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        JavaVersion o_testGetJavaVersionnull106__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        JavaVersion o_testGetJavaVersionnull106__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        JavaVersion o_testGetJavaVersionnull106__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        JavaVersion o_testGetJavaVersionnull106__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        JavaVersion o_testGetJavaVersionnull106__10 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        JavaVersion o_testGetJavaVersionnull106__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        JavaVersion o_testGetJavaVersionnull106__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        JavaVersion o_testGetJavaVersionnull106__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        JavaVersion o_testGetJavaVersionnull106__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
        JavaVersion o_testGetJavaVersionnull106__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull106__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull106__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull106__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull106__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull106__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull106__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull106__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__9)).toString());
        Assert.assertNull(o_testGetJavaVersionnull106__10);
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull106__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull106__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull106__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull103() throws Exception {
        JavaVersion o_testGetJavaVersionnull103__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        JavaVersion o_testGetJavaVersionnull103__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        JavaVersion o_testGetJavaVersionnull103__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        JavaVersion o_testGetJavaVersionnull103__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        JavaVersion o_testGetJavaVersionnull103__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        JavaVersion o_testGetJavaVersionnull103__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        JavaVersion o_testGetJavaVersionnull103__7 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        JavaVersion o_testGetJavaVersionnull103__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        JavaVersion o_testGetJavaVersionnull103__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        JavaVersion o_testGetJavaVersionnull103__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        JavaVersion o_testGetJavaVersionnull103__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        JavaVersion o_testGetJavaVersionnull103__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        JavaVersion o_testGetJavaVersionnull103__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        JavaVersion o_testGetJavaVersionnull103__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
        JavaVersion o_testGetJavaVersionnull103__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull103__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull103__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull103__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull103__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull103__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__6)).toString());
        Assert.assertNull(o_testGetJavaVersionnull103__7);
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersionnull103__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull103__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull103__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull103__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull103__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersionnull104() throws Exception {
        JavaVersion o_testGetJavaVersionnull104__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        JavaVersion o_testGetJavaVersionnull104__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        JavaVersion o_testGetJavaVersionnull104__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        JavaVersion o_testGetJavaVersionnull104__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        JavaVersion o_testGetJavaVersionnull104__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        JavaVersion o_testGetJavaVersionnull104__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        JavaVersion o_testGetJavaVersionnull104__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        JavaVersion o_testGetJavaVersionnull104__8 = JavaVersion.get(null);
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        JavaVersion o_testGetJavaVersionnull104__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        JavaVersion o_testGetJavaVersionnull104__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        JavaVersion o_testGetJavaVersionnull104__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        JavaVersion o_testGetJavaVersionnull104__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        JavaVersion o_testGetJavaVersionnull104__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        JavaVersion o_testGetJavaVersionnull104__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
        JavaVersion o_testGetJavaVersionnull104__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersionnull104__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersionnull104__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersionnull104__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersionnull104__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersionnull104__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersionnull104__7)).toString());
        Assert.assertNull(o_testGetJavaVersionnull104__8);
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersionnull104__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersionnull104__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersionnull104__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersionnull104__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString29() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString29__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__5 = JavaVersion.get("1H.4");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString29__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__4)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString29__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString72() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString72__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__13 = JavaVersion.get("1f.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString72__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString72__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString35() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString35__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__6 = JavaVersion.get("c.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString35__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString35__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString34() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString34__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__6 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString34__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__5)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString34__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString78() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString78__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__14 = JavaVersion.getJavaVersion("r.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString78__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString78__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString77() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString77__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__13 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__14 = JavaVersion.getJavaVersion("1<.5");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString77__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__12)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__13)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString77__14)).toString());
    }

    @Test(timeout = 10000)
    public void testGetJavaVersion_literalMutationString71() throws Exception {
        JavaVersion o_testGetJavaVersion_literalMutationString71__1 = JavaVersion.get("0.9");
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__2 = JavaVersion.get("1.1");
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__3 = JavaVersion.get("1.2");
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__4 = JavaVersion.get("1.3");
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__5 = JavaVersion.get("1.4");
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__6 = JavaVersion.get("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__7 = JavaVersion.get("1.6");
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__8 = JavaVersion.get("1.7");
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__9 = JavaVersion.get("1.8");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__10 = JavaVersion.get("9");
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__11 = JavaVersion.get("10");
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__12 = JavaVersion.get("1.10");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__13 = JavaVersion.get("15");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__14 = JavaVersion.getJavaVersion("1.5");
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
        JavaVersion o_testGetJavaVersion_literalMutationString71__15 = JavaVersion.get("11");
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__15)).toString());
        Assert.assertEquals("0.9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__1)).toString());
        Assert.assertEquals("1.1", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__2)).toString());
        Assert.assertEquals("1.2", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__3)).toString());
        Assert.assertEquals("1.3", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__4)).toString());
        Assert.assertEquals("1.4", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__5)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__6)).toString());
        Assert.assertEquals("1.6", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__7)).toString());
        Assert.assertEquals("1.7", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__8)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__9)).toString());
        Assert.assertEquals("9", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__10)).toString());
        Assert.assertEquals("10", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__11)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__12)).toString());
        Assert.assertEquals("1.8", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__13)).toString());
        Assert.assertEquals("1.5", ((JavaVersion) (o_testGetJavaVersion_literalMutationString71__14)).toString());
    }
}

