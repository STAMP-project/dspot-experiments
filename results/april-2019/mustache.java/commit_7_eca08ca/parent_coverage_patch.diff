diff --git a/compiler/src/main/java/com/github/mustachejava/codes/ExtendCode.java b/compiler/src/main/java/com/github/mustachejava/codes/ExtendCode.java
index 9edef3e..4a3be58 100644
--- a/compiler/src/main/java/com/github/mustachejava/codes/ExtendCode.java
+++ b/compiler/src/main/java/com/github/mustachejava/codes/ExtendCode.java
@@ -1,10 +1,6 @@
 package com.github.mustachejava.codes;
 
-import com.github.mustachejava.Code;
-import com.github.mustachejava.DefaultMustacheFactory;
-import com.github.mustachejava.Mustache;
-import com.github.mustachejava.MustacheException;
-import com.github.mustachejava.TemplateContext;
+import com.github.mustachejava.*;
 
 import java.util.HashMap;
 import java.util.HashSet;
@@ -65,8 +61,8 @@ public class ExtendCode extends PartialCode {
         ExtendNameCode erc = (ExtendNameCode) code;
         replaceMap.put(erc.getName(), erc);
         erc.init();
-      } else if ((code instanceof WriteCode) || (code instanceof CommentCode)) {
-        // ignore text and comments
+      } else if (code instanceof WriteCode) {
+        // ignore text
       } else {
         // fail on everything else
         throw new IllegalArgumentException(
diff --git a/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java b/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java
index 1cce4d0..cf57302 100644
--- a/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java
+++ b/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java
@@ -4,13 +4,10 @@ import com.github.mustachejava.DefaultMustacheFactory;
 import com.github.mustachejava.Mustache;
 import com.github.mustachejava.MustacheException;
 import com.github.mustachejava.MustacheFactory;
-
+import org.junit.BeforeClass;
 import org.junit.Test;
 
-import java.io.File;
-import java.io.IOException;
-import java.io.StringWriter;
-import java.util.Collections;
+import java.io.*;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.ExecutionException;
@@ -20,9 +17,10 @@ import static org.junit.Assert.assertEquals;
 
 public class CommentTest {
 
+  private static File root;
+
   @Test
   public void testCommentBlock() throws MustacheException, IOException, ExecutionException, InterruptedException {
-    File root = getRoot("comment.html");
     MustacheFactory c = new DefaultMustacheFactory(root);
     Mustache m = c.compile("comment.html");
     StringWriter sw = new StringWriter();
@@ -32,30 +30,9 @@ public class CommentTest {
     assertEquals(getContents(root, "comment.txt"), sw.toString());
   }
 
-  @Test
-  public void testCommentInline() throws MustacheException, IOException, ExecutionException, InterruptedException {
-    File root = getRoot("commentinline.html");
-    MustacheFactory c = new DefaultMustacheFactory(root);
-    Mustache m = c.compile("commentinline.html");
-    StringWriter sw = new StringWriter();
-    Map scope = new HashMap();
-    scope.put("title", "A Comedy of Errors");
-    m.execute(sw, scope);
-    assertEquals(getContents(root, "commentinline.txt"), sw.toString());
-  }
-
-  @Test
-  public void testInlineCommentWithinExtendCodeBlock() throws MustacheException, IOException, ExecutionException, InterruptedException {
-    File root = getRoot("commentWithinExtendCodeBlock.html");
-    MustacheFactory c = new DefaultMustacheFactory(root);
-    Mustache m = c.compile("commentWithinExtendCodeBlock.html");
-    StringWriter sw = new StringWriter();
-    m.execute(sw, Collections.emptyList());
-    assertEquals(getContents(root, "commentWithinExtendCodeBlock.txt"), sw.toString());
-  }
-
-  private File getRoot(String fileName) {
+  @BeforeClass
+  public static void setUp() throws Exception {
     File file = new File("compiler/src/test/resources/functions");
-    return new File(file, fileName).exists() ? file : new File("src/test/resources/functions");
+    root = new File(file, "comment.html").exists() ? file : new File("src/test/resources/functions");
   }
 }
diff --git a/compiler/src/test/resources/functions/commentWithinExtendCodeBlock.html b/compiler/src/test/resources/functions/commentWithinExtendCodeBlock.html
deleted file mode 100644
index 572e74b..0000000
--- a/compiler/src/test/resources/functions/commentWithinExtendCodeBlock.html
+++ /dev/null
@@ -1,6 +0,0 @@
-{{<commentWithinExtendCodeBlock_sub}}
-
-  {{! just something interesting... or not... }}
-  {{$title}}Just for the fun of it{{/title}}
-
-{{/commentWithinExtendCodeBlock_sub}}
\ No newline at end of file
diff --git a/compiler/src/test/resources/functions/commentWithinExtendCodeBlock.txt b/compiler/src/test/resources/functions/commentWithinExtendCodeBlock.txt
deleted file mode 100644
index 8b7225b..0000000
--- a/compiler/src/test/resources/functions/commentWithinExtendCodeBlock.txt
+++ /dev/null
@@ -1 +0,0 @@
-<h1>Just for the fun of it</h1>
diff --git a/compiler/src/test/resources/functions/commentWithinExtendCodeBlock_sub.html b/compiler/src/test/resources/functions/commentWithinExtendCodeBlock_sub.html
deleted file mode 100644
index 901f509..0000000
--- a/compiler/src/test/resources/functions/commentWithinExtendCodeBlock_sub.html
+++ /dev/null
@@ -1 +0,0 @@
-<h1>{{$title}}{{/title}}{{! just something interesting... or not... }}</h1>
diff --git a/compiler/src/test/resources/functions/commentinline.html b/compiler/src/test/resources/functions/commentinline.html
deleted file mode 100644
index 5036801..0000000
--- a/compiler/src/test/resources/functions/commentinline.html
+++ /dev/null
@@ -1 +0,0 @@
-<h1>{{title}}{{! just something interesting... or not... }}</h1>
diff --git a/compiler/src/test/resources/functions/commentinline.txt b/compiler/src/test/resources/functions/commentinline.txt
deleted file mode 100644
index 0133517..0000000
--- a/compiler/src/test/resources/functions/commentinline.txt
+++ /dev/null
@@ -1 +0,0 @@
-<h1>A Comedy of Errors</h1>
