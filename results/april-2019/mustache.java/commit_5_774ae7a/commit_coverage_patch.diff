diff --git a/compiler/src/main/java/com/github/mustachejava/resolver/ClasspathResolver.java b/compiler/src/main/java/com/github/mustachejava/resolver/ClasspathResolver.java
index 264f91d..df695ff 100644
--- a/compiler/src/main/java/com/github/mustachejava/resolver/ClasspathResolver.java
+++ b/compiler/src/main/java/com/github/mustachejava/resolver/ClasspathResolver.java
@@ -6,6 +6,7 @@ import java.io.BufferedReader;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.Reader;
+import java.net.URI;
 import java.nio.charset.StandardCharsets;
 
 /**
@@ -33,11 +34,12 @@ public class ClasspathResolver implements MustacheResolver {
         ClassLoader ccl = Thread.currentThread().getContextClassLoader();
 
         String fullResourceName = concatResourceRootAndResourceName(resourceName);
+        String normalizeResourceName = URI.create(fullResourceName).normalize().getPath();
 
-        InputStream is = ccl.getResourceAsStream(fullResourceName);
+        InputStream is = ccl.getResourceAsStream(normalizeResourceName);
         if (is == null) {
             ClassLoader classLoader = ClasspathResolver.class.getClassLoader();
-            is = classLoader.getResourceAsStream(fullResourceName);
+            is = classLoader.getResourceAsStream(normalizeResourceName);
         }
 
         if (is != null) {
diff --git a/compiler/src/test/java/com/github/mustachejava/resolver/ClasspathResolverTest.java b/compiler/src/test/java/com/github/mustachejava/resolver/ClasspathResolverTest.java
index 3f0c29f..f9dea88 100644
--- a/compiler/src/test/java/com/github/mustachejava/resolver/ClasspathResolverTest.java
+++ b/compiler/src/test/java/com/github/mustachejava/resolver/ClasspathResolverTest.java
@@ -65,4 +65,17 @@ public class ClasspathResolverTest {
         underTest.getReader(null);
     }
 
+    @Test
+    public void getReaderWithRootAndResourceHasDoubleDotRelativePath() throws Exception {
+        ClasspathResolver underTest = new ClasspathResolver("templates");
+        Reader reader = underTest.getReader("absolute/../absolute_partials_template.html");
+        assertThat(reader, is(notNullValue()));
+    }
+
+    @Test
+    public void getReaderWithRootAndResourceHasDotRelativePath() throws Exception {
+        ClasspathResolver underTest = new ClasspathResolver("templates");
+        Reader reader = underTest.getReader("absolute/./nested_partials_sub.html");
+        assertThat(reader, is(notNullValue()));
+    }
 }
\ No newline at end of file
