Apache Maven 3.3.9
Maven home: /usr/share/maven
Java version: 1.8.0_212, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-8-openjdk-amd64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "4.9.0-9-amd64", arch: "amd64", family: "unix"
[DEBUG] Created new class realm maven.api
[DEBUG] Importing foreign packages into class realm maven.api
[DEBUG]   Imported: javax.enterprise.inject.* < plexus.core
[DEBUG]   Imported: javax.enterprise.util.* < plexus.core
[DEBUG]   Imported: javax.inject.* < plexus.core
[DEBUG]   Imported: org.apache.maven.* < plexus.core
[DEBUG]   Imported: org.apache.maven.artifact < plexus.core
[DEBUG]   Imported: org.apache.maven.classrealm < plexus.core
[DEBUG]   Imported: org.apache.maven.cli < plexus.core
[DEBUG]   Imported: org.apache.maven.configuration < plexus.core
[DEBUG]   Imported: org.apache.maven.exception < plexus.core
[DEBUG]   Imported: org.apache.maven.execution < plexus.core
[DEBUG]   Imported: org.apache.maven.execution.scope < plexus.core
[DEBUG]   Imported: org.apache.maven.lifecycle < plexus.core
[DEBUG]   Imported: org.apache.maven.model < plexus.core
[DEBUG]   Imported: org.apache.maven.monitor < plexus.core
[DEBUG]   Imported: org.apache.maven.plugin < plexus.core
[DEBUG]   Imported: org.apache.maven.profiles < plexus.core
[DEBUG]   Imported: org.apache.maven.project < plexus.core
[DEBUG]   Imported: org.apache.maven.reporting < plexus.core
[DEBUG]   Imported: org.apache.maven.repository < plexus.core
[DEBUG]   Imported: org.apache.maven.rtinfo < plexus.core
[DEBUG]   Imported: org.apache.maven.settings < plexus.core
[DEBUG]   Imported: org.apache.maven.toolchain < plexus.core
[DEBUG]   Imported: org.apache.maven.usability < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.* < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.authentication < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.authorization < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.events < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.observers < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.proxy < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.repository < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.resource < plexus.core
[DEBUG]   Imported: org.codehaus.classworlds < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.* < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.classworlds < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.component < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.configuration < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.container < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.context < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.lifecycle < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.logging < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.personality < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.Xpp3Dom < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParser < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParserException < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlSerializer < plexus.core
[DEBUG]   Imported: org.eclipse.aether.* < plexus.core
[DEBUG]   Imported: org.eclipse.aether.artifact < plexus.core
[DEBUG]   Imported: org.eclipse.aether.collection < plexus.core
[DEBUG]   Imported: org.eclipse.aether.deployment < plexus.core
[DEBUG]   Imported: org.eclipse.aether.graph < plexus.core
[DEBUG]   Imported: org.eclipse.aether.impl < plexus.core
[DEBUG]   Imported: org.eclipse.aether.installation < plexus.core
[DEBUG]   Imported: org.eclipse.aether.internal.impl < plexus.core
[DEBUG]   Imported: org.eclipse.aether.metadata < plexus.core
[DEBUG]   Imported: org.eclipse.aether.repository < plexus.core
[DEBUG]   Imported: org.eclipse.aether.resolution < plexus.core
[DEBUG]   Imported: org.eclipse.aether.spi < plexus.core
[DEBUG]   Imported: org.eclipse.aether.transfer < plexus.core
[DEBUG]   Imported: org.eclipse.aether.version < plexus.core
[DEBUG]   Imported: org.slf4j.* < plexus.core
[DEBUG]   Imported: org.slf4j.helpers.* < plexus.core
[DEBUG]   Imported: org.slf4j.spi.* < plexus.core
[DEBUG] Populating class realm maven.api
[INFO] Error stacktraces are turned on.
[DEBUG] Reading global settings from /usr/share/maven/conf/settings.xml
[DEBUG] Reading user settings from /home/bedanglot/.m2/settings.xml
[DEBUG] Reading global toolchains from /usr/share/maven/conf/toolchains.xml
[DEBUG] Reading user toolchains from /home/bedanglot/.m2/toolchains.xml
[DEBUG] Using local repository at /home/bedanglot/.m2/repository
[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for /home/bedanglot/.m2/repository
[INFO] Scanning for projects...
[DEBUG] Extension realms for project com.github.spullara.mustache.java:compiler:jar:0.9.5-SNAPSHOT: (none)
[DEBUG] Looking up lifecyle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project com.github.spullara.mustache.java:mustache.java:pom:0.9.5-SNAPSHOT: (none)
[DEBUG] Looking up lifecyle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] === REACTOR BUILD PLAN ================================================
[DEBUG] Project: com.github.spullara.mustache.java:compiler:jar:0.9.5-SNAPSHOT
[DEBUG] Tasks:   [eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT:amplify-unit-tests]
[DEBUG] Style:   Regular
[DEBUG] =======================================================================
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building compiler 0.9.5-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] === PROJECT BUILD PLAN ================================================
[DEBUG] Project:       com.github.spullara.mustache.java:compiler:0.9.5-SNAPSHOT
[DEBUG] Dependencies (collect): []
[DEBUG] Dependencies (resolve): [test]
[DEBUG] Repositories (dependencies): [Twitter (http://maven.twttr.com/, default, releases+snapshots), central (https://repo.maven.apache.org/maven2, default, releases)]
[DEBUG] Repositories (plugins)     : [central (https://repo.maven.apache.org/maven2, default, releases)]
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT:amplify-unit-tests (default-cli)
[DEBUG] Style:         Regular
[DEBUG] Configuration: <?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <allowPathInAssertions default-value="false">${allow-path-in-assertions}</allowPathInAssertions>
  <amplifiers default-value="None">${amplifiers}</amplifiers>
  <automaticBuilder default-value="MavenBuilder">${automatic-builder}</automaticBuilder>
  <budgetizer default-value="RandomBudgetizer">${budgetizer}</budgetizer>
  <cases>${cases}</cases>
  <clean default-value="false">${clean}</clean>
  <descartes default-value="true">${descartes}</descartes>
  <example default-value="false">${example}</example>
  <generateNewTestClass default-value="false">${generate-new-test-class}</generateNewTestClass>
  <help default-value="false">${help}</help>
  <iteration default-value="3">${iteration}</iteration>
  <keepOriginalTestMethods default-value="false">${keep-original-test-methods}</keepOriginalTestMethods>
  <mavenHome>${maven-home}</mavenHome>
  <maxTestAmplified default-value="200">${max-test-amplified}</maxTestAmplified>
  <noMinimize default-value="false">${no-minimize}</noMinimize>
  <outputPath default-value="target/dspot/output">${output-path}</outputPath>
  <pathPitResult>${path-pit-result}</pathPitResult>
  <pathToProperties default-value="">${path-to-properties}</pathToProperties>
  <pathToSecondVersion default-value="">${path-to-second-version}</pathToSecondVersion>
  <pathToTestListCsv default-value="">${path-to-test-list-csv}</pathToTestListCsv>
  <project default-value="${project}"/>
  <randomSeed default-value="23">${randomSeed}</randomSeed>
  <targetOneTestClass default-value="false">${targetOneTestClass}</targetOneTestClass>
  <test default-value="all">${test}</test>
  <testCriterion default-value="PitMutantScoreSelector">${test-criterion}</testCriterion>
  <timeOut default-value="10000">${timeOut}</timeOut>
  <useMavenToExeTest default-value="false">${use-maven-to-exe-test}</useMavenToExeTest>
  <verbose default-value="false">${verbose}</verbose>
  <withComment default-value="false">${with-comment}</withComment>
  <workingDirectory default-value="false">${working-directory}</workingDirectory>
</configuration>
[DEBUG] =======================================================================
[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=1, ConflictMarker.markTime=0, ConflictMarker.nodeCount=9, ConflictIdSorter.graphTime=1, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=7, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=3, ConflictResolver.conflictItemCount=8, DefaultDependencyCollector.collectTime=54, DefaultDependencyCollector.transformTime=7}
[DEBUG] com.github.spullara.mustache.java:compiler:jar:0.9.5-SNAPSHOT
[DEBUG]    junit:junit:jar:4.11:test
[DEBUG]       org.hamcrest:hamcrest-core:jar:1.3:test
[DEBUG]    com.fasterxml.jackson.core:jackson-databind:jar:2.7.4:test
[DEBUG]       com.fasterxml.jackson.core:jackson-annotations:jar:2.7.0:test
[DEBUG]       com.fasterxml.jackson.core:jackson-core:jar:2.7.4:test
[DEBUG]    com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:jar:2.7.4:test
[DEBUG]       org.yaml:snakeyaml:jar:1.15:test
[INFO] 
[INFO] --- dspot-maven:2.1.1-SNAPSHOT:amplify-unit-tests (default-cli) @ compiler ---
[DEBUG] Skipped remote request for eu.stamp-project:dspot:2.1.1-SNAPSHOT/maven-metadata.xml, locally installed metadata up-to-date.
[DEBUG] Skipped remote request for eu.stamp-project:dspot:2.1.1-SNAPSHOT/maven-metadata.xml, locally installed metadata up-to-date.
[DEBUG] Skipped remote request for eu.stamp-project:dspot:2.1.1-SNAPSHOT/maven-metadata.xml, locally installed metadata up-to-date.
[DEBUG] Skipped remote request for eu.stamp-project:dspot:2.1.1-SNAPSHOT/maven-metadata.xml, locally installed metadata up-to-date.
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.text/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.text/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.resources/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.expressions/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.osgi/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.filesystem/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.text/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.text/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.text/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.commands/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/bedanglot/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date.
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://repo.gradle.org/gradle/libs-releases-local/ was cached in the local repository, resolution will not be reattempted until the update interval of gradle-repo has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in https://oss.sonatype.org/content/repositories/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of sonatype-nexus-snapshots has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot was cached in the local repository, resolution will not be reattempted until the update interval of maven.inria.fr-snapshot has elapsed or updates are forced
[DEBUG] Failure to find org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in http://maven.inria.fr/artifactory/spoon-public-snapshot/ was cached in the local repository, resolution will not be reattempted until the update interval of gforge.inria.fr-release has elapsed or updates are forced
[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=6, ConflictMarker.markTime=2, ConflictMarker.nodeCount=2021, ConflictIdSorter.graphTime=4, ConflictIdSorter.topsortTime=1, ConflictIdSorter.conflictIdCount=117, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=16, ConflictResolver.conflictItemCount=393, DefaultDependencyCollector.collectTime=884, DefaultDependencyCollector.transformTime=29}
[DEBUG] eu.stamp-project:dspot-maven:jar:2.1.1-SNAPSHOT:
[DEBUG]    eu.stamp-project:dspot:jar:2.1.1-SNAPSHOT:compile
[DEBUG]       fr.inria.gforge.spoon:spoon-core:jar:7.3.0:compile
[DEBUG]          org.eclipse.jdt:org.eclipse.jdt.core:jar:3.15.0:compile
[DEBUG]             org.eclipse.platform:org.eclipse.core.resources:jar:3.13.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.core.expressions:jar:3.6.300:compile
[DEBUG]             org.eclipse.platform:org.eclipse.core.runtime:jar:3.15.200:compile
[DEBUG]                org.eclipse.platform:org.eclipse.osgi:jar:3.13.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.equinox.common:jar:3.10.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.core.jobs:jar:3.10.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.equinox.registry:jar:3.8.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.equinox.preferences:jar:3.7.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.core.contenttype:jar:3.7.300:compile
[DEBUG]                org.eclipse.platform:org.eclipse.equinox.app:jar:1.4.100:compile
[DEBUG]             org.eclipse.platform:org.eclipse.core.filesystem:jar:1.7.300:compile
[DEBUG]             org.eclipse.platform:org.eclipse.text:jar:3.8.100:compile
[DEBUG]                org.eclipse.platform:org.eclipse.core.commands:jar:3.9.300:compile
[DEBUG]          com.martiansoftware:jsap:jar:2.1:compile
[DEBUG]          log4j:log4j:jar:1.2.17:compile
[DEBUG]          org.tukaani:xz:jar:1.8:compile
[DEBUG]          com.fasterxml.jackson.core:jackson-databind:jar:2.9.8:compile
[DEBUG]             com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0:compile
[DEBUG]             com.fasterxml.jackson.core:jackson-core:jar:2.9.8:compile
[DEBUG]          org.apache.commons:commons-compress:jar:1.18:compile
[DEBUG]       junit:junit:jar:4.12:compile
[DEBUG]          org.hamcrest:hamcrest-core:jar:1.3:compile
[DEBUG]       com.google.code.gson:gson:jar:2.8.0:compile
[DEBUG]       org.apache.maven.shared:maven-invoker:jar:3.0.0:compile
[DEBUG]       org.slf4j:slf4j-api:jar:1.7.25:compile
[DEBUG]       org.slf4j:slf4j-log4j12:jar:1.7.25:compile
[DEBUG]       org.jacoco:org.jacoco.core:jar:0.7.9:compile
[DEBUG]          org.ow2.asm:asm-debug-all:jar:5.2:compile
[DEBUG]       eu.stamp-project:descartes:jar:1.1:compile
[DEBUG]          org.pitest:pitest:jar:1.2.0:compile
[DEBUG]          org.pitest:pitest-entry:jar:1.2.0:compile
[DEBUG]             com.thoughtworks.xstream:xstream:jar:1.4.8:compile
[DEBUG]                xmlpull:xmlpull:jar:1.1.3.1:compile
[DEBUG]                xpp3:xpp3_min:jar:1.1.4c:compile
[DEBUG]       org.gradle:gradle-tooling-api:jar:4.0.1:compile
[DEBUG]       org.mockito:mockito-core:jar:2.10.0:compile
[DEBUG]          net.bytebuddy:byte-buddy:jar:1.7.4:runtime
[DEBUG]          net.bytebuddy:byte-buddy-agent:jar:1.7.4:runtime
[DEBUG]          org.objenesis:objenesis:jar:2.6:runtime
[DEBUG]       eu.stamp-project:test-runner:jar:jar-with-dependencies:2.0.7:compile
[DEBUG]          org.junit.jupiter:junit-jupiter-api:jar:5.3.2:compile
[DEBUG]             org.apiguardian:apiguardian-api:jar:1.0.0:compile
[DEBUG]             org.opentest4j:opentest4j:jar:1.1.1:compile
[DEBUG]             org.junit.platform:junit-platform-commons:jar:1.3.2:compile
[DEBUG]          org.junit.jupiter:junit-jupiter-engine:jar:5.3.2:compile
[DEBUG]             org.junit.platform:junit-platform-engine:jar:1.3.2:compile
[DEBUG]          org.junit.platform:junit-platform-launcher:jar:1.3.2:compile
[DEBUG]          org.junit.jupiter:junit-jupiter-params:jar:5.3.2:compile
[DEBUG]       org.openclover:clover:jar:4.2.1:compile
[DEBUG]       fr.inria.gforge.spoon.labs:gumtree-spoon-ast-diff:jar:1.5:compile
[DEBUG]          com.github.gumtreediff:core:jar:2.1.0:compile
[DEBUG]             com.github.mpkorstanje:simmetrics-core:jar:3.2.3:compile
[DEBUG]                commons-codec:commons-codec:jar:1.10:compile
[DEBUG]             net.sf.trove4j:trove4j:jar:3.0.3:compile
[DEBUG]             org.jgrapht:jgrapht-core:jar:1.0.1:compile
[DEBUG]       org.ehcache:ehcache:jar:3.6.1:compile
[DEBUG]       org.apache.cxf:cxf-common-utilities:jar:2.4.1:compile
[DEBUG]          org.apache.ws.xmlschema:xmlschema-core:jar:2.0:compile
[DEBUG]          org.codehaus.woodstox:woodstox-core-asl:jar:4.1.1:runtime
[DEBUG]             org.codehaus.woodstox:stax2-api:jar:3.1.1:runtime
[DEBUG]    org.apache.maven:maven-plugin-api:jar:3.5.4:compile
[DEBUG]       org.apache.maven:maven-artifact:jar:3.5.4:compile
[DEBUG]       org.eclipse.sisu:org.eclipse.sisu.plexus:jar:0.3.3:compile
[DEBUG]          javax.enterprise:cdi-api:jar:1.0:compile
[DEBUG]             javax.annotation:jsr250-api:jar:1.0:compile
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:3.1.0:compile
[DEBUG]       org.codehaus.plexus:plexus-classworlds:jar:2.5.2:compile
[DEBUG]    org.apache.maven.plugin-testing:maven-plugin-testing-harness:jar:3.3.0:compile
[DEBUG]       commons-io:commons-io:jar:2.2:compile
[DEBUG]       org.codehaus.plexus:plexus-archiver:jar:2.2:compile
[DEBUG]          org.codehaus.plexus:plexus-io:jar:2.0.4:compile
[DEBUG]    org.apache.maven:maven-compat:jar:3.5.4:compile
[DEBUG]       org.apache.maven:maven-model-builder:jar:3.5.4:compile
[DEBUG]       org.apache.maven:maven-settings:jar:3.5.4:compile
[DEBUG]       org.apache.maven:maven-settings-builder:jar:3.5.4:compile
[DEBUG]          org.sonatype.plexus:plexus-sec-dispatcher:jar:1.4:compile
[DEBUG]             org.sonatype.plexus:plexus-cipher:jar:1.4:compile
[DEBUG]       org.apache.maven:maven-resolver-provider:jar:3.5.4:compile
[DEBUG]       org.apache.maven:maven-repository-metadata:jar:3.5.4:compile
[DEBUG]       org.apache.maven.resolver:maven-resolver-api:jar:1.1.1:compile
[DEBUG]       org.apache.maven.resolver:maven-resolver-util:jar:1.1.1:compile
[DEBUG]       org.apache.maven.resolver:maven-resolver-impl:jar:1.1.1:compile
[DEBUG]       org.codehaus.plexus:plexus-interpolation:jar:1.24:compile
[DEBUG]       org.codehaus.plexus:plexus-component-annotations:jar:1.7.1:compile
[DEBUG]       org.apache.maven.wagon:wagon-provider-api:jar:3.1.0:compile
[DEBUG]    org.apache.maven:maven-core:jar:3.5.4:compile
[DEBUG]       org.apache.maven:maven-builder-support:jar:3.5.4:compile
[DEBUG]       org.apache.maven.resolver:maven-resolver-spi:jar:1.1.1:compile
[DEBUG]       org.apache.maven.shared:maven-shared-utils:jar:3.2.1:compile
[DEBUG]       org.eclipse.sisu:org.eclipse.sisu.inject:jar:0.3.3:compile
[DEBUG]       com.google.inject:guice:jar:no_aop:4.2.0:compile
[DEBUG]          aopalliance:aopalliance:jar:1.0:compile
[DEBUG]       com.google.guava:guava:jar:20.0:compile
[DEBUG]       javax.inject:javax.inject:jar:1:compile
[DEBUG]       org.apache.commons:commons-lang3:jar:3.5:compile
[DEBUG]    org.apache.maven:maven-model:jar:3.5.4:compile
[DEBUG]    org.apache.maven:maven-aether-provider:jar:3.3.9:compile
[DEBUG]       org.eclipse.aether:aether-api:jar:1.0.2.v20150114:compile
[DEBUG]       org.eclipse.aether:aether-spi:jar:1.0.2.v20150114:compile
[DEBUG]       org.eclipse.aether:aether-util:jar:1.0.2.v20150114:compile
[DEBUG]       org.eclipse.aether:aether-impl:jar:1.0.2.v20150114:compile
[DEBUG]    org.apache.maven:maven-project:jar:2.2.1:compile
[DEBUG]       org.apache.maven:maven-profile:jar:2.2.1:compile
[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.2.1:compile
[DEBUG]          backport-util-concurrent:backport-util-concurrent:jar:3.1:compile
[DEBUG]       org.apache.maven:maven-plugin-registry:jar:2.2.1:compile
[DEBUG]       org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile
[DEBUG]          classworlds:classworlds:jar:1.1-alpha-2:compile
[DEBUG] Created new class realm plugin>eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT
[DEBUG] Importing foreign packages into class realm plugin>eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT
[DEBUG]   Imported:  < maven.api
[DEBUG] Populating class realm plugin>eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT
[DEBUG]   Included: eu.stamp-project:dspot-maven:jar:2.1.1-SNAPSHOT
[DEBUG]   Included: eu.stamp-project:dspot:jar:2.1.1-SNAPSHOT
[DEBUG]   Included: fr.inria.gforge.spoon:spoon-core:jar:7.3.0
[DEBUG]   Included: org.eclipse.jdt:org.eclipse.jdt.core:jar:3.15.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.resources:jar:3.13.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.expressions:jar:3.6.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.runtime:jar:3.15.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.osgi:jar:3.13.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.common:jar:3.10.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.jobs:jar:3.10.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.registry:jar:3.8.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.preferences:jar:3.7.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.contenttype:jar:3.7.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.app:jar:1.4.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.filesystem:jar:1.7.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.text:jar:3.8.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.commands:jar:3.9.300
[DEBUG]   Included: com.martiansoftware:jsap:jar:2.1
[DEBUG]   Included: log4j:log4j:jar:1.2.17
[DEBUG]   Included: org.tukaani:xz:jar:1.8
[DEBUG]   Included: com.fasterxml.jackson.core:jackson-databind:jar:2.9.8
[DEBUG]   Included: com.fasterxml.jackson.core:jackson-annotations:jar:2.9.0
[DEBUG]   Included: com.fasterxml.jackson.core:jackson-core:jar:2.9.8
[DEBUG]   Included: org.apache.commons:commons-compress:jar:1.18
[DEBUG]   Included: junit:junit:jar:4.12
[DEBUG]   Included: org.hamcrest:hamcrest-core:jar:1.3
[DEBUG]   Included: com.google.code.gson:gson:jar:2.8.0
[DEBUG]   Included: org.apache.maven.shared:maven-invoker:jar:3.0.0
[DEBUG]   Included: org.slf4j:slf4j-log4j12:jar:1.7.25
[DEBUG]   Included: org.jacoco:org.jacoco.core:jar:0.7.9
[DEBUG]   Included: org.ow2.asm:asm-debug-all:jar:5.2
[DEBUG]   Included: eu.stamp-project:descartes:jar:1.1
[DEBUG]   Included: org.pitest:pitest:jar:1.2.0
[DEBUG]   Included: org.pitest:pitest-entry:jar:1.2.0
[DEBUG]   Included: com.thoughtworks.xstream:xstream:jar:1.4.8
[DEBUG]   Included: xmlpull:xmlpull:jar:1.1.3.1
[DEBUG]   Included: xpp3:xpp3_min:jar:1.1.4c
[DEBUG]   Included: org.gradle:gradle-tooling-api:jar:4.0.1
[DEBUG]   Included: org.mockito:mockito-core:jar:2.10.0
[DEBUG]   Included: net.bytebuddy:byte-buddy:jar:1.7.4
[DEBUG]   Included: net.bytebuddy:byte-buddy-agent:jar:1.7.4
[DEBUG]   Included: org.objenesis:objenesis:jar:2.6
[DEBUG]   Included: eu.stamp-project:test-runner:jar:jar-with-dependencies:2.0.7
[DEBUG]   Included: org.junit.jupiter:junit-jupiter-api:jar:5.3.2
[DEBUG]   Included: org.apiguardian:apiguardian-api:jar:1.0.0
[DEBUG]   Included: org.opentest4j:opentest4j:jar:1.1.1
[DEBUG]   Included: org.junit.platform:junit-platform-commons:jar:1.3.2
[DEBUG]   Included: org.junit.jupiter:junit-jupiter-engine:jar:5.3.2
[DEBUG]   Included: org.junit.platform:junit-platform-engine:jar:1.3.2
[DEBUG]   Included: org.junit.platform:junit-platform-launcher:jar:1.3.2
[DEBUG]   Included: org.junit.jupiter:junit-jupiter-params:jar:5.3.2
[DEBUG]   Included: org.openclover:clover:jar:4.2.1
[DEBUG]   Included: fr.inria.gforge.spoon.labs:gumtree-spoon-ast-diff:jar:1.5
[DEBUG]   Included: com.github.gumtreediff:core:jar:2.1.0
[DEBUG]   Included: com.github.mpkorstanje:simmetrics-core:jar:3.2.3
[DEBUG]   Included: commons-codec:commons-codec:jar:1.10
[DEBUG]   Included: net.sf.trove4j:trove4j:jar:3.0.3
[DEBUG]   Included: org.jgrapht:jgrapht-core:jar:1.0.1
[DEBUG]   Included: org.ehcache:ehcache:jar:3.6.1
[DEBUG]   Included: org.apache.cxf:cxf-common-utilities:jar:2.4.1
[DEBUG]   Included: org.apache.ws.xmlschema:xmlschema-core:jar:2.0
[DEBUG]   Included: org.codehaus.woodstox:woodstox-core-asl:jar:4.1.1
[DEBUG]   Included: org.codehaus.woodstox:stax2-api:jar:3.1.1
[DEBUG]   Included: javax.enterprise:cdi-api:jar:1.0
[DEBUG]   Included: javax.annotation:jsr250-api:jar:1.0
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:3.1.0
[DEBUG]   Included: org.apache.maven.plugin-testing:maven-plugin-testing-harness:jar:3.3.0
[DEBUG]   Included: commons-io:commons-io:jar:2.2
[DEBUG]   Included: org.codehaus.plexus:plexus-archiver:jar:2.2
[DEBUG]   Included: org.codehaus.plexus:plexus-io:jar:2.0.4
[DEBUG]   Included: org.sonatype.plexus:plexus-sec-dispatcher:jar:1.4
[DEBUG]   Included: org.sonatype.plexus:plexus-cipher:jar:1.4
[DEBUG]   Included: org.apache.maven:maven-resolver-provider:jar:3.5.4
[DEBUG]   Included: org.apache.maven.resolver:maven-resolver-api:jar:1.1.1
[DEBUG]   Included: org.apache.maven.resolver:maven-resolver-util:jar:1.1.1
[DEBUG]   Included: org.apache.maven.resolver:maven-resolver-impl:jar:1.1.1
[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.24
[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:1.7.1
[DEBUG]   Included: org.apache.maven:maven-builder-support:jar:3.5.4
[DEBUG]   Included: org.apache.maven.resolver:maven-resolver-spi:jar:1.1.1
[DEBUG]   Included: org.apache.maven.shared:maven-shared-utils:jar:3.2.1
[DEBUG]   Included: org.eclipse.sisu:org.eclipse.sisu.inject:jar:0.3.3
[DEBUG]   Included: com.google.inject:guice:jar:no_aop:4.2.0
[DEBUG]   Included: aopalliance:aopalliance:jar:1.0
[DEBUG]   Included: com.google.guava:guava:jar:20.0
[DEBUG]   Included: org.apache.commons:commons-lang3:jar:3.5
[DEBUG]   Included: org.eclipse.aether:aether-util:jar:1.0.2.v20150114
[DEBUG]   Included: backport-util-concurrent:backport-util-concurrent:jar:3.1
[DEBUG] Configuring mojo eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT:amplify-unit-tests from plugin realm ClassRealm[plugin>eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT, parent: sun.misc.Launcher$AppClassLoader@1b6d3586]
[DEBUG] Configuring mojo 'eu.stamp-project:dspot-maven:2.1.1-SNAPSHOT:amplify-unit-tests' with basic configurator -->
[DEBUG]   (f) allowPathInAssertions = false
[DEBUG]   (f) amplifiers = [TestDataMutator, MethodAdd, MethodRemove, NullifierAmplifier]
[DEBUG]   (f) automaticBuilder = MavenBuilder
[DEBUG]   (f) budgetizer = SimpleBudgetizer
[DEBUG]   (f) cases = []
[DEBUG]   (f) clean = true
[DEBUG]   (f) descartes = true
[DEBUG]   (f) example = false
[DEBUG]   (f) generateNewTestClass = true
[DEBUG]   (f) help = false
[DEBUG]   (f) iteration = 3
[DEBUG]   (f) keepOriginalTestMethods = false
[DEBUG]   (f) maxTestAmplified = 100
[DEBUG]   (f) noMinimize = false
[DEBUG]   (f) outputPath = /tmp/dspot-experiments/results/april-2019/mustache.java/commit_2_d8936b4/input_amplification/3
[DEBUG]   (f) pathToSecondVersion = /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler
[DEBUG]   (f) pathToTestListCsv = /tmp/dspot-experiments/results/april-2019/mustache_subset.csv
[DEBUG]   (f) project = MavenProject: com.github.spullara.mustache.java:compiler:0.9.5-SNAPSHOT @ /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/pom.xml
[DEBUG]   (f) randomSeed = 23
[DEBUG]   (f) targetOneTestClass = false
[DEBUG]   (f) test = [all]
[DEBUG]   (f) testCriterion = ChangeDetectorSelector
[DEBUG]   (f) timeOut = 10000
[DEBUG]   (f) useMavenToExeTest = false
[DEBUG]   (f) verbose = true
[DEBUG]   (f) withComment = false
[DEBUG]   (f) workingDirectory = true
[DEBUG] -- end configuration --
[INFO] Path to runner Classes: /home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar
[INFO] /home/bedanglot/.m2/repository/org/jacoco/org.jacoco.core/0.7.9/org.jacoco.core-0.7.9.jar
[INFO] /home/bedanglot/.m2/repository/org/ow2/asm/asm-debug-all/5.2/asm-debug-all-5.2.jar
[INFO] /home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar
[WARNING] : unknown automatic builder specified in configuration, going to default.
[INFO] Default: provided Maven automatic builder.
[INFO] Using /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/pom.xml to run maven.
[INFO] Using /usr/share/maven/ for maven home
[INFO] run maven: /usr/share/maven//bin/mvn clean test -DskipTests dependency:build-classpath -Dmdep.outputFile=target/dspot/classpath
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building compiler 0.9.5-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ compiler ---
[INFO] Deleting /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ compiler ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ compiler ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 112 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 42 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/src/test/java/com/github/mustachejava/FallbackTest.java: Some input files use or override a deprecated API.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/src/test/java/com/github/mustachejava/FallbackTest.java: Recompile with -Xlint:deprecation for details.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/src/test/java/com/github/mustachejava/FallbackTest.java: Some input files use unchecked or unsafe operations.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/src/test/java/com/github/mustachejava/FallbackTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ compiler ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- maven-dependency-plugin:2.8:build-classpath (default-cli) @ compiler ---
[INFO] Wrote classpath file '/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/classpath'.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3.296 s
[INFO] Finished at: 2019-05-23T22:18:03+02:00
[INFO] Final Memory: 32M/2105M
[INFO] ------------------------------------------------------------------------
[INFO] Amplification of com.github.mustachejava.SpecTest (6 test(s))
[INFO] Assertion amplification of com.github.mustachejava.SpecTest (6 test(s))
[DEBUG] Starting 15 Services...
[DEBUG] All Services successfully started, 15 Services in 6ms
[DEBUG] Creating Cache 'frameworkCache' in EhcacheManager.
[DEBUG] Serializer for <java.lang.String> : org.ehcache.impl.serialization.StringSerializer@3457cc8d
[DEBUG] Could not create serializers for frameworkCache
org.ehcache.spi.serialization.UnsupportedTypeException: No serializer found for type 'eu.stamp_project.test_framework.TestFrameworkSupport'
	at org.ehcache.impl.internal.spi.serialization.DefaultSerializationProvider.getSerializerClassFor(DefaultSerializationProvider.java:136)
	at org.ehcache.impl.internal.spi.serialization.DefaultSerializationProvider.createSerializer(DefaultSerializationProvider.java:98)
	at org.ehcache.impl.internal.spi.serialization.DefaultSerializationProvider.createValueSerializer(DefaultSerializationProvider.java:90)
	at org.ehcache.core.EhcacheManager.getStore(EhcacheManager.java:478)
	at org.ehcache.core.EhcacheManager.createNewEhcache(EhcacheManager.java:317)
	at org.ehcache.core.EhcacheManager.createCache(EhcacheManager.java:266)
	at org.ehcache.core.EhcacheManager.init(EhcacheManager.java:582)
	at org.ehcache.config.builders.CacheManagerBuilder.build(CacheManagerBuilder.java:72)
	at eu.stamp_project.utils.DSpotCache.<clinit>(DSpotCache.java:21)
	at eu.stamp_project.test_framework.TestFramework.getTestFramework(TestFramework.java:128)
	at eu.stamp_project.test_framework.TestFramework.isJUnit5(TestFramework.java:67)
	at eu.stamp_project.dspot.Amplification.amplification(Amplification.java:84)
	at eu.stamp_project.dspot.DSpot._amplify(DSpot.java:274)
	at eu.stamp_project.dspot.DSpot.lambda$amplifyTestClassesTestMethods$5(DSpot.java:255)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at eu.stamp_project.dspot.DSpot.amplifyTestClassesTestMethods(DSpot.java:256)
	at eu.stamp_project.Main.run(Main.java:65)
	at eu.stamp_project.DSpotMojo.execute(DSpotMojo.java:311)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
[DEBUG] Copier for <java.lang.String> : org.ehcache.impl.copy.IdentityCopier@52ba685a
[DEBUG] Copier for <eu.stamp_project.test_framework.TestFrameworkSupport> : org.ehcache.impl.copy.IdentityCopier@63d677f5
[DEBUG] Initialize successful.
[INFO] Cache 'frameworkCache' created in EhcacheManager.
[DEBUG] Initialize successful.
[WARNING] You gave an empty filter. To use PIT, it is recommend to specify a filter, at least, the top package of your program, otherwise, PIT may take a long time or could not be run.
[INFO] A new filter has been computed on the fly: com.github.mustachejava.*
[INFO] Using /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/pom.xml to run maven.
[INFO] Using /usr/share/maven/ for maven home
[INFO] run maven: /usr/share/maven//bin/mvn clean test -DskipTests
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building compiler 0.9.5-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ compiler ---
[INFO] Deleting /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ compiler ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ compiler ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 112 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 42 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/ConcurrencyTest.java: Some input files use or override a deprecated API.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/ConcurrencyTest.java: Recompile with -Xlint:deprecation for details.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java: Some input files use unchecked or unsafe operations.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ compiler ---
[INFO] Tests are skipped.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.794 s
[INFO] Finished at: 2019-05-23T22:18:09+02:00
[INFO] Final Memory: 26M/2057M
[INFO] ------------------------------------------------------------------------
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters:lambdas:inverted:partials:sections:interpolations 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters:lambdas:inverted:partials:sections:interpolations
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas,interpolations,inverted,delimiters,sections,partials
[INFO] Run tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters:lambdas:inverted:partials:sections:interpolations 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters:lambdas:inverted:partials:sections:interpolations
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas,interpolations,inverted,delimiters,sections,partials
[INFO] 6 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 16% |======== ]/ 33% |================ ]- 50% |========================= ]\ 66% |================================= ]| 83% |========================================= ]/100% |================================================== ]-
[INFO] Run instrumented tests. (18)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_withlog0:lambdas_withlog0:inverted_withlog0:partials_withlog0:sections_withlog0:interpolations_withlog0:delimiters_withlog1:lambdas_withlog1:inverted_withlog1:partials_withlog1:sections_withlog1:interpolations_withlog1:delimiters_withlog2:lambdas_withlog2:inverted_withlog2:partials_withlog2:sections_withlog2:interpolations_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_withlog0:lambdas_withlog0:inverted_withlog0:partials_withlog0:sections_withlog0:interpolations_withlog0:delimiters_withlog1:lambdas_withlog1:inverted_withlog1:partials_withlog1:sections_withlog1:interpolations_withlog1:delimiters_withlog2:lambdas_withlog2:inverted_withlog2:partials_withlog2:sections_withlog2:interpolations_withlog2
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_withlog0,lambdas_withlog1,lambdas_withlog2,sections_withlog0,sections_withlog1,sections_withlog2,interpolations_withlog0,interpolations_withlog1,interpolations_withlog2,inverted_withlog0,inverted_withlog1,inverted_withlog2,partials_withlog0,partials_withlog1,partials_withlog2,delimiters_withlog0,delimiters_withlog1,delimiters_withlog2
[INFO] Generating assertions...
[INFO] Could not generate any test with assertions
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Applying Input-amplification and Assertion-amplification test by test.
[INFO] Amplification of delimiters, (1/6)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 53ms
  1% | ]/[INFO] 10 new tests generated
[INFO] Run tests. (10)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimitersnull10:delimiters_literalMutationString6:delimiters_literalMutationString5:delimiters_literalMutationString1:delimiters_literalMutationString2:delimiters_literalMutationString3:delimiters_literalMutationString4:delimiters_add8:delimiters_add7:delimiters_remove9 
Parsing --class com.github.mustachejava.SpecTest --tests delimitersnull10:delimiters_literalMutationString6:delimiters_literalMutationString5:delimiters_literalMutationString1:delimiters_literalMutationString2:delimiters_literalMutationString3:delimiters_literalMutationString4:delimiters_add8:delimiters_add7:delimiters_remove9
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_remove9,delimiters_add7,delimiters_add8,delimiters_literalMutationString1(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6(com.github.mustachejava.SpecTest): null,delimitersnull10(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================ ]/ 66% |================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_withlog0:delimiters_add7_withlog0:delimiters_add8_withlog1:delimiters_add7_withlog1:delimiters_add8_withlog2:delimiters_add7_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_withlog0:delimiters_add7_withlog0:delimiters_add8_withlog1:delimiters_add7_withlog1:delimiters_add8_withlog2:delimiters_add7_withlog2
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_withlog0,delimiters_add8_withlog1,delimiters_add8_withlog2,delimiters_add7_withlog0,delimiters_add7_withlog1,delimiters_add7_withlog2
[INFO] Generating assertions...
[INFO] 7 test fail, generating try/catch/fail blocks...
[INFO] 8 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8:delimitersnull10_failAssert0:delimiters_literalMutationString6_failAssert0:delimiters_literalMutationString5_failAssert0:delimiters_literalMutationString1_failAssert0:delimiters_literalMutationString2_failAssert0:delimiters_literalMutationString3_failAssert0:delimiters_literalMutationString4_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8:delimitersnull10_failAssert0:delimiters_literalMutationString6_failAssert0:delimiters_literalMutationString5_failAssert0:delimiters_literalMutationString1_failAssert0:delimiters_literalMutationString2_failAssert0:delimiters_literalMutationString3_failAssert0:delimiters_literalMutationString4_failAssert0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimitersnull10_failAssert0,delimiters_literalMutationString6_failAssert0,delimiters_add8,delimiters_literalMutationString5_failAssert0,delimiters_literalMutationString4_failAssert0,delimiters_literalMutationString3_failAssert0,delimiters_literalMutationString2_failAssert0,delimiters_literalMutationString1_failAssert0
[INFO] Assertion amplification: 8 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:15 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:15 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:15 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8:delimitersnull10_failAssert0:delimiters_literalMutationString6_failAssert0:delimiters_literalMutationString5_failAssert0:delimiters_literalMutationString1_failAssert0:delimiters_literalMutationString2_failAssert0:delimiters_literalMutationString3_failAssert0:delimiters_literalMutationString4_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8:delimitersnull10_failAssert0:delimiters_literalMutationString6_failAssert0:delimiters_literalMutationString5_failAssert0:delimiters_literalMutationString1_failAssert0:delimiters_literalMutationString2_failAssert0:delimiters_literalMutationString3_failAssert0:delimiters_literalMutationString4_failAssert0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimitersnull10_failAssert0,delimiters_literalMutationString6_failAssert0,delimiters_add8,delimiters_literalMutationString5_failAssert0,delimiters_literalMutationString4_failAssert0,delimiters_literalMutationString3_failAssert0,delimiters_literalMutationString2_failAssert0,delimiters_literalMutationString1_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 8 tests selected to be amplified over 8 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 241ms
  1% | ]/ 55% |=========================== ]\ 96% |================================================ ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_literalMutationString6_failAssert0null148:delimiters_literalMutationString5_failAssert0null149:delimiters_add8null146:delimiters_add8null147:delimiters_literalMutationString4_failAssert0null153:delimiters_literalMutationString1_failAssert0null150:delimiters_literalMutationString2_failAssert0null151:delimiters_literalMutationString3_failAssert0null152:delimiters_literalMutationString6_failAssert0_literalMutationString51:delimiters_literalMutationString6_failAssert0_literalMutationString50:delimiters_literalMutationString6_failAssert0_literalMutationString46:delimiters_literalMutationString5_failAssert0_literalMutationString56:delimiters_literalMutationString5_failAssert0_literalMutationString54:delimiters_literalMutationString5_failAssert0_literalMutationString57:delimiters_add8_literalMutationString41:delimiters_add8_literalMutationString35:delimiters_add8_literalMutationString40:delimiters_literalMutationString4_failAssert0_literalMutationString76:delimiters_literalMutationString4_failAssert0_literalMutationString73:delimiters_literalMutationString4_failAssert0_literalMutationString74:delimiters_literalMutationString1_failAssert0_literalMutationString60:delimiters_literalMutationString1_failAssert0_literalMutationString61:delimiters_literalMutationString1_failAssert0_literalMutationString58:delimiters_literalMutationString2_failAssert0_literalMutationString64:delimiters_literalMutationString2_failAssert0_literalMutationString66:delimiters_literalMutationString2_failAssert0_literalMutationString65:delimiters_literalMutationString3_failAssert0_literalMutationString67:delimiters_literalMutationString3_failAssert0_literalMutationString68:delimiters_literalMutationString3_failAssert0_literalMutationString72:delimiters_literalMutationString6_failAssert0_add129:delimiters_literalMutationString6_failAssert0_add127:delimiters_literalMutationString6_failAssert0_add128:delimiters_literalMutationString5_failAssert0_add130:delimiters_literalMutationString5_failAssert0_add131:delimiters_literalMutationString5_failAssert0_add132:delimiters_add8_add83:delimiters_add8_add118:delimiters_add8_add101:delimiters_literalMutationString4_failAssert0_add144:delimiters_literalMutationString4_failAssert0_add143:delimiters_literalMutationString4_failAssert0_add142:delimitersnull10_failAssert0_add124:delimitersnull10_failAssert0_add125:delimitersnull10_failAssert0_add126:delimiters_literalMutationString1_failAssert0_add134:delimiters_literalMutationString1_failAssert0_add135:delimiters_literalMutationString1_failAssert0_add133:delimiters_literalMutationString2_failAssert0_add136:delimiters_literalMutationString2_failAssert0_add138:delimiters_literalMutationString2_failAssert0_add137:delimiters_literalMutationString3_failAssert0_add139:delimiters_literalMutationString3_failAssert0_add141:delimiters_literalMutationString3_failAssert0_add140:delimiters_add8_remove145:delimiters_literalMutationString6_failAssert0_literalMutationString49:delimiters_literalMutationString6_failAssert0_literalMutationString48:delimiters_literalMutationString6_failAssert0_literalMutationString47:delimiters_literalMutationString5_failAssert0_literalMutationString52:delimiters_literalMutationString5_failAssert0_literalMutationString53:delimiters_literalMutationString5_failAssert0_literalMutationString55:delimiters_add8_literalMutationString45:delimiters_add8_literalMutationString34:delimiters_add8_literalMutationString37:delimiters_literalMutationString4_failAssert0_literalMutationString75:delimiters_literalMutationString4_failAssert0_literalMutationString77:delimiters_literalMutationString4_failAssert0_literalMutationString78:delimiters_literalMutationString1_failAssert0_literalMutationString62:delimiters_literalMutationString1_failAssert0_literalMutationString59:delimiters_literalMutationString1_failAssert0_literalMutationString63:delimiters_literalMutationString3_failAssert0_literalMutationString70:delimiters_literalMutationString3_failAssert0_literalMutationString71:delimiters_literalMutationString3_failAssert0_literalMutationString69:delimiters_add8_add86:delimiters_add8_add80:delimiters_add8_add117:delimiters_add8_add106:delimiters_add8_add85:delimiters_add8_add79:delimiters_add8_add102:delimiters_add8_add107:delimiters_add8_add84:delimiters_add8_add114:delimiters_add8_add121:delimiters_add8_add111:delimiters_add8_add88:delimiters_add8_add93:delimiters_add8_add112:delimiters_add8_add115:delimiters_add8_add81:delimiters_add8_add100:delimiters_add8_add94:delimiters_add8_add91:delimiters_add8_add105:delimiters_add8_add99:delimiters_add8_add119:delimiters_add8_literalMutationString36:delimiters_add8_literalMutationString44:delimiters_add8_add122:delimiters_add8_add103:delimiters_add8_add89 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_literalMutationString6_failAssert0null148:delimiters_literalMutationString5_failAssert0null149:delimiters_add8null146:delimiters_add8null147:delimiters_literalMutationString4_failAssert0null153:delimiters_literalMutationString1_failAssert0null150:delimiters_literalMutationString2_failAssert0null151:delimiters_literalMutationString3_failAssert0null152:delimiters_literalMutationString6_failAssert0_literalMutationString51:delimiters_literalMutationString6_failAssert0_literalMutationString50:delimiters_literalMutationString6_failAssert0_literalMutationString46:delimiters_literalMutationString5_failAssert0_literalMutationString56:delimiters_literalMutationString5_failAssert0_literalMutationString54:delimiters_literalMutationString5_failAssert0_literalMutationString57:delimiters_add8_literalMutationString41:delimiters_add8_literalMutationString35:delimiters_add8_literalMutationString40:delimiters_literalMutationString4_failAssert0_literalMutationString76:delimiters_literalMutationString4_failAssert0_literalMutationString73:delimiters_literalMutationString4_failAssert0_literalMutationString74:delimiters_literalMutationString1_failAssert0_literalMutationString60:delimiters_literalMutationString1_failAssert0_literalMutationString61:delimiters_literalMutationString1_failAssert0_literalMutationString58:delimiters_literalMutationString2_failAssert0_literalMutationString64:delimiters_literalMutationString2_failAssert0_literalMutationString66:delimiters_literalMutationString2_failAssert0_literalMutationString65:delimiters_literalMutationString3_failAssert0_literalMutationString67:delimiters_literalMutationString3_failAssert0_literalMutationString68:delimiters_literalMutationString3_failAssert0_literalMutationString72:delimiters_literalMutationString6_failAssert0_add129:delimiters_literalMutationString6_failAssert0_add127:delimiters_literalMutationString6_failAssert0_add128:delimiters_literalMutationString5_failAssert0_add130:delimiters_literalMutationString5_failAssert0_add131:delimiters_literalMutationString5_failAssert0_add132:delimiters_add8_add83:delimiters_add8_add118:delimiters_add8_add101:delimiters_literalMutationString4_failAssert0_add144:delimiters_literalMutationString4_failAssert0_add143:delimiters_literalMutationString4_failAssert0_add142:delimitersnull10_failAssert0_add124:delimitersnull10_failAssert0_add125:delimitersnull10_failAssert0_add126:delimiters_literalMutationString1_failAssert0_add134:delimiters_literalMutationString1_failAssert0_add135:delimiters_literalMutationString1_failAssert0_add133:delimiters_literalMutationString2_failAssert0_add136:delimiters_literalMutationString2_failAssert0_add138:delimiters_literalMutationString2_failAssert0_add137:delimiters_literalMutationString3_failAssert0_add139:delimiters_literalMutationString3_failAssert0_add141:delimiters_literalMutationString3_failAssert0_add140:delimiters_add8_remove145:delimiters_literalMutationString6_failAssert0_literalMutationString49:delimiters_literalMutationString6_failAssert0_literalMutationString48:delimiters_literalMutationString6_failAssert0_literalMutationString47:delimiters_literalMutationString5_failAssert0_literalMutationString52:delimiters_literalMutationString5_failAssert0_literalMutationString53:delimiters_literalMutationString5_failAssert0_literalMutationString55:delimiters_add8_literalMutationString45:delimiters_add8_literalMutationString34:delimiters_add8_literalMutationString37:delimiters_literalMutationString4_failAssert0_literalMutationString75:delimiters_literalMutationString4_failAssert0_literalMutationString77:delimiters_literalMutationString4_failAssert0_literalMutationString78:delimiters_literalMutationString1_failAssert0_literalMutationString62:delimiters_literalMutationString1_failAssert0_literalMutationString59:delimiters_literalMutationString1_failAssert0_literalMutationString63:delimiters_literalMutationString3_failAssert0_literalMutationString70:delimiters_literalMutationString3_failAssert0_literalMutationString71:delimiters_literalMutationString3_failAssert0_literalMutationString69:delimiters_add8_add86:delimiters_add8_add80:delimiters_add8_add117:delimiters_add8_add106:delimiters_add8_add85:delimiters_add8_add79:delimiters_add8_add102:delimiters_add8_add107:delimiters_add8_add84:delimiters_add8_add114:delimiters_add8_add121:delimiters_add8_add111:delimiters_add8_add88:delimiters_add8_add93:delimiters_add8_add112:delimiters_add8_add115:delimiters_add8_add81:delimiters_add8_add100:delimiters_add8_add94:delimiters_add8_add91:delimiters_add8_add105:delimiters_add8_add99:delimiters_add8_add119:delimiters_add8_literalMutationString36:delimiters_add8_literalMutationString44:delimiters_add8_add122:delimiters_add8_add103:delimiters_add8_add89
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_remove145,delimiters_add8_add79,delimiters_add8_add80,delimiters_add8_add81,delimiters_add8_add83,delimiters_add8_add84,delimiters_add8_add85,delimiters_add8_add86,delimiters_add8_add88,delimiters_add8_add89,delimiters_add8_add91,delimiters_add8_add93,delimiters_add8_add94,delimiters_add8_add99,delimiters_add8_literalMutationString34,delimiters_add8_add100,delimiters_add8_add101,delimiters_add8_add102,delimiters_add8_add103,delimiters_add8_add105,delimiters_add8_add106,delimiters_add8_add107,delimiters_add8_add111,delimiters_add8_add112,delimiters_add8_add114,delimiters_add8_add115,delimiters_add8_add117,delimiters_add8_add118,delimiters_add8_add119,delimiters_add8_add121,delimiters_add8_add122,delimiters_literalMutationString5_failAssert0null149(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString46(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString47(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString48(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString49(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString50(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString51(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_add136(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_add137(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_add138(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0null153(com.github.mustachejava.SpecTest): null,delimiters_add8null146(com.github.mustachejava.SpecTest): null,delimiters_add8null147(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_add133(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_add134(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_add135(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0null152(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0null151(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0null150(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString35(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString36(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString37(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString58(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString59(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString60(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString61(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString62(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString63(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_add127(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_add128(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_add129(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_literalMutationString64(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_literalMutationString65(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_literalMutationString66(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add132(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString67(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString68(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString69(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString70(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString71(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString72(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add142(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add143(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add144(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_literalMutationString73(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_literalMutationString74(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_literalMutationString75(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_literalMutationString76(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_literalMutationString77(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_literalMutationString78(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0null148(com.github.mustachejava.SpecTest): null,delimitersnull10_failAssert0_add124(com.github.mustachejava.SpecTest): null,delimitersnull10_failAssert0_add125(com.github.mustachejava.SpecTest): null,delimitersnull10_failAssert0_add126(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_literalMutationString52(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_literalMutationString53(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_literalMutationString54(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_literalMutationString55(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_literalMutationString56(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_literalMutationString57(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add139(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add140(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add141(com.github.mustachejava.SpecTest): null
[INFO] 31 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |= ]/  6% |=== ]-  9% |==== ]\ 12% |====== ]| 16% |======== ]/ 19% |========= ]- 22% |=========== ]\ 25% |============ ]| 29% |============== ]/ 32% |================ ]- 35% |================= ]\ 38% |=================== ]| 41% |==================== ]/ 45% |====================== ]- 48% |======================== ]\ 51% |========================= ]| 54% |=========================== ]/ 58% |============================= ]- 61% |============================== ]\ 64% |================================ ]| 67% |================================= ]/ 70% |=================================== ]- 74% |===================================== ]\ 77% |====================================== ]| 80% |======================================== ]/ 83% |========================================= ]- 87% |=========================================== ]\ 90% |============================================= ]| 93% |============================================== ]/ 96% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (93)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_add83_withlog0:delimiters_add8_add118_withlog0:delimiters_add8_add101_withlog0:delimiters_add8_remove145_withlog0:delimiters_add8_literalMutationString34_withlog0:delimiters_add8_add86_withlog0:delimiters_add8_add80_withlog0:delimiters_add8_add117_withlog0:delimiters_add8_add106_withlog0:delimiters_add8_add85_withlog0:delimiters_add8_add79_withlog0:delimiters_add8_add102_withlog0:delimiters_add8_add107_withlog0:delimiters_add8_add84_withlog0:delimiters_add8_add114_withlog0:delimiters_add8_add121_withlog0:delimiters_add8_add111_withlog0:delimiters_add8_add88_withlog0:delimiters_add8_add93_withlog0:delimiters_add8_add112_withlog0:delimiters_add8_add115_withlog0:delimiters_add8_add81_withlog0:delimiters_add8_add100_withlog0:delimiters_add8_add94_withlog0:delimiters_add8_add91_withlog0:delimiters_add8_add105_withlog0:delimiters_add8_add99_withlog0:delimiters_add8_add119_withlog0:delimiters_add8_add122_withlog0:delimiters_add8_add103_withlog0:delimiters_add8_add89_withlog0:delimiters_add8_add83_withlog1:delimiters_add8_add118_withlog1:delimiters_add8_add101_withlog1:delimiters_add8_remove145_withlog1:delimiters_add8_literalMutationString34_withlog1:delimiters_add8_add86_withlog1:delimiters_add8_add80_withlog1:delimiters_add8_add117_withlog1:delimiters_add8_add106_withlog1:delimiters_add8_add85_withlog1:delimiters_add8_add79_withlog1:delimiters_add8_add102_withlog1:delimiters_add8_add107_withlog1:delimiters_add8_add84_withlog1:delimiters_add8_add114_withlog1:delimiters_add8_add121_withlog1:delimiters_add8_add111_withlog1:delimiters_add8_add88_withlog1:delimiters_add8_add93_withlog1:delimiters_add8_add112_withlog1:delimiters_add8_add115_withlog1:delimiters_add8_add81_withlog1:delimiters_add8_add100_withlog1:delimiters_add8_add94_withlog1:delimiters_add8_add91_withlog1:delimiters_add8_add105_withlog1:delimiters_add8_add99_withlog1:delimiters_add8_add119_withlog1:delimiters_add8_add122_withlog1:delimiters_add8_add103_withlog1:delimiters_add8_add89_withlog1:delimiters_add8_add83_withlog2:delimiters_add8_add118_withlog2:delimiters_add8_add101_withlog2:delimiters_add8_remove145_withlog2:delimiters_add8_literalMutationString34_withlog2:delimiters_add8_add86_withlog2:delimiters_add8_add80_withlog2:delimiters_add8_add117_withlog2:delimiters_add8_add106_withlog2:delimiters_add8_add85_withlog2:delimiters_add8_add79_withlog2:delimiters_add8_add102_withlog2:delimiters_add8_add107_withlog2:delimiters_add8_add84_withlog2:delimiters_add8_add114_withlog2:delimiters_add8_add121_withlog2:delimiters_add8_add111_withlog2:delimiters_add8_add88_withlog2:delimiters_add8_add93_withlog2:delimiters_add8_add112_withlog2:delimiters_add8_add115_withlog2:delimiters_add8_add81_withlog2:delimiters_add8_add100_withlog2:delimiters_add8_add94_withlog2:delimiters_add8_add91_withlog2:delimiters_add8_add105_withlog2:delimiters_add8_add99_withlog2:delimiters_add8_add119_withlog2:delimiters_add8_add122_withlog2:delimiters_add8_add103_withlog2:delimiters_add8_add89_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_add83_withlog0:delimiters_add8_add118_withlog0:delimiters_add8_add101_withlog0:delimiters_add8_remove145_withlog0:delimiters_add8_literalMutationString34_withlog0:delimiters_add8_add86_withlog0:delimiters_add8_add80_withlog0:delimiters_add8_add117_withlog0:delimiters_add8_add106_withlog0:delimiters_add8_add85_withlog0:delimiters_add8_add79_withlog0:delimiters_add8_add102_withlog0:delimiters_add8_add107_withlog0:delimiters_add8_add84_withlog0:delimiters_add8_add114_withlog0:delimiters_add8_add121_withlog0:delimiters_add8_add111_withlog0:delimiters_add8_add88_withlog0:delimiters_add8_add93_withlog0:delimiters_add8_add112_withlog0:delimiters_add8_add115_withlog0:delimiters_add8_add81_withlog0:delimiters_add8_add100_withlog0:delimiters_add8_add94_withlog0:delimiters_add8_add91_withlog0:delimiters_add8_add105_withlog0:delimiters_add8_add99_withlog0:delimiters_add8_add119_withlog0:delimiters_add8_add122_withlog0:delimiters_add8_add103_withlog0:delimiters_add8_add89_withlog0:delimiters_add8_add83_withlog1:delimiters_add8_add118_withlog1:delimiters_add8_add101_withlog1:delimiters_add8_remove145_withlog1:delimiters_add8_literalMutationString34_withlog1:delimiters_add8_add86_withlog1:delimiters_add8_add80_withlog1:delimiters_add8_add117_withlog1:delimiters_add8_add106_withlog1:delimiters_add8_add85_withlog1:delimiters_add8_add79_withlog1:delimiters_add8_add102_withlog1:delimiters_add8_add107_withlog1:delimiters_add8_add84_withlog1:delimiters_add8_add114_withlog1:delimiters_add8_add121_withlog1:delimiters_add8_add111_withlog1:delimiters_add8_add88_withlog1:delimiters_add8_add93_withlog1:delimiters_add8_add112_withlog1:delimiters_add8_add115_withlog1:delimiters_add8_add81_withlog1:delimiters_add8_add100_withlog1:delimiters_add8_add94_withlog1:delimiters_add8_add91_withlog1:delimiters_add8_add105_withlog1:delimiters_add8_add99_withlog1:delimiters_add8_add119_withlog1:delimiters_add8_add122_withlog1:delimiters_add8_add103_withlog1:delimiters_add8_add89_withlog1:delimiters_add8_add83_withlog2:delimiters_add8_add118_withlog2:delimiters_add8_add101_withlog2:delimiters_add8_remove145_withlog2:delimiters_add8_literalMutationString34_withlog2:delimiters_add8_add86_withlog2:delimiters_add8_add80_withlog2:delimiters_add8_add117_withlog2:delimiters_add8_add106_withlog2:delimiters_add8_add85_withlog2:delimiters_add8_add79_withlog2:delimiters_add8_add102_withlog2:delimiters_add8_add107_withlog2:delimiters_add8_add84_withlog2:delimiters_add8_add114_withlog2:delimiters_add8_add121_withlog2:delimiters_add8_add111_withlog2:delimiters_add8_add88_withlog2:delimiters_add8_add93_withlog2:delimiters_add8_add112_withlog2:delimiters_add8_add115_withlog2:delimiters_add8_add81_withlog2:delimiters_add8_add100_withlog2:delimiters_add8_add94_withlog2:delimiters_add8_add91_withlog2:delimiters_add8_add105_withlog2:delimiters_add8_add99_withlog2:delimiters_add8_add119_withlog2:delimiters_add8_add122_withlog2:delimiters_add8_add103_withlog2:delimiters_add8_add89_withlog2
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_add79_withlog0,delimiters_add8_add79_withlog1,delimiters_add8_add79_withlog2,delimiters_add8_add107_withlog0,delimiters_add8_add107_withlog1,delimiters_add8_add107_withlog2,delimiters_add8_add99_withlog0,delimiters_add8_add99_withlog1,delimiters_add8_add99_withlog2,delimiters_add8_add106_withlog0,delimiters_add8_add106_withlog1,delimiters_add8_add106_withlog2,delimiters_add8_literalMutationString34_withlog0,delimiters_add8_literalMutationString34_withlog1,delimiters_add8_literalMutationString34_withlog2,delimiters_add8_add105_withlog0,delimiters_add8_add105_withlog1,delimiters_add8_add105_withlog2,delimiters_add8_add103_withlog0,delimiters_add8_add103_withlog1,delimiters_add8_add103_withlog2,delimiters_add8_add102_withlog0,delimiters_add8_add102_withlog1,delimiters_add8_add102_withlog2,delimiters_add8_add94_withlog0,delimiters_add8_add94_withlog1,delimiters_add8_add94_withlog2,delimiters_add8_add101_withlog0,delimiters_add8_add101_withlog1,delimiters_add8_add101_withlog2,delimiters_add8_add93_withlog0,delimiters_add8_add93_withlog1,delimiters_add8_add93_withlog2,delimiters_add8_add100_withlog0,delimiters_add8_add100_withlog1,delimiters_add8_add100_withlog2,delimiters_add8_add122_withlog0,delimiters_add8_add122_withlog1,delimiters_add8_add122_withlog2,delimiters_add8_add91_withlog0,delimiters_add8_add91_withlog1,delimiters_add8_add91_withlog2,delimiters_add8_add121_withlog0,delimiters_add8_add121_withlog1,delimiters_add8_add121_withlog2,delimiters_add8_add89_withlog0,delimiters_add8_add89_withlog1,delimiters_add8_add89_withlog2,delimiters_add8_add119_withlog0,delimiters_add8_add119_withlog1,delimiters_add8_add119_withlog2,delimiters_add8_add88_withlog0,delimiters_add8_add88_withlog1,delimiters_add8_add88_withlog2,delimiters_add8_add118_withlog0,delimiters_add8_add118_withlog1,delimiters_add8_add118_withlog2,delimiters_add8_add117_withlog0,delimiters_add8_add117_withlog1,delimiters_add8_add117_withlog2,delimiters_add8_add86_withlog0,delimiters_add8_add86_withlog1,delimiters_add8_add86_withlog2,delimiters_add8_add85_withlog0,delimiters_add8_add85_withlog1,delimiters_add8_add85_withlog2,delimiters_add8_add115_withlog0,delimiters_add8_add115_withlog1,delimiters_add8_add115_withlog2,delimiters_add8_add84_withlog0,delimiters_add8_add84_withlog1,delimiters_add8_add84_withlog2,delimiters_add8_add114_withlog0,delimiters_add8_add114_withlog1,delimiters_add8_add114_withlog2,delimiters_add8_add83_withlog0,delimiters_add8_add83_withlog1,delimiters_add8_add83_withlog2,delimiters_add8_add112_withlog0,delimiters_add8_add112_withlog1,delimiters_add8_add112_withlog2,delimiters_add8_add81_withlog0,delimiters_add8_add81_withlog1,delimiters_add8_add81_withlog2,delimiters_add8_add111_withlog0,delimiters_add8_add111_withlog1,delimiters_add8_add111_withlog2,delimiters_add8_remove145_withlog0,delimiters_add8_remove145_withlog1,delimiters_add8_remove145_withlog2,delimiters_add8_add80_withlog0,delimiters_add8_add80_withlog1,delimiters_add8_add80_withlog2
[INFO] Generating assertions...
[INFO] 69 test fail, generating try/catch/fail blocks...
[INFO] 71 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_add79:delimiters_add8_add102:delimiters_literalMutationString6_failAssert0null148_failAssert0:delimiters_literalMutationString5_failAssert0null149_failAssert0:delimiters_add8null146_failAssert0:delimiters_add8null147_failAssert0:delimiters_literalMutationString4_failAssert0null153_failAssert0:delimiters_literalMutationString1_failAssert0null150_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0:delimiters_literalMutationString3_failAssert0null152_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString51_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString50_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString56_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString54_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString57_failAssert0:delimiters_add8_literalMutationString41_failAssert0:delimiters_add8_literalMutationString35_failAssert0:delimiters_add8_literalMutationString40_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString76_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString73_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString74_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString58_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString66_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString65_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString72_failAssert0:delimiters_literalMutationString6_failAssert0_add129_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0:delimiters_literalMutationString6_failAssert0_add128_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0:delimiters_literalMutationString4_failAssert0_add143_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0:delimitersnull10_failAssert0_add124_failAssert0:delimitersnull10_failAssert0_add125_failAssert0:delimitersnull10_failAssert0_add126_failAssert0:delimiters_literalMutationString1_failAssert0_add134_failAssert0:delimiters_literalMutationString1_failAssert0_add135_failAssert0:delimiters_literalMutationString1_failAssert0_add133_failAssert0:delimiters_literalMutationString2_failAssert0_add136_failAssert0:delimiters_literalMutationString2_failAssert0_add138_failAssert0:delimiters_literalMutationString2_failAssert0_add137_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0:delimiters_literalMutationString3_failAssert0_add141_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString52_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString53_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString55_failAssert0:delimiters_add8_literalMutationString45_failAssert0:delimiters_add8_literalMutationString37_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString75_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString77_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString78_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString59_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString70_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString71_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0:delimiters_add8_literalMutationString36_failAssert0:delimiters_add8_literalMutationString44_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_add79:delimiters_add8_add102:delimiters_literalMutationString6_failAssert0null148_failAssert0:delimiters_literalMutationString5_failAssert0null149_failAssert0:delimiters_add8null146_failAssert0:delimiters_add8null147_failAssert0:delimiters_literalMutationString4_failAssert0null153_failAssert0:delimiters_literalMutationString1_failAssert0null150_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0:delimiters_literalMutationString3_failAssert0null152_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString51_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString50_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString56_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString54_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString57_failAssert0:delimiters_add8_literalMutationString41_failAssert0:delimiters_add8_literalMutationString35_failAssert0:delimiters_add8_literalMutationString40_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString76_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString73_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString74_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString58_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString66_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString65_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString72_failAssert0:delimiters_literalMutationString6_failAssert0_add129_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0:delimiters_literalMutationString6_failAssert0_add128_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0:delimiters_literalMutationString4_failAssert0_add143_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0:delimitersnull10_failAssert0_add124_failAssert0:delimitersnull10_failAssert0_add125_failAssert0:delimitersnull10_failAssert0_add126_failAssert0:delimiters_literalMutationString1_failAssert0_add134_failAssert0:delimiters_literalMutationString1_failAssert0_add135_failAssert0:delimiters_literalMutationString1_failAssert0_add133_failAssert0:delimiters_literalMutationString2_failAssert0_add136_failAssert0:delimiters_literalMutationString2_failAssert0_add138_failAssert0:delimiters_literalMutationString2_failAssert0_add137_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0:delimiters_literalMutationString3_failAssert0_add141_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString52_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString53_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString55_failAssert0:delimiters_add8_literalMutationString45_failAssert0:delimiters_add8_literalMutationString37_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString75_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString77_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString78_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString59_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString70_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString71_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0:delimiters_add8_literalMutationString36_failAssert0:delimiters_add8_literalMutationString44_failAssert0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_literalMutationString5_failAssert0_literalMutationString55_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString71_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString54_failAssert0,delimiters_add8_add79,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString70_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString53_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString52_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0,delimiters_literalMutationString1_failAssert0_add135_failAssert0,delimiters_literalMutationString3_failAssert0null152_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString51_failAssert0,delimiters_add8null147_failAssert0,delimiters_literalMutationString1_failAssert0_add134_failAssert0,delimiters_add8_literalMutationString37_failAssert0,delimiters_literalMutationString1_failAssert0null150_failAssert0,delimiters_add8_literalMutationString45_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString50_failAssert0,delimiters_add8null146_failAssert0,delimiters_literalMutationString1_failAssert0_add133_failAssert0,delimiters_add8_literalMutationString36_failAssert0,delimiters_add8_literalMutationString44_failAssert0,delimiters_add8_literalMutationString35_failAssert0,delimiters_literalMutationString3_failAssert0_add141_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0,delimiters_literalMutationString6_failAssert0null148_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString78_failAssert0,delimiters_literalMutationString2_failAssert0_add138_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0,delimiters_add8_literalMutationString41_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString77_failAssert0,delimiters_literalMutationString2_failAssert0_add137_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0,delimiters_add8_literalMutationString40_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString76_failAssert0,delimiters_literalMutationString2_failAssert0_add136_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0,delimiters_literalMutationString4_failAssert0null153_failAssert0,delimitersnull10_failAssert0_add126_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString59_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0,delimiters_literalMutationString6_failAssert0_add129_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString75_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0,delimiters_literalMutationString2_failAssert0null151_failAssert0,delimitersnull10_failAssert0_add125_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString58_failAssert0,delimiters_literalMutationString6_failAssert0_add128_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString66_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString74_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0,delimiters_literalMutationString4_failAssert0_add143_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString57_failAssert0,delimitersnull10_failAssert0_add124_failAssert0,delimiters_literalMutationString6_failAssert0_add127_failAssert0,delimiters_add8_add102,delimiters_literalMutationString2_failAssert0_literalMutationString65_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString73_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString56_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0,delimiters_literalMutationString5_failAssert0null149_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString72_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0
[INFO] Assertion amplification: 71 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:21 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:21 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:21 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_add79:delimiters_add8_add102:delimiters_literalMutationString6_failAssert0null148_failAssert0:delimiters_literalMutationString5_failAssert0null149_failAssert0:delimiters_add8null146_failAssert0:delimiters_add8null147_failAssert0:delimiters_literalMutationString4_failAssert0null153_failAssert0:delimiters_literalMutationString1_failAssert0null150_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0:delimiters_literalMutationString3_failAssert0null152_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString51_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString50_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString56_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString54_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString57_failAssert0:delimiters_add8_literalMutationString41_failAssert0:delimiters_add8_literalMutationString35_failAssert0:delimiters_add8_literalMutationString40_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString76_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString73_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString74_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString58_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString66_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString65_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString72_failAssert0:delimiters_literalMutationString6_failAssert0_add129_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0:delimiters_literalMutationString6_failAssert0_add128_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0:delimiters_literalMutationString4_failAssert0_add143_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0:delimitersnull10_failAssert0_add124_failAssert0:delimitersnull10_failAssert0_add125_failAssert0:delimitersnull10_failAssert0_add126_failAssert0:delimiters_literalMutationString1_failAssert0_add134_failAssert0:delimiters_literalMutationString1_failAssert0_add135_failAssert0:delimiters_literalMutationString1_failAssert0_add133_failAssert0:delimiters_literalMutationString2_failAssert0_add136_failAssert0:delimiters_literalMutationString2_failAssert0_add138_failAssert0:delimiters_literalMutationString2_failAssert0_add137_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0:delimiters_literalMutationString3_failAssert0_add141_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString52_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString53_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString55_failAssert0:delimiters_add8_literalMutationString45_failAssert0:delimiters_add8_literalMutationString37_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString75_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString77_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString78_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString59_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString70_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString71_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0:delimiters_add8_literalMutationString36_failAssert0:delimiters_add8_literalMutationString44_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_add79:delimiters_add8_add102:delimiters_literalMutationString6_failAssert0null148_failAssert0:delimiters_literalMutationString5_failAssert0null149_failAssert0:delimiters_add8null146_failAssert0:delimiters_add8null147_failAssert0:delimiters_literalMutationString4_failAssert0null153_failAssert0:delimiters_literalMutationString1_failAssert0null150_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0:delimiters_literalMutationString3_failAssert0null152_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString51_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString50_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString56_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString54_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString57_failAssert0:delimiters_add8_literalMutationString41_failAssert0:delimiters_add8_literalMutationString35_failAssert0:delimiters_add8_literalMutationString40_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString76_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString73_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString74_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString58_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString66_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString65_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString72_failAssert0:delimiters_literalMutationString6_failAssert0_add129_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0:delimiters_literalMutationString6_failAssert0_add128_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0:delimiters_literalMutationString4_failAssert0_add143_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0:delimitersnull10_failAssert0_add124_failAssert0:delimitersnull10_failAssert0_add125_failAssert0:delimitersnull10_failAssert0_add126_failAssert0:delimiters_literalMutationString1_failAssert0_add134_failAssert0:delimiters_literalMutationString1_failAssert0_add135_failAssert0:delimiters_literalMutationString1_failAssert0_add133_failAssert0:delimiters_literalMutationString2_failAssert0_add136_failAssert0:delimiters_literalMutationString2_failAssert0_add138_failAssert0:delimiters_literalMutationString2_failAssert0_add137_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0:delimiters_literalMutationString3_failAssert0_add141_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString52_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString53_failAssert0:delimiters_literalMutationString5_failAssert0_literalMutationString55_failAssert0:delimiters_add8_literalMutationString45_failAssert0:delimiters_add8_literalMutationString37_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString75_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString77_failAssert0:delimiters_literalMutationString4_failAssert0_literalMutationString78_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString59_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString70_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString71_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0:delimiters_add8_literalMutationString36_failAssert0:delimiters_add8_literalMutationString44_failAssert0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
Running Pair Behavior - The equals sign (used on both sides) should permit delimiter changes.: success!
Running Special Characters - Characters with special meaning regexen should be valid delimiters.: success!
Running Sections - Delimiters set outside sections should persist.: success, whitespace differences.
Running Inverted Sections - Delimiters set outside inverted sections should persist.: success, whitespace differences.
Running Partial Inheritence - Delimiters set in a parent template should not affect a partial.: success, whitespace differences.
Running Post-Partial Behavior - Delimiters set in a partial should not affect the parent template.: success!
Running Surrounding Whitespace - Surrounding whitespace should be left untouched.: success!
Running Outlying Whitespace (Inline) - Whitespace should be left untouched.: success!
Running Standalone Tag - Standalone lines should be removed from the template.: success, whitespace differences.
Running Indented Standalone Tag - Indented standalone lines should be removed from the template.: success, whitespace differences.
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Pair with Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 14 Whitespace: 8 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_literalMutationString5_failAssert0_literalMutationString55_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString71_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString54_failAssert0,delimiters_add8_add79,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString70_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString53_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString52_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0,delimiters_literalMutationString1_failAssert0_add135_failAssert0,delimiters_literalMutationString3_failAssert0null152_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString51_failAssert0,delimiters_add8null147_failAssert0,delimiters_literalMutationString1_failAssert0_add134_failAssert0,delimiters_add8_literalMutationString37_failAssert0,delimiters_literalMutationString1_failAssert0null150_failAssert0,delimiters_add8_literalMutationString45_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString50_failAssert0,delimiters_add8null146_failAssert0,delimiters_literalMutationString1_failAssert0_add133_failAssert0,delimiters_add8_literalMutationString36_failAssert0,delimiters_add8_literalMutationString44_failAssert0,delimiters_add8_literalMutationString35_failAssert0,delimiters_literalMutationString3_failAssert0_add141_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0,delimiters_literalMutationString6_failAssert0null148_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString78_failAssert0,delimiters_literalMutationString2_failAssert0_add138_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0,delimiters_add8_literalMutationString41_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString77_failAssert0,delimiters_literalMutationString2_failAssert0_add137_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0,delimiters_add8_literalMutationString40_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString76_failAssert0,delimiters_literalMutationString2_failAssert0_add136_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0,delimiters_literalMutationString4_failAssert0null153_failAssert0,delimitersnull10_failAssert0_add126_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString59_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0,delimiters_literalMutationString6_failAssert0_add129_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString75_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0,delimiters_literalMutationString2_failAssert0null151_failAssert0,delimitersnull10_failAssert0_add125_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString58_failAssert0,delimiters_literalMutationString6_failAssert0_add128_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString66_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString74_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0,delimiters_literalMutationString4_failAssert0_add143_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString57_failAssert0,delimitersnull10_failAssert0_add124_failAssert0,delimiters_literalMutationString6_failAssert0_add127_failAssert0,delimiters_add8_add102,delimiters_literalMutationString2_failAssert0_literalMutationString65_failAssert0,delimiters_literalMutationString4_failAssert0_literalMutationString73_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0,delimiters_literalMutationString5_failAssert0_literalMutationString56_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0,delimiters_literalMutationString5_failAssert0null149_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString72_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 71 tests selected to be amplified over 71 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 1189ms
  1% | ]/ 74% |===================================== ]- 94% |=============================================== ]-100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_literalMutationString41_failAssert0null1202:delimiters_add8_literalMutationString45_failAssert0null1256:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227:delimiters_add8_literalMutationString40_failAssert0null1206:delimiters_add8_literalMutationString44_failAssert0null1270:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267:delimiters_add8null146_failAssert0null1193:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217:delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245:delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232:delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247:delimiters_add8_literalMutationString41_failAssert0_literalMutationString469:delimiters_add8_literalMutationString45_failAssert0_literalMutationString762:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608:delimiters_add8_literalMutationString40_failAssert0_literalMutationString490:delimiters_add8_literalMutationString44_failAssert0_literalMutationString855:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828:delimiters_add8null146_failAssert0_literalMutationString421:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548:delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797:delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695:delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731:delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645:delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710:delimiters_add8_literalMutationString41_failAssert0_add994:delimiters_add8_literalMutationString45_failAssert0_add1145:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060:delimiters_add8_literalMutationString40_failAssert0_add1000:delimiters_add8_literalMutationString44_failAssert0_add1183:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176:delimiters_add8null146_failAssert0_add955:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034:delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160:delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115:delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061:delimiters_literalMutationString2_failAssert0null151_failAssert0_add968:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127:delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073:delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120:delimiters_add8_literalMutationString41_failAssert0null1201:delimiters_add8_literalMutationString45_failAssert0null1255:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226:delimiters_add8_literalMutationString40_failAssert0null1205:delimiters_add8_literalMutationString44_failAssert0null1271:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224:delimiters_add8_literalMutationString41_failAssert0_literalMutationString466:delimiters_add8_literalMutationString45_failAssert0_literalMutationString756:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600:delimiters_add8_literalMutationString40_failAssert0_literalMutationString495:delimiters_add8_literalMutationString44_failAssert0_literalMutationString853:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588:delimiters_add8_literalMutationString41_failAssert0_add992:delimiters_add8_literalMutationString45_failAssert0_add1143:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058:delimiters_add8_literalMutationString40_failAssert0_add1003:delimiters_add8_literalMutationString44_failAssert0_add1184:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055:delimiters_add8_add79_remove1185:delimiters_add8_add102_remove1186:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233:delimiters_add8_literalMutationString41_failAssert0_literalMutationString476:delimiters_add8_literalMutationString45_failAssert0_literalMutationString763:delimiters_add8_literalMutationString41_failAssert0_add993:delimiters_add8_literalMutationString45_failAssert0_add1142:delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_literalMutationString41_failAssert0null1202:delimiters_add8_literalMutationString45_failAssert0null1256:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227:delimiters_add8_literalMutationString40_failAssert0null1206:delimiters_add8_literalMutationString44_failAssert0null1270:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267:delimiters_add8null146_failAssert0null1193:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217:delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245:delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232:delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247:delimiters_add8_literalMutationString41_failAssert0_literalMutationString469:delimiters_add8_literalMutationString45_failAssert0_literalMutationString762:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608:delimiters_add8_literalMutationString40_failAssert0_literalMutationString490:delimiters_add8_literalMutationString44_failAssert0_literalMutationString855:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828:delimiters_add8null146_failAssert0_literalMutationString421:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548:delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797:delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695:delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731:delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645:delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710:delimiters_add8_literalMutationString41_failAssert0_add994:delimiters_add8_literalMutationString45_failAssert0_add1145:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060:delimiters_add8_literalMutationString40_failAssert0_add1000:delimiters_add8_literalMutationString44_failAssert0_add1183:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176:delimiters_add8null146_failAssert0_add955:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034:delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160:delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115:delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061:delimiters_literalMutationString2_failAssert0null151_failAssert0_add968:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127:delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073:delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120:delimiters_add8_literalMutationString41_failAssert0null1201:delimiters_add8_literalMutationString45_failAssert0null1255:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226:delimiters_add8_literalMutationString40_failAssert0null1205:delimiters_add8_literalMutationString44_failAssert0null1271:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224:delimiters_add8_literalMutationString41_failAssert0_literalMutationString466:delimiters_add8_literalMutationString45_failAssert0_literalMutationString756:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600:delimiters_add8_literalMutationString40_failAssert0_literalMutationString495:delimiters_add8_literalMutationString44_failAssert0_literalMutationString853:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588:delimiters_add8_literalMutationString41_failAssert0_add992:delimiters_add8_literalMutationString45_failAssert0_add1143:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058:delimiters_add8_literalMutationString40_failAssert0_add1003:delimiters_add8_literalMutationString44_failAssert0_add1184:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055:delimiters_add8_add79_remove1185:delimiters_add8_add102_remove1186:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233:delimiters_add8_literalMutationString41_failAssert0_literalMutationString476:delimiters_add8_literalMutationString45_failAssert0_literalMutationString763:delimiters_add8_literalMutationString41_failAssert0_add993:delimiters_add8_literalMutationString45_failAssert0_add1142:delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_add102_remove1186,delimiters_add8_add79_remove1185,delimiters_add8_literalMutationString45_failAssert0null1255(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0null1256(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0null151_failAssert0_add968(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40_failAssert0_literalMutationString490(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40_failAssert0_literalMutationString495(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233(com.github.mustachejava.SpecTest): null,delimiters_add8null146_failAssert0null1193(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731(com.github.mustachejava.SpecTest): null,delimiters_add8null146_failAssert0_add955(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518(com.github.mustachejava.SpecTest): null,delimiters_add8null146_failAssert0_literalMutationString421(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0_literalMutationString466(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0_literalMutationString469(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0_literalMutationString476(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40_failAssert0_add1000(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40_failAssert0_add1003(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44_failAssert0_literalMutationString853(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44_failAssert0_literalMutationString855(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44_failAssert0_add1183(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44_failAssert0_add1184(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0_add1142(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0_add1143(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0_add1145(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40_failAssert0null1205(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString40_failAssert0null1206(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0null1201(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0null1202(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0_add992(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0_add993(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString41_failAssert0_add994(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44_failAssert0null1270(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString44_failAssert0null1271(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264(com.github.mustachejava.SpecTest): null,delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0_literalMutationString756(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0_literalMutationString762(com.github.mustachejava.SpecTest): null,delimiters_add8_literalMutationString45_failAssert0_literalMutationString763(com.github.mustachejava.SpecTest): null
[INFO] 2 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 50% |========================= ]/100% |================================================== ]-
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_add79_remove1185_withlog0:delimiters_add8_add102_remove1186_withlog0:delimiters_add8_add79_remove1185_withlog1:delimiters_add8_add102_remove1186_withlog1:delimiters_add8_add79_remove1185_withlog2:delimiters_add8_add102_remove1186_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_add79_remove1185_withlog0:delimiters_add8_add102_remove1186_withlog0:delimiters_add8_add79_remove1185_withlog1:delimiters_add8_add102_remove1186_withlog1:delimiters_add8_add79_remove1185_withlog2:delimiters_add8_add102_remove1186_withlog2
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_add79_remove1185_withlog0,delimiters_add8_add79_remove1185_withlog1,delimiters_add8_add79_remove1185_withlog2,delimiters_add8_add102_remove1186_withlog0,delimiters_add8_add102_remove1186_withlog1,delimiters_add8_add102_remove1186_withlog2
[INFO] Generating assertions...
[INFO] 98 test fail, generating try/catch/fail blocks...
[INFO] 98 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_literalMutationString41_failAssert0null1202_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1256_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1206_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1270_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267_failAssert0:delimiters_add8null146_failAssert0null1193_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString469_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString762_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString490_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString855_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828_failAssert0:delimiters_add8null146_failAssert0_literalMutationString421_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add994_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1145_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1000_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1183_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176_failAssert0:delimiters_add8null146_failAssert0_add955_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0_add968_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120_failAssert0:delimiters_add8_literalMutationString41_failAssert0null1201_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1255_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1205_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1271_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString466_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString756_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString495_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString853_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add992_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1143_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1003_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1184_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString476_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString763_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add993_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1142_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_literalMutationString41_failAssert0null1202_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1256_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1206_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1270_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267_failAssert0:delimiters_add8null146_failAssert0null1193_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString469_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString762_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString490_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString855_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828_failAssert0:delimiters_add8null146_failAssert0_literalMutationString421_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add994_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1145_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1000_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1183_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176_failAssert0:delimiters_add8null146_failAssert0_add955_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0_add968_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120_failAssert0:delimiters_add8_literalMutationString41_failAssert0null1201_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1255_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1205_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1271_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString466_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString756_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString495_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString853_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add992_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1143_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1003_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1184_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString476_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString763_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add993_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1142_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_literalMutationString44_failAssert0_literalMutationString855_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608_failAssert0,delimiters_add8null146_failAssert0_literalMutationString421_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217_failAssert0,delimiters_add8null146_failAssert0null1193_failAssert0,delimiters_add8_literalMutationString45_failAssert0_add1145_failAssert0,delimiters_add8_literalMutationString40_failAssert0_add1000_failAssert0,delimiters_add8_literalMutationString44_failAssert0_literalMutationString853_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211_failAssert0,delimiters_add8_literalMutationString44_failAssert0null1271_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244_failAssert0,delimiters_add8_literalMutationString44_failAssert0_add1184_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058_failAssert0,delimiters_literalMutationString2_failAssert0null151_failAssert0_add968_failAssert0,delimiters_add8_literalMutationString45_failAssert0_add1143_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738_failAssert0,delimiters_add8_literalMutationString44_failAssert0null1270_failAssert0,delimiters_add8_literalMutationString44_failAssert0_add1183_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710_failAssert0,delimiters_add8_literalMutationString45_failAssert0_add1142_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828_failAssert0,delimiters_add8_literalMutationString40_failAssert0_literalMutationString495_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518_failAssert0,delimiters_add8_literalMutationString41_failAssert0_literalMutationString469_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232_failAssert0,delimiters_add8_literalMutationString41_failAssert0_literalMutationString476_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213_failAssert0,delimiters_add8_literalMutationString41_failAssert0null1202_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160_failAssert0,delimiters_add8_literalMutationString45_failAssert0_literalMutationString756_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724_failAssert0,delimiters_add8_literalMutationString41_failAssert0null1201_failAssert0,delimiters_add8_literalMutationString41_failAssert0_literalMutationString466_failAssert0,delimiters_add8_literalMutationString41_failAssert0_add994_failAssert0,delimiters_add8_literalMutationString45_failAssert0null1256_failAssert0,delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565_failAssert0,delimiters_add8_literalMutationString45_failAssert0_literalMutationString763_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541_failAssert0,delimiters_add8_literalMutationString41_failAssert0_add993_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600_failAssert0,delimiters_add8_literalMutationString45_failAssert0null1255_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060_failAssert0,delimiters_add8_literalMutationString45_failAssert0_literalMutationString762_failAssert0,delimiters_add8_literalMutationString40_failAssert0_literalMutationString490_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530_failAssert0,delimiters_add8_literalMutationString41_failAssert0_add992_failAssert0,delimiters_add8_literalMutationString40_failAssert0null1206_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210_failAssert0,delimiters_add8_literalMutationString40_failAssert0null1205_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981_failAssert0,delimiters_add8null146_failAssert0_add955_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695_failAssert0,delimiters_add8_literalMutationString40_failAssert0_add1003_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055_failAssert0
[INFO] Assertion amplification: 98 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:27 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:27 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:27 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests delimiters_add8_literalMutationString41_failAssert0null1202_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1256_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1206_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1270_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267_failAssert0:delimiters_add8null146_failAssert0null1193_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString469_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString762_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString490_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString855_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828_failAssert0:delimiters_add8null146_failAssert0_literalMutationString421_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add994_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1145_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1000_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1183_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176_failAssert0:delimiters_add8null146_failAssert0_add955_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0_add968_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120_failAssert0:delimiters_add8_literalMutationString41_failAssert0null1201_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1255_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1205_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1271_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString466_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString756_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString495_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString853_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add992_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1143_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1003_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1184_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString476_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString763_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add993_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1142_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests delimiters_add8_literalMutationString41_failAssert0null1202_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1256_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1206_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1270_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267_failAssert0:delimiters_add8null146_failAssert0null1193_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString469_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString762_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString490_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString855_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828_failAssert0:delimiters_add8null146_failAssert0_literalMutationString421_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add994_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1145_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1000_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1183_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053_failAssert0:delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176_failAssert0:delimiters_add8null146_failAssert0_add955_failAssert0:delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034_failAssert0:delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115_failAssert0:delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061_failAssert0:delimiters_literalMutationString2_failAssert0null151_failAssert0_add968_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132_failAssert0:delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124_failAssert0:delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073_failAssert0:delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120_failAssert0:delimiters_add8_literalMutationString41_failAssert0null1201_failAssert0:delimiters_add8_literalMutationString45_failAssert0null1255_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226_failAssert0:delimiters_add8_literalMutationString40_failAssert0null1205_failAssert0:delimiters_add8_literalMutationString44_failAssert0null1271_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString466_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString756_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600_failAssert0:delimiters_add8_literalMutationString40_failAssert0_literalMutationString495_failAssert0:delimiters_add8_literalMutationString44_failAssert0_literalMutationString853_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add992_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1143_failAssert0:delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058_failAssert0:delimiters_add8_literalMutationString40_failAssert0_add1003_failAssert0:delimiters_add8_literalMutationString44_failAssert0_add1184_failAssert0:delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055_failAssert0:delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244_failAssert0:delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233_failAssert0:delimiters_add8_literalMutationString41_failAssert0_literalMutationString476_failAssert0:delimiters_add8_literalMutationString45_failAssert0_literalMutationString763_failAssert0:delimiters_add8_literalMutationString41_failAssert0_add993_failAssert0:delimiters_add8_literalMutationString45_failAssert0_add1142_failAssert0:delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: delimiters_add8_literalMutationString44_failAssert0_literalMutationString855_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0null1267_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0null1262_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0null1229_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_literalMutationString797_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_add1034_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1053_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0null1228_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0_add1061_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0_literalMutationString548_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0_literalMutationString645_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString608_failAssert0,delimiters_add8null146_failAssert0_literalMutationString421_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString68_failAssert0null1217_failAssert0,delimiters_add8null146_failAssert0null1193_failAssert0,delimiters_add8_literalMutationString45_failAssert0_add1145_failAssert0,delimiters_add8_literalMutationString40_failAssert0_add1000_failAssert0,delimiters_add8_literalMutationString44_failAssert0_literalMutationString853_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0_literalMutationString618_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0null1245_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0null1197_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0null1211_failAssert0,delimiters_add8_literalMutationString44_failAssert0null1271_failAssert0,delimiters_literalMutationString5_failAssert0_add132_failAssert0_literalMutationString614_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0null1244_failAssert0,delimiters_add8_literalMutationString44_failAssert0_add1184_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1058_failAssert0,delimiters_literalMutationString2_failAssert0null151_failAssert0_add968_failAssert0,delimiters_add8_literalMutationString45_failAssert0_add1143_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_literalMutationString738_failAssert0,delimiters_add8_literalMutationString44_failAssert0null1270_failAssert0,delimiters_add8_literalMutationString44_failAssert0_add1183_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_add1176_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0null1225_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0_literalMutationString710_failAssert0,delimiters_add8_literalMutationString45_failAssert0_add1142_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString69_failAssert0_literalMutationString828_failAssert0,delimiters_add8_literalMutationString40_failAssert0_literalMutationString495_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_add1023_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_literalMutationString445_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_literalMutationString518_failAssert0,delimiters_add8_literalMutationString41_failAssert0_literalMutationString469_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0null1233_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0null1224_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0null1264_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_add1124_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0_add1132_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0_add1015_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0null1232_failAssert0,delimiters_add8_literalMutationString41_failAssert0_literalMutationString476_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0null1249_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0null1250_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0null1213_failAssert0,delimiters_add8_literalMutationString41_failAssert0null1202_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString62_failAssert0_add1160_failAssert0,delimiters_add8_literalMutationString45_failAssert0_literalMutationString756_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_literalMutationString523_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_add1167_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString49_failAssert0_literalMutationString724_failAssert0,delimiters_add8_literalMutationString41_failAssert0null1201_failAssert0,delimiters_add8_literalMutationString41_failAssert0_literalMutationString466_failAssert0,delimiters_add8_literalMutationString41_failAssert0_add994_failAssert0,delimiters_add8_literalMutationString45_failAssert0null1256_failAssert0,delimiters_literalMutationString6_failAssert0_add127_failAssert0_literalMutationString565_failAssert0,delimiters_add8_literalMutationString45_failAssert0_literalMutationString763_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_literalMutationString541_failAssert0,delimiters_add8_literalMutationString41_failAssert0_add993_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString63_failAssert0_literalMutationString812_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_literalMutationString600_failAssert0,delimiters_add8_literalMutationString45_failAssert0null1255_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0null1227_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0_add1060_failAssert0,delimiters_add8_literalMutationString45_failAssert0_literalMutationString762_failAssert0,delimiters_add8_literalMutationString40_failAssert0_literalMutationString490_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_literalMutationString731_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0null1216_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString48_failAssert0_add1127_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString61_failAssert0_add1018_failAssert0,delimiters_literalMutationString2_failAssert0_literalMutationString64_failAssert0_literalMutationString530_failAssert0,delimiters_add8_literalMutationString41_failAssert0_add992_failAssert0,delimiters_add8_literalMutationString40_failAssert0null1206_failAssert0,delimiters_literalMutationString5_failAssert0_add131_failAssert0null1226_failAssert0,delimiters_literalMutationString1_failAssert0_literalMutationString60_failAssert0null1210_failAssert0,delimiters_add8_literalMutationString40_failAssert0null1205_failAssert0,delimiters_literalMutationString3_failAssert0_literalMutationString67_failAssert0_add1031_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0null1247_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0_add1115_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString588_failAssert0,delimiters_literalMutationString3_failAssert0_add140_failAssert0_add1120_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString46_failAssert0_add981_failAssert0,delimiters_add8null146_failAssert0_add955_failAssert0,delimiters_literalMutationString4_failAssert0_add142_failAssert0_add1073_failAssert0,delimiters_literalMutationString6_failAssert0_literalMutationString47_failAssert0null1251_failAssert0,delimiters_literalMutationString3_failAssert0_add139_failAssert0_literalMutationString695_failAssert0,delimiters_add8_literalMutationString40_failAssert0_add1003_failAssert0,delimiters_literalMutationString4_failAssert0_add144_failAssert0_add1064_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_literalMutationString587_failAssert0,delimiters_literalMutationString5_failAssert0_add130_failAssert0_add1055_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Amplification of lambdas, (2/6)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 20ms
  1% | ]/[INFO] 10 new tests generated
[INFO] Run tests. (10)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdasnull1483:lambdas_literalMutationString1474:lambdas_literalMutationString1475:lambdas_literalMutationString1479:lambdas_literalMutationString1476:lambdas_literalMutationString1478:lambdas_literalMutationString1477:lambdas_add1481:lambdas_add1480:lambdas_remove1482 
Parsing --class com.github.mustachejava.SpecTest --tests lambdasnull1483:lambdas_literalMutationString1474:lambdas_literalMutationString1475:lambdas_literalMutationString1479:lambdas_literalMutationString1476:lambdas_literalMutationString1478:lambdas_literalMutationString1477:lambdas_add1481:lambdas_add1480:lambdas_remove1482
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_remove1482,lambdas_add1480,lambdas_add1481,lambdasnull1483(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================ ]/ 66% |================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481_withlog0:lambdas_add1480_withlog0:lambdas_add1481_withlog1:lambdas_add1480_withlog1:lambdas_add1481_withlog2:lambdas_add1480_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481_withlog0:lambdas_add1480_withlog0:lambdas_add1481_withlog1:lambdas_add1480_withlog1:lambdas_add1481_withlog2:lambdas_add1480_withlog2
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_withlog0,lambdas_add1481_withlog1,lambdas_add1481_withlog2,lambdas_add1480_withlog0,lambdas_add1480_withlog1,lambdas_add1480_withlog2
[INFO] Generating assertions...
[INFO] 7 test fail, generating try/catch/fail blocks...
[INFO] 8 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481:lambdasnull1483_failAssert0:lambdas_literalMutationString1474_failAssert0:lambdas_literalMutationString1475_failAssert0:lambdas_literalMutationString1479_failAssert0:lambdas_literalMutationString1476_failAssert0:lambdas_literalMutationString1478_failAssert0:lambdas_literalMutationString1477_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481:lambdasnull1483_failAssert0:lambdas_literalMutationString1474_failAssert0:lambdas_literalMutationString1475_failAssert0:lambdas_literalMutationString1479_failAssert0:lambdas_literalMutationString1476_failAssert0:lambdas_literalMutationString1478_failAssert0:lambdas_literalMutationString1477_failAssert0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_literalMutationString1479_failAssert0,lambdas_add1481,lambdas_literalMutationString1478_failAssert0,lambdasnull1483_failAssert0,lambdas_literalMutationString1477_failAssert0,lambdas_literalMutationString1476_failAssert0,lambdas_literalMutationString1475_failAssert0,lambdas_literalMutationString1474_failAssert0
[INFO] Assertion amplification: 8 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:30 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:30 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:30 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481:lambdasnull1483_failAssert0:lambdas_literalMutationString1474_failAssert0:lambdas_literalMutationString1475_failAssert0:lambdas_literalMutationString1479_failAssert0:lambdas_literalMutationString1476_failAssert0:lambdas_literalMutationString1478_failAssert0:lambdas_literalMutationString1477_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481:lambdasnull1483_failAssert0:lambdas_literalMutationString1474_failAssert0:lambdas_literalMutationString1475_failAssert0:lambdas_literalMutationString1479_failAssert0:lambdas_literalMutationString1476_failAssert0:lambdas_literalMutationString1478_failAssert0:lambdas_literalMutationString1477_failAssert0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_literalMutationString1479_failAssert0,lambdas_add1481,lambdas_literalMutationString1478_failAssert0,lambdasnull1483_failAssert0,lambdas_literalMutationString1477_failAssert0,lambdas_literalMutationString1476_failAssert0,lambdas_literalMutationString1475_failAssert0,lambdas_literalMutationString1474_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 8 tests selected to be amplified over 8 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 184ms
  1% | ]/ 55% |=========================== ]\ 96% |================================================ ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1477_failAssert0null1626:lambdas_literalMutationString1476_failAssert0null1624:lambdas_literalMutationString1478_failAssert0null1625:lambdas_literalMutationString1475_failAssert0null1622:lambdas_literalMutationString1479_failAssert0null1623:lambdas_literalMutationString1474_failAssert0null1621:lambdas_add1481null1619:lambdas_add1481null1620:lambdas_literalMutationString1477_failAssert0_literalMutationString1551:lambdas_literalMutationString1477_failAssert0_literalMutationString1549:lambdas_literalMutationString1477_failAssert0_literalMutationString1550:lambdas_literalMutationString1476_failAssert0_literalMutationString1534:lambdas_literalMutationString1476_failAssert0_literalMutationString1537:lambdas_literalMutationString1476_failAssert0_literalMutationString1538:lambdas_literalMutationString1478_failAssert0_literalMutationString1541:lambdas_literalMutationString1478_failAssert0_literalMutationString1545:lambdas_literalMutationString1478_failAssert0_literalMutationString1544:lambdas_literalMutationString1475_failAssert0_literalMutationString1525:lambdas_literalMutationString1475_failAssert0_literalMutationString1523:lambdas_literalMutationString1475_failAssert0_literalMutationString1527:lambdas_literalMutationString1479_failAssert0_literalMutationString1531:lambdas_literalMutationString1479_failAssert0_literalMutationString1530:lambdas_literalMutationString1479_failAssert0_literalMutationString1533:lambdas_literalMutationString1474_failAssert0_literalMutationString1520:lambdas_literalMutationString1474_failAssert0_literalMutationString1519:lambdas_literalMutationString1474_failAssert0_literalMutationString1521:lambdas_add1481_literalMutationString1509:lambdas_add1481_literalMutationString1515:lambdas_add1481_literalMutationString1516:lambdas_literalMutationString1477_failAssert0_add1615:lambdas_literalMutationString1477_failAssert0_add1616:lambdas_literalMutationString1477_failAssert0_add1617:lambdas_literalMutationString1476_failAssert0_add1611:lambdas_literalMutationString1476_failAssert0_add1610:lambdas_literalMutationString1476_failAssert0_add1609:lambdas_literalMutationString1478_failAssert0_add1614:lambdas_literalMutationString1478_failAssert0_add1612:lambdas_literalMutationString1478_failAssert0_add1613:lambdas_literalMutationString1475_failAssert0_add1605:lambdas_literalMutationString1475_failAssert0_add1603:lambdas_literalMutationString1475_failAssert0_add1604:lambdas_literalMutationString1479_failAssert0_add1608:lambdas_literalMutationString1479_failAssert0_add1607:lambdas_literalMutationString1479_failAssert0_add1606:lambdasnull1483_failAssert0_add1599:lambdasnull1483_failAssert0_add1598:lambdasnull1483_failAssert0_add1597:lambdas_literalMutationString1474_failAssert0_add1601:lambdas_literalMutationString1474_failAssert0_add1600:lambdas_literalMutationString1474_failAssert0_add1602:lambdas_add1481_add1557:lambdas_add1481_add1570:lambdas_add1481_add1572:lambdas_add1481_remove1618:lambdas_literalMutationString1477_failAssert0_literalMutationString1546:lambdas_literalMutationString1477_failAssert0_literalMutationString1547:lambdas_literalMutationString1477_failAssert0_literalMutationString1548:lambdas_literalMutationString1476_failAssert0_literalMutationString1539:lambdas_literalMutationString1476_failAssert0_literalMutationString1535:lambdas_literalMutationString1476_failAssert0_literalMutationString1536:lambdas_literalMutationString1478_failAssert0_literalMutationString1543:lambdas_literalMutationString1478_failAssert0_literalMutationString1542:lambdas_literalMutationString1478_failAssert0_literalMutationString1540:lambdas_literalMutationString1475_failAssert0_literalMutationString1524:lambdas_literalMutationString1475_failAssert0_literalMutationString1526:lambdas_literalMutationString1475_failAssert0_literalMutationString1522:lambdas_literalMutationString1479_failAssert0_literalMutationString1532:lambdas_literalMutationString1479_failAssert0_literalMutationString1528:lambdas_literalMutationString1479_failAssert0_literalMutationString1529:lambdas_add1481_literalMutationString1507:lambdas_add1481_literalMutationString1517:lambdas_add1481_literalMutationString1511:lambdas_add1481_add1577:lambdas_add1481_add1556:lambdas_add1481_add1573:lambdas_add1481_add1574:lambdas_add1481_add1569:lambdas_add1481_add1578:lambdas_add1481_add1565:lambdas_add1481_add1563:lambdas_add1481_add1591:lambdas_add1481_add1588:lambdas_add1481_add1558:lambdas_add1481_add1584:lambdas_add1481_add1593:lambdas_add1481_add1567:lambdas_add1481_add1561:lambdas_add1481_add1564:lambdas_add1481_add1552:lambdas_add1481_add1553:lambdas_add1481_add1583:lambdas_add1481_add1575:lambdas_add1481_add1590:lambdas_add1481_add1571:lambdas_add1481_add1585:lambdas_add1481_literalMutationString1514:lambdas_add1481_literalMutationString1508:lambdas_add1481_add1555:lambdas_add1481_add1554:lambdas_add1481_add1559 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1477_failAssert0null1626:lambdas_literalMutationString1476_failAssert0null1624:lambdas_literalMutationString1478_failAssert0null1625:lambdas_literalMutationString1475_failAssert0null1622:lambdas_literalMutationString1479_failAssert0null1623:lambdas_literalMutationString1474_failAssert0null1621:lambdas_add1481null1619:lambdas_add1481null1620:lambdas_literalMutationString1477_failAssert0_literalMutationString1551:lambdas_literalMutationString1477_failAssert0_literalMutationString1549:lambdas_literalMutationString1477_failAssert0_literalMutationString1550:lambdas_literalMutationString1476_failAssert0_literalMutationString1534:lambdas_literalMutationString1476_failAssert0_literalMutationString1537:lambdas_literalMutationString1476_failAssert0_literalMutationString1538:lambdas_literalMutationString1478_failAssert0_literalMutationString1541:lambdas_literalMutationString1478_failAssert0_literalMutationString1545:lambdas_literalMutationString1478_failAssert0_literalMutationString1544:lambdas_literalMutationString1475_failAssert0_literalMutationString1525:lambdas_literalMutationString1475_failAssert0_literalMutationString1523:lambdas_literalMutationString1475_failAssert0_literalMutationString1527:lambdas_literalMutationString1479_failAssert0_literalMutationString1531:lambdas_literalMutationString1479_failAssert0_literalMutationString1530:lambdas_literalMutationString1479_failAssert0_literalMutationString1533:lambdas_literalMutationString1474_failAssert0_literalMutationString1520:lambdas_literalMutationString1474_failAssert0_literalMutationString1519:lambdas_literalMutationString1474_failAssert0_literalMutationString1521:lambdas_add1481_literalMutationString1509:lambdas_add1481_literalMutationString1515:lambdas_add1481_literalMutationString1516:lambdas_literalMutationString1477_failAssert0_add1615:lambdas_literalMutationString1477_failAssert0_add1616:lambdas_literalMutationString1477_failAssert0_add1617:lambdas_literalMutationString1476_failAssert0_add1611:lambdas_literalMutationString1476_failAssert0_add1610:lambdas_literalMutationString1476_failAssert0_add1609:lambdas_literalMutationString1478_failAssert0_add1614:lambdas_literalMutationString1478_failAssert0_add1612:lambdas_literalMutationString1478_failAssert0_add1613:lambdas_literalMutationString1475_failAssert0_add1605:lambdas_literalMutationString1475_failAssert0_add1603:lambdas_literalMutationString1475_failAssert0_add1604:lambdas_literalMutationString1479_failAssert0_add1608:lambdas_literalMutationString1479_failAssert0_add1607:lambdas_literalMutationString1479_failAssert0_add1606:lambdasnull1483_failAssert0_add1599:lambdasnull1483_failAssert0_add1598:lambdasnull1483_failAssert0_add1597:lambdas_literalMutationString1474_failAssert0_add1601:lambdas_literalMutationString1474_failAssert0_add1600:lambdas_literalMutationString1474_failAssert0_add1602:lambdas_add1481_add1557:lambdas_add1481_add1570:lambdas_add1481_add1572:lambdas_add1481_remove1618:lambdas_literalMutationString1477_failAssert0_literalMutationString1546:lambdas_literalMutationString1477_failAssert0_literalMutationString1547:lambdas_literalMutationString1477_failAssert0_literalMutationString1548:lambdas_literalMutationString1476_failAssert0_literalMutationString1539:lambdas_literalMutationString1476_failAssert0_literalMutationString1535:lambdas_literalMutationString1476_failAssert0_literalMutationString1536:lambdas_literalMutationString1478_failAssert0_literalMutationString1543:lambdas_literalMutationString1478_failAssert0_literalMutationString1542:lambdas_literalMutationString1478_failAssert0_literalMutationString1540:lambdas_literalMutationString1475_failAssert0_literalMutationString1524:lambdas_literalMutationString1475_failAssert0_literalMutationString1526:lambdas_literalMutationString1475_failAssert0_literalMutationString1522:lambdas_literalMutationString1479_failAssert0_literalMutationString1532:lambdas_literalMutationString1479_failAssert0_literalMutationString1528:lambdas_literalMutationString1479_failAssert0_literalMutationString1529:lambdas_add1481_literalMutationString1507:lambdas_add1481_literalMutationString1517:lambdas_add1481_literalMutationString1511:lambdas_add1481_add1577:lambdas_add1481_add1556:lambdas_add1481_add1573:lambdas_add1481_add1574:lambdas_add1481_add1569:lambdas_add1481_add1578:lambdas_add1481_add1565:lambdas_add1481_add1563:lambdas_add1481_add1591:lambdas_add1481_add1588:lambdas_add1481_add1558:lambdas_add1481_add1584:lambdas_add1481_add1593:lambdas_add1481_add1567:lambdas_add1481_add1561:lambdas_add1481_add1564:lambdas_add1481_add1552:lambdas_add1481_add1553:lambdas_add1481_add1583:lambdas_add1481_add1575:lambdas_add1481_add1590:lambdas_add1481_add1571:lambdas_add1481_add1585:lambdas_add1481_literalMutationString1514:lambdas_add1481_literalMutationString1508:lambdas_add1481_add1555:lambdas_add1481_add1554:lambdas_add1481_add1559
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_remove1618,lambdas_add1481_add1552,lambdas_add1481_add1553,lambdas_add1481_add1554,lambdas_add1481_add1555,lambdas_add1481_add1556,lambdas_add1481_add1557,lambdas_add1481_add1558,lambdas_add1481_add1559,lambdas_add1481_add1561,lambdas_add1481_add1563,lambdas_add1481_add1564,lambdas_add1481_add1565,lambdas_add1481_add1567,lambdas_add1481_add1569,lambdas_add1481_add1570,lambdas_add1481_add1571,lambdas_add1481_add1572,lambdas_add1481_add1573,lambdas_add1481_add1574,lambdas_add1481_add1575,lambdas_add1481_add1577,lambdas_add1481_add1578,lambdas_add1481_add1583,lambdas_add1481_add1584,lambdas_add1481_add1585,lambdas_add1481_add1588,lambdas_add1481_add1590,lambdas_add1481_add1591,lambdas_add1481_add1593,lambdas_add1481_literalMutationString1507,lambdas_add1481null1619(com.github.mustachejava.SpecTest): null,lambdas_add1481null1620(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1528(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1529(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1530(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1531(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1532(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1533(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1520(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1521(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_add1600(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_add1601(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_add1602(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1540(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1541(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1542(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1543(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1544(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1545(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1603(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1604(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1605(com.github.mustachejava.SpecTest): null,lambdasnull1483_failAssert0_add1597(com.github.mustachejava.SpecTest): null,lambdasnull1483_failAssert0_add1598(com.github.mustachejava.SpecTest): null,lambdasnull1483_failAssert0_add1599(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_add1609(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_add1610(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_add1611(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1615(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1617(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1612(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1613(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1614(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_add1606(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_add1607(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_add1608(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1546(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1547(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1548(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1549(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1550(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1551(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0null1621(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0null1622(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0null1624(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0null1626(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1534(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1535(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1536(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1537(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1538(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1539(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0null1625(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0null1623(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1522(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1523(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1525(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1526(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1527(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1508(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1509(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1511(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1514(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1515(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1516(com.github.mustachejava.SpecTest): null,lambdas_add1481_literalMutationString1517(com.github.mustachejava.SpecTest): null
[INFO] 31 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |= ]/  6% |=== ]-  9% |==== ]\ 12% |====== ]| 16% |======== ]/ 19% |========= ]- 22% |=========== ]\ 25% |============ ]| 29% |============== ]/ 32% |================ ]- 35% |================= ]\ 38% |=================== ]| 41% |==================== ]/ 45% |====================== ]- 48% |======================== ]\ 51% |========================= ]| 54% |=========================== ]/ 58% |============================= ]- 61% |============================== ]\ 64% |================================ ]| 67% |================================= ]/ 70% |=================================== ]- 74% |===================================== ]\ 77% |====================================== ]| 80% |======================================== ]/ 83% |========================================= ]- 87% |=========================================== ]\ 90% |============================================= ]| 93% |============================================== ]/ 96% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (93)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1557_withlog0:lambdas_add1481_add1570_withlog0:lambdas_add1481_add1572_withlog0:lambdas_add1481_remove1618_withlog0:lambdas_add1481_literalMutationString1507_withlog0:lambdas_add1481_add1577_withlog0:lambdas_add1481_add1556_withlog0:lambdas_add1481_add1573_withlog0:lambdas_add1481_add1574_withlog0:lambdas_add1481_add1569_withlog0:lambdas_add1481_add1578_withlog0:lambdas_add1481_add1565_withlog0:lambdas_add1481_add1563_withlog0:lambdas_add1481_add1591_withlog0:lambdas_add1481_add1588_withlog0:lambdas_add1481_add1558_withlog0:lambdas_add1481_add1584_withlog0:lambdas_add1481_add1593_withlog0:lambdas_add1481_add1567_withlog0:lambdas_add1481_add1561_withlog0:lambdas_add1481_add1564_withlog0:lambdas_add1481_add1552_withlog0:lambdas_add1481_add1553_withlog0:lambdas_add1481_add1583_withlog0:lambdas_add1481_add1575_withlog0:lambdas_add1481_add1590_withlog0:lambdas_add1481_add1571_withlog0:lambdas_add1481_add1585_withlog0:lambdas_add1481_add1555_withlog0:lambdas_add1481_add1554_withlog0:lambdas_add1481_add1559_withlog0:lambdas_add1481_add1557_withlog1:lambdas_add1481_add1570_withlog1:lambdas_add1481_add1572_withlog1:lambdas_add1481_remove1618_withlog1:lambdas_add1481_literalMutationString1507_withlog1:lambdas_add1481_add1577_withlog1:lambdas_add1481_add1556_withlog1:lambdas_add1481_add1573_withlog1:lambdas_add1481_add1574_withlog1:lambdas_add1481_add1569_withlog1:lambdas_add1481_add1578_withlog1:lambdas_add1481_add1565_withlog1:lambdas_add1481_add1563_withlog1:lambdas_add1481_add1591_withlog1:lambdas_add1481_add1588_withlog1:lambdas_add1481_add1558_withlog1:lambdas_add1481_add1584_withlog1:lambdas_add1481_add1593_withlog1:lambdas_add1481_add1567_withlog1:lambdas_add1481_add1561_withlog1:lambdas_add1481_add1564_withlog1:lambdas_add1481_add1552_withlog1:lambdas_add1481_add1553_withlog1:lambdas_add1481_add1583_withlog1:lambdas_add1481_add1575_withlog1:lambdas_add1481_add1590_withlog1:lambdas_add1481_add1571_withlog1:lambdas_add1481_add1585_withlog1:lambdas_add1481_add1555_withlog1:lambdas_add1481_add1554_withlog1:lambdas_add1481_add1559_withlog1:lambdas_add1481_add1557_withlog2:lambdas_add1481_add1570_withlog2:lambdas_add1481_add1572_withlog2:lambdas_add1481_remove1618_withlog2:lambdas_add1481_literalMutationString1507_withlog2:lambdas_add1481_add1577_withlog2:lambdas_add1481_add1556_withlog2:lambdas_add1481_add1573_withlog2:lambdas_add1481_add1574_withlog2:lambdas_add1481_add1569_withlog2:lambdas_add1481_add1578_withlog2:lambdas_add1481_add1565_withlog2:lambdas_add1481_add1563_withlog2:lambdas_add1481_add1591_withlog2:lambdas_add1481_add1588_withlog2:lambdas_add1481_add1558_withlog2:lambdas_add1481_add1584_withlog2:lambdas_add1481_add1593_withlog2:lambdas_add1481_add1567_withlog2:lambdas_add1481_add1561_withlog2:lambdas_add1481_add1564_withlog2:lambdas_add1481_add1552_withlog2:lambdas_add1481_add1553_withlog2:lambdas_add1481_add1583_withlog2:lambdas_add1481_add1575_withlog2:lambdas_add1481_add1590_withlog2:lambdas_add1481_add1571_withlog2:lambdas_add1481_add1585_withlog2:lambdas_add1481_add1555_withlog2:lambdas_add1481_add1554_withlog2:lambdas_add1481_add1559_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1557_withlog0:lambdas_add1481_add1570_withlog0:lambdas_add1481_add1572_withlog0:lambdas_add1481_remove1618_withlog0:lambdas_add1481_literalMutationString1507_withlog0:lambdas_add1481_add1577_withlog0:lambdas_add1481_add1556_withlog0:lambdas_add1481_add1573_withlog0:lambdas_add1481_add1574_withlog0:lambdas_add1481_add1569_withlog0:lambdas_add1481_add1578_withlog0:lambdas_add1481_add1565_withlog0:lambdas_add1481_add1563_withlog0:lambdas_add1481_add1591_withlog0:lambdas_add1481_add1588_withlog0:lambdas_add1481_add1558_withlog0:lambdas_add1481_add1584_withlog0:lambdas_add1481_add1593_withlog0:lambdas_add1481_add1567_withlog0:lambdas_add1481_add1561_withlog0:lambdas_add1481_add1564_withlog0:lambdas_add1481_add1552_withlog0:lambdas_add1481_add1553_withlog0:lambdas_add1481_add1583_withlog0:lambdas_add1481_add1575_withlog0:lambdas_add1481_add1590_withlog0:lambdas_add1481_add1571_withlog0:lambdas_add1481_add1585_withlog0:lambdas_add1481_add1555_withlog0:lambdas_add1481_add1554_withlog0:lambdas_add1481_add1559_withlog0:lambdas_add1481_add1557_withlog1:lambdas_add1481_add1570_withlog1:lambdas_add1481_add1572_withlog1:lambdas_add1481_remove1618_withlog1:lambdas_add1481_literalMutationString1507_withlog1:lambdas_add1481_add1577_withlog1:lambdas_add1481_add1556_withlog1:lambdas_add1481_add1573_withlog1:lambdas_add1481_add1574_withlog1:lambdas_add1481_add1569_withlog1:lambdas_add1481_add1578_withlog1:lambdas_add1481_add1565_withlog1:lambdas_add1481_add1563_withlog1:lambdas_add1481_add1591_withlog1:lambdas_add1481_add1588_withlog1:lambdas_add1481_add1558_withlog1:lambdas_add1481_add1584_withlog1:lambdas_add1481_add1593_withlog1:lambdas_add1481_add1567_withlog1:lambdas_add1481_add1561_withlog1:lambdas_add1481_add1564_withlog1:lambdas_add1481_add1552_withlog1:lambdas_add1481_add1553_withlog1:lambdas_add1481_add1583_withlog1:lambdas_add1481_add1575_withlog1:lambdas_add1481_add1590_withlog1:lambdas_add1481_add1571_withlog1:lambdas_add1481_add1585_withlog1:lambdas_add1481_add1555_withlog1:lambdas_add1481_add1554_withlog1:lambdas_add1481_add1559_withlog1:lambdas_add1481_add1557_withlog2:lambdas_add1481_add1570_withlog2:lambdas_add1481_add1572_withlog2:lambdas_add1481_remove1618_withlog2:lambdas_add1481_literalMutationString1507_withlog2:lambdas_add1481_add1577_withlog2:lambdas_add1481_add1556_withlog2:lambdas_add1481_add1573_withlog2:lambdas_add1481_add1574_withlog2:lambdas_add1481_add1569_withlog2:lambdas_add1481_add1578_withlog2:lambdas_add1481_add1565_withlog2:lambdas_add1481_add1563_withlog2:lambdas_add1481_add1591_withlog2:lambdas_add1481_add1588_withlog2:lambdas_add1481_add1558_withlog2:lambdas_add1481_add1584_withlog2:lambdas_add1481_add1593_withlog2:lambdas_add1481_add1567_withlog2:lambdas_add1481_add1561_withlog2:lambdas_add1481_add1564_withlog2:lambdas_add1481_add1552_withlog2:lambdas_add1481_add1553_withlog2:lambdas_add1481_add1583_withlog2:lambdas_add1481_add1575_withlog2:lambdas_add1481_add1590_withlog2:lambdas_add1481_add1571_withlog2:lambdas_add1481_add1585_withlog2:lambdas_add1481_add1555_withlog2:lambdas_add1481_add1554_withlog2:lambdas_add1481_add1559_withlog2
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_add1553_withlog0,lambdas_add1481_add1553_withlog1,lambdas_add1481_add1553_withlog2,lambdas_add1481_add1552_withlog0,lambdas_add1481_add1552_withlog1,lambdas_add1481_add1552_withlog2,lambdas_add1481_add1575_withlog0,lambdas_add1481_add1575_withlog1,lambdas_add1481_add1575_withlog2,lambdas_add1481_remove1618_withlog0,lambdas_add1481_remove1618_withlog1,lambdas_add1481_remove1618_withlog2,lambdas_add1481_add1574_withlog0,lambdas_add1481_add1574_withlog1,lambdas_add1481_add1574_withlog2,lambdas_add1481_add1573_withlog0,lambdas_add1481_add1573_withlog1,lambdas_add1481_add1573_withlog2,lambdas_add1481_add1572_withlog0,lambdas_add1481_add1572_withlog1,lambdas_add1481_add1572_withlog2,lambdas_add1481_add1571_withlog0,lambdas_add1481_add1571_withlog1,lambdas_add1481_add1571_withlog2,lambdas_add1481_add1570_withlog0,lambdas_add1481_add1570_withlog1,lambdas_add1481_add1570_withlog2,lambdas_add1481_add1569_withlog0,lambdas_add1481_add1569_withlog1,lambdas_add1481_add1569_withlog2,lambdas_add1481_add1593_withlog0,lambdas_add1481_add1593_withlog1,lambdas_add1481_add1593_withlog2,lambdas_add1481_add1567_withlog0,lambdas_add1481_add1567_withlog1,lambdas_add1481_add1567_withlog2,lambdas_add1481_add1591_withlog0,lambdas_add1481_add1591_withlog1,lambdas_add1481_add1591_withlog2,lambdas_add1481_add1590_withlog0,lambdas_add1481_add1590_withlog1,lambdas_add1481_add1590_withlog2,lambdas_add1481_add1565_withlog0,lambdas_add1481_add1565_withlog1,lambdas_add1481_add1565_withlog2,lambdas_add1481_add1588_withlog0,lambdas_add1481_add1588_withlog1,lambdas_add1481_add1588_withlog2,lambdas_add1481_literalMutationString1507_withlog0,lambdas_add1481_literalMutationString1507_withlog1,lambdas_add1481_literalMutationString1507_withlog2,lambdas_add1481_add1564_withlog0,lambdas_add1481_add1564_withlog1,lambdas_add1481_add1564_withlog2,lambdas_add1481_add1563_withlog0,lambdas_add1481_add1563_withlog1,lambdas_add1481_add1563_withlog2,lambdas_add1481_add1585_withlog0,lambdas_add1481_add1585_withlog1,lambdas_add1481_add1585_withlog2,lambdas_add1481_add1561_withlog0,lambdas_add1481_add1561_withlog1,lambdas_add1481_add1561_withlog2,lambdas_add1481_add1584_withlog0,lambdas_add1481_add1584_withlog1,lambdas_add1481_add1584_withlog2,lambdas_add1481_add1559_withlog0,lambdas_add1481_add1559_withlog1,lambdas_add1481_add1559_withlog2,lambdas_add1481_add1583_withlog0,lambdas_add1481_add1583_withlog1,lambdas_add1481_add1583_withlog2,lambdas_add1481_add1558_withlog0,lambdas_add1481_add1558_withlog1,lambdas_add1481_add1558_withlog2,lambdas_add1481_add1557_withlog0,lambdas_add1481_add1557_withlog1,lambdas_add1481_add1557_withlog2,lambdas_add1481_add1556_withlog0,lambdas_add1481_add1556_withlog1,lambdas_add1481_add1556_withlog2,lambdas_add1481_add1555_withlog0,lambdas_add1481_add1555_withlog1,lambdas_add1481_add1555_withlog2,lambdas_add1481_add1578_withlog0,lambdas_add1481_add1578_withlog1,lambdas_add1481_add1578_withlog2,lambdas_add1481_add1554_withlog0,lambdas_add1481_add1554_withlog1,lambdas_add1481_add1554_withlog2,lambdas_add1481_add1577_withlog0,lambdas_add1481_add1577_withlog1,lambdas_add1481_add1577_withlog2
[INFO] Generating assertions...
[INFO] 69 test fail, generating try/catch/fail blocks...
[INFO] 71 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1552:lambdas_add1481_add1575:lambdas_literalMutationString1477_failAssert0null1626_failAssert0:lambdas_literalMutationString1476_failAssert0null1624_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0:lambdas_literalMutationString1475_failAssert0null1622_failAssert0:lambdas_literalMutationString1479_failAssert0null1623_failAssert0:lambdas_literalMutationString1474_failAssert0null1621_failAssert0:lambdas_add1481null1619_failAssert0:lambdas_add1481null1620_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1551_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1549_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1550_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1541_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1544_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1523_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1531_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1530_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1533_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1520_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1521_failAssert0:lambdas_add1481_literalMutationString1509_failAssert0:lambdas_add1481_literalMutationString1515_failAssert0:lambdas_add1481_literalMutationString1516_failAssert0:lambdas_literalMutationString1477_failAssert0_add1615_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0:lambdas_literalMutationString1476_failAssert0_add1611_failAssert0:lambdas_literalMutationString1476_failAssert0_add1610_failAssert0:lambdas_literalMutationString1476_failAssert0_add1609_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0:lambdas_literalMutationString1479_failAssert0_add1608_failAssert0:lambdas_literalMutationString1479_failAssert0_add1607_failAssert0:lambdas_literalMutationString1479_failAssert0_add1606_failAssert0:lambdasnull1483_failAssert0_add1599_failAssert0:lambdasnull1483_failAssert0_add1598_failAssert0:lambdasnull1483_failAssert0_add1597_failAssert0:lambdas_literalMutationString1474_failAssert0_add1601_failAssert0:lambdas_literalMutationString1474_failAssert0_add1600_failAssert0:lambdas_literalMutationString1474_failAssert0_add1602_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1543_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1542_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1540_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1522_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1528_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1529_failAssert0:lambdas_add1481_literalMutationString1517_failAssert0:lambdas_add1481_literalMutationString1511_failAssert0:lambdas_add1481_literalMutationString1514_failAssert0:lambdas_add1481_literalMutationString1508_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1552:lambdas_add1481_add1575:lambdas_literalMutationString1477_failAssert0null1626_failAssert0:lambdas_literalMutationString1476_failAssert0null1624_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0:lambdas_literalMutationString1475_failAssert0null1622_failAssert0:lambdas_literalMutationString1479_failAssert0null1623_failAssert0:lambdas_literalMutationString1474_failAssert0null1621_failAssert0:lambdas_add1481null1619_failAssert0:lambdas_add1481null1620_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1551_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1549_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1550_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1541_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1544_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1523_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1531_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1530_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1533_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1520_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1521_failAssert0:lambdas_add1481_literalMutationString1509_failAssert0:lambdas_add1481_literalMutationString1515_failAssert0:lambdas_add1481_literalMutationString1516_failAssert0:lambdas_literalMutationString1477_failAssert0_add1615_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0:lambdas_literalMutationString1476_failAssert0_add1611_failAssert0:lambdas_literalMutationString1476_failAssert0_add1610_failAssert0:lambdas_literalMutationString1476_failAssert0_add1609_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0:lambdas_literalMutationString1479_failAssert0_add1608_failAssert0:lambdas_literalMutationString1479_failAssert0_add1607_failAssert0:lambdas_literalMutationString1479_failAssert0_add1606_failAssert0:lambdasnull1483_failAssert0_add1599_failAssert0:lambdasnull1483_failAssert0_add1598_failAssert0:lambdasnull1483_failAssert0_add1597_failAssert0:lambdas_literalMutationString1474_failAssert0_add1601_failAssert0:lambdas_literalMutationString1474_failAssert0_add1600_failAssert0:lambdas_literalMutationString1474_failAssert0_add1602_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1543_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1542_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1540_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1522_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1528_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1529_failAssert0:lambdas_add1481_literalMutationString1517_failAssert0:lambdas_add1481_literalMutationString1511_failAssert0:lambdas_add1481_literalMutationString1514_failAssert0:lambdas_add1481_literalMutationString1508_failAssert0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_literalMutationString1514_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1551_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1550_failAssert0,lambdas_literalMutationString1478_failAssert0null1625_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0,lambdas_add1481_literalMutationString1511_failAssert0,lambdas_literalMutationString1476_failAssert0null1624_failAssert0,lambdas_literalMutationString1476_failAssert0_add1611_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1544_failAssert0,lambdas_literalMutationString1474_failAssert0_add1602_failAssert0,lambdas_literalMutationString1476_failAssert0_add1610_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1543_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0,lambdas_literalMutationString1479_failAssert0_add1608_failAssert0,lambdas_add1481null1620_failAssert0,lambdas_literalMutationString1474_failAssert0_add1601_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1542_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1529_failAssert0,lambdas_literalMutationString1479_failAssert0_add1607_failAssert0,lambdas_literalMutationString1474_failAssert0null1621_failAssert0,lambdas_literalMutationString1474_failAssert0_add1600_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1541_failAssert0,lambdas_literalMutationString1477_failAssert0_add1615_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1528_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0,lambdas_literalMutationString1479_failAssert0_add1606_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1540_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0,lambdas_literalMutationString1477_failAssert0null1626_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1521_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1549_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1533_failAssert0,lambdasnull1483_failAssert0_add1599_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1520_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1523_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0,lambdasnull1483_failAssert0_add1598_failAssert0,lambdas_literalMutationString1479_failAssert0null1623_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0,lambdas_add1481_literalMutationString1509_failAssert0,lambdas_add1481_literalMutationString1517_failAssert0,lambdas_add1481_add1552,lambdas_add1481_add1575,lambdas_literalMutationString1476_failAssert0_add1609_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1522_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1531_failAssert0,lambdasnull1483_failAssert0_add1597_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0,lambdas_add1481_literalMutationString1508_failAssert0,lambdas_add1481null1619_failAssert0,lambdas_literalMutationString1475_failAssert0null1622_failAssert0,lambdas_add1481_literalMutationString1516_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1530_failAssert0,lambdas_add1481_literalMutationString1515_failAssert0
[INFO] Assertion amplification: 71 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:35 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:35 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:35 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1552:lambdas_add1481_add1575:lambdas_literalMutationString1477_failAssert0null1626_failAssert0:lambdas_literalMutationString1476_failAssert0null1624_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0:lambdas_literalMutationString1475_failAssert0null1622_failAssert0:lambdas_literalMutationString1479_failAssert0null1623_failAssert0:lambdas_literalMutationString1474_failAssert0null1621_failAssert0:lambdas_add1481null1619_failAssert0:lambdas_add1481null1620_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1551_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1549_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1550_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1541_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1544_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1523_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1531_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1530_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1533_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1520_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1521_failAssert0:lambdas_add1481_literalMutationString1509_failAssert0:lambdas_add1481_literalMutationString1515_failAssert0:lambdas_add1481_literalMutationString1516_failAssert0:lambdas_literalMutationString1477_failAssert0_add1615_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0:lambdas_literalMutationString1476_failAssert0_add1611_failAssert0:lambdas_literalMutationString1476_failAssert0_add1610_failAssert0:lambdas_literalMutationString1476_failAssert0_add1609_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0:lambdas_literalMutationString1479_failAssert0_add1608_failAssert0:lambdas_literalMutationString1479_failAssert0_add1607_failAssert0:lambdas_literalMutationString1479_failAssert0_add1606_failAssert0:lambdasnull1483_failAssert0_add1599_failAssert0:lambdasnull1483_failAssert0_add1598_failAssert0:lambdasnull1483_failAssert0_add1597_failAssert0:lambdas_literalMutationString1474_failAssert0_add1601_failAssert0:lambdas_literalMutationString1474_failAssert0_add1600_failAssert0:lambdas_literalMutationString1474_failAssert0_add1602_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1543_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1542_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1540_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1522_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1528_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1529_failAssert0:lambdas_add1481_literalMutationString1517_failAssert0:lambdas_add1481_literalMutationString1511_failAssert0:lambdas_add1481_literalMutationString1514_failAssert0:lambdas_add1481_literalMutationString1508_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1552:lambdas_add1481_add1575:lambdas_literalMutationString1477_failAssert0null1626_failAssert0:lambdas_literalMutationString1476_failAssert0null1624_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0:lambdas_literalMutationString1475_failAssert0null1622_failAssert0:lambdas_literalMutationString1479_failAssert0null1623_failAssert0:lambdas_literalMutationString1474_failAssert0null1621_failAssert0:lambdas_add1481null1619_failAssert0:lambdas_add1481null1620_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1551_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1549_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1550_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1541_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1544_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1523_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1531_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1530_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1533_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1520_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1521_failAssert0:lambdas_add1481_literalMutationString1509_failAssert0:lambdas_add1481_literalMutationString1515_failAssert0:lambdas_add1481_literalMutationString1516_failAssert0:lambdas_literalMutationString1477_failAssert0_add1615_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0:lambdas_literalMutationString1476_failAssert0_add1611_failAssert0:lambdas_literalMutationString1476_failAssert0_add1610_failAssert0:lambdas_literalMutationString1476_failAssert0_add1609_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0:lambdas_literalMutationString1479_failAssert0_add1608_failAssert0:lambdas_literalMutationString1479_failAssert0_add1607_failAssert0:lambdas_literalMutationString1479_failAssert0_add1606_failAssert0:lambdasnull1483_failAssert0_add1599_failAssert0:lambdasnull1483_failAssert0_add1598_failAssert0:lambdasnull1483_failAssert0_add1597_failAssert0:lambdas_literalMutationString1474_failAssert0_add1601_failAssert0:lambdas_literalMutationString1474_failAssert0_add1600_failAssert0:lambdas_literalMutationString1474_failAssert0_add1602_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1543_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1542_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1540_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1522_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1528_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1529_failAssert0:lambdas_add1481_literalMutationString1517_failAssert0:lambdas_add1481_literalMutationString1511_failAssert0:lambdas_add1481_literalMutationString1514_failAssert0:lambdas_add1481_literalMutationString1508_failAssert0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_literalMutationString1514_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1551_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1550_failAssert0,lambdas_literalMutationString1478_failAssert0null1625_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0,lambdas_add1481_literalMutationString1511_failAssert0,lambdas_literalMutationString1476_failAssert0null1624_failAssert0,lambdas_literalMutationString1476_failAssert0_add1611_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1544_failAssert0,lambdas_literalMutationString1474_failAssert0_add1602_failAssert0,lambdas_literalMutationString1476_failAssert0_add1610_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1543_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0,lambdas_literalMutationString1479_failAssert0_add1608_failAssert0,lambdas_add1481null1620_failAssert0,lambdas_literalMutationString1474_failAssert0_add1601_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1542_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1529_failAssert0,lambdas_literalMutationString1479_failAssert0_add1607_failAssert0,lambdas_literalMutationString1474_failAssert0null1621_failAssert0,lambdas_literalMutationString1474_failAssert0_add1600_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1541_failAssert0,lambdas_literalMutationString1477_failAssert0_add1615_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1528_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0,lambdas_literalMutationString1479_failAssert0_add1606_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1540_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0,lambdas_literalMutationString1477_failAssert0null1626_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1521_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1549_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1533_failAssert0,lambdasnull1483_failAssert0_add1599_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1520_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1523_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0,lambdasnull1483_failAssert0_add1598_failAssert0,lambdas_literalMutationString1479_failAssert0null1623_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0,lambdas_add1481_literalMutationString1509_failAssert0,lambdas_add1481_literalMutationString1517_failAssert0,lambdas_add1481_add1552,lambdas_add1481_add1575,lambdas_literalMutationString1476_failAssert0_add1609_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1522_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1531_failAssert0,lambdasnull1483_failAssert0_add1597_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0,lambdas_add1481_literalMutationString1508_failAssert0,lambdas_add1481null1619_failAssert0,lambdas_literalMutationString1475_failAssert0null1622_failAssert0,lambdas_add1481_literalMutationString1516_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1530_failAssert0,lambdas_add1481_literalMutationString1515_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 71 tests selected to be amplified over 71 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 1152ms
  1% | ]/ 75% |===================================== ]\ 94% |=============================================== ]-100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728:lambdas_add1481_add1575null2666:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218:lambdas_add1481_add1575_literalMutationString1884:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610:lambdas_add1481_add1575_add2420:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471:lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543:lambdas_add1481_add1575_remove2662:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697:lambdas_add1481_add1575null2668:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460:lambdas_add1481_add1552_remove2661:lambdas_add1481_add1575null2667:lambdas_add1481null1620_failAssert0null2670:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728:lambdas_add1481_add1575null2666:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218:lambdas_add1481_add1575_literalMutationString1884:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610:lambdas_add1481_add1575_add2420:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471:lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543:lambdas_add1481_add1575_remove2662:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697:lambdas_add1481_add1575null2668:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460:lambdas_add1481_add1552_remove2661:lambdas_add1481_add1575null2667:lambdas_add1481null1620_failAssert0null2670:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_add1575_add2420,lambdas_add1481_add1575_remove2662,lambdas_add1481_add1552_remove2661,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705(com.github.mustachejava.SpecTest): null,lambdas_add1481null1620_failAssert0null2670(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600(com.github.mustachejava.SpecTest): null,lambdas_add1481_add1575_literalMutationString1884(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558(com.github.mustachejava.SpecTest): null,lambdas_add1481_add1575null2666(com.github.mustachejava.SpecTest): null,lambdas_add1481_add1575null2667(com.github.mustachejava.SpecTest): null,lambdas_add1481_add1575null2668(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629(com.github.mustachejava.SpecTest): null,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================ ]/ 66% |================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (9)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1575_add2420_withlog0:lambdas_add1481_add1575_remove2662_withlog0:lambdas_add1481_add1552_remove2661_withlog0:lambdas_add1481_add1575_add2420_withlog1:lambdas_add1481_add1575_remove2662_withlog1:lambdas_add1481_add1552_remove2661_withlog1:lambdas_add1481_add1575_add2420_withlog2:lambdas_add1481_add1575_remove2662_withlog2:lambdas_add1481_add1552_remove2661_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_add1481_add1575_add2420_withlog0:lambdas_add1481_add1575_remove2662_withlog0:lambdas_add1481_add1552_remove2661_withlog0:lambdas_add1481_add1575_add2420_withlog1:lambdas_add1481_add1575_remove2662_withlog1:lambdas_add1481_add1552_remove2661_withlog1:lambdas_add1481_add1575_add2420_withlog2:lambdas_add1481_add1575_remove2662_withlog2:lambdas_add1481_add1552_remove2661_withlog2
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
Running Interpolation - A lambda's return value should be interpolated.: success!
Running Interpolation - Expansion - A lambda's return value should be parsed.: success!
Running Interpolation - Alternate Delimiters - A lambda's return value should parse with the default delimiters.: success, whitespace differences.
Running Interpolation - Multiple Calls - Interpolated lambdas should not be cached.: success!
Running Escaping - Lambda results should be appropriately escaped.: success!
Running Section - Lambdas used for sections should receive the raw section string.: success!
Running Section - Expansion - Lambdas used for sections should have their results parsed.: success!
Running Section - Alternate Delimiters - Lambdas used for sections should parse with the current delimiters.: success!
Running Section - Multiple Calls - Lambdas used for sections should not be cached.: success!
Running Inverted Section - Lambdas used for inverted sections should be considered truthy.: success!
Success: 10 Whitespace: 1 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_add1481_add1552_remove2661_withlog0,lambdas_add1481_add1552_remove2661_withlog1,lambdas_add1481_add1552_remove2661_withlog2,lambdas_add1481_add1575_remove2662_withlog0,lambdas_add1481_add1575_remove2662_withlog1,lambdas_add1481_add1575_remove2662_withlog2,lambdas_add1481_add1575_add2420_withlog0,lambdas_add1481_add1575_add2420_withlog1,lambdas_add1481_add1575_add2420_withlog2
[INFO] Generating assertions...
[INFO] 97 test fail, generating try/catch/fail blocks...
[INFO] 97 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728_failAssert0:lambdas_add1481_add1575null2666_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218_failAssert0:lambdas_add1481_add1575_literalMutationString1884_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697_failAssert0:lambdas_add1481_add1575null2668_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460_failAssert0:lambdas_add1481_add1575null2667_failAssert0:lambdas_add1481null1620_failAssert0null2670_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728_failAssert0:lambdas_add1481_add1575null2666_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218_failAssert0:lambdas_add1481_add1575_literalMutationString1884_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697_failAssert0:lambdas_add1481_add1575null2668_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460_failAssert0:lambdas_add1481_add1575null2667_failAssert0:lambdas_add1481null1620_failAssert0null2670_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734_failAssert0,lambdas_add1481null1620_failAssert0null2670_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560_failAssert0,lambdas_add1481_add1575_literalMutationString1884_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627_failAssert0,lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725_failAssert0,lambdas_add1481_add1575null2668_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605_failAssert0,lambdas_add1481_add1575null2667_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728_failAssert0,lambdas_add1481_add1575null2666_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251_failAssert0
[INFO] Assertion amplification: 97 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:41 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:41 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:41 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728_failAssert0:lambdas_add1481_add1575null2666_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218_failAssert0:lambdas_add1481_add1575_literalMutationString1884_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697_failAssert0:lambdas_add1481_add1575null2668_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460_failAssert0:lambdas_add1481_add1575null2667_failAssert0:lambdas_add1481null1620_failAssert0null2670_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728_failAssert0:lambdas_add1481_add1575null2666_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218_failAssert0:lambdas_add1481_add1575_literalMutationString1884_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461_failAssert0:lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606_failAssert0:lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610_failAssert0:lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471_failAssert0:lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431_failAssert0:lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542_failAssert0:lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697_failAssert0:lambdas_add1481_add1575null2668_failAssert0:lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708_failAssert0:lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711_failAssert0:lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713_failAssert0:lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478_failAssert0:lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524_failAssert0:lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460_failAssert0:lambdas_add1481_add1575null2667_failAssert0:lambdas_add1481null1620_failAssert0null2670_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252_failAssert0:lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499_failAssert0:lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629_failAssert0:lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_literalMutationString2205_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0null2735_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_literalMutationString2208_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2499_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2500_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2257_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2521_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_add2498_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0null2734_failAssert0,lambdas_add1481null1620_failAssert0null2670_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_add2471_failAssert0,lambdas_literalMutationString1479_failAssert0_literalMutationString1532_failAssert0_add2636_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_add2462_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_literalMutationString2133_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_literalMutationString2101_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_add2526_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2629_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0null2727_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0null2676_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_add2543_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0null2687_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2628_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2712_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1958_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0_add2600_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0_add2542_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_add2560_failAssert0,lambdas_add1481_add1575_literalMutationString1884_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_literalMutationString2218_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_add2627_failAssert0,lambdas_literalMutationString1478_failAssert0null1625_failAssert0_add2431_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2059_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0null2711_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_literalMutationString2225_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1546_failAssert0null2725_failAssert0,lambdas_add1481_add1575null2668_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0null2674_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_add2465_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_add2558_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2698_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0null2710_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0_add2612_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0_add2605_failAssert0,lambdas_add1481_add1575null2667_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0_literalMutationString2104_failAssert0,lambdas_literalMutationString1475_failAssert0_add1603_failAssert0_literalMutationString2135_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2707_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0null2730_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0null2697_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2478_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1538_failAssert0_literalMutationString1937_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1535_failAssert0null2729_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_literalMutationString2235_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0null2728_failAssert0,lambdas_add1481_add1575null2666_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1539_failAssert0_add2610_failAssert0,lambdas_literalMutationString1478_failAssert0_add1612_failAssert0null2706_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_add2477_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2632_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_literalMutationString2212_failAssert0,lambdas_literalMutationString1478_failAssert0_add1614_failAssert0null2705_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1926_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_add2631_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_literalMutationString2055_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0null2678_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0_literalMutationString1931_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_literalMutationString1969_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2714_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0_literalMutationString1961_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_literalMutationString1925_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0_add2483_failAssert0,lambdas_literalMutationString1478_failAssert0_literalMutationString1545_failAssert0_literalMutationString1945_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2461_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1536_failAssert0_add2615_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0null2713_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2254_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1527_failAssert0null2682_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_literalMutationString2120_failAssert0,lambdas_literalMutationString1475_failAssert0_add1604_failAssert0_literalMutationString2151_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0_add2551_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1534_failAssert0_add2460_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1998_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1547_failAssert0null2726_failAssert0,lambdas_literalMutationString1476_failAssert0_literalMutationString1537_failAssert0null2675_failAssert0,lambdas_literalMutationString1475_failAssert0_add1605_failAssert0_add2552_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2709_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0null2699_failAssert0,lambdas_literalMutationString1477_failAssert0_add1616_failAssert0_add2524_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1997_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2252_failAssert0,lambdas_literalMutationString1477_failAssert0_literalMutationString1548_failAssert0_add2606_failAssert0,lambdas_literalMutationString1478_failAssert0_add1613_failAssert0null2708_failAssert0,lambdas_literalMutationString1477_failAssert0_add1617_failAssert0_literalMutationString2063_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1525_failAssert0null2680_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1526_failAssert0_literalMutationString2259_failAssert0,lambdas_literalMutationString1474_failAssert0_literalMutationString1519_failAssert0_literalMutationString1996_failAssert0,lambdas_literalMutationString1475_failAssert0_literalMutationString1524_failAssert0_literalMutationString2251_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Amplification of inverted, (3/6)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 19ms
  1% | ]/[INFO] 10 new tests generated
[INFO] Run tests. (10)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests invertednull2960:inverted_literalMutationString2954:inverted_literalMutationString2951:inverted_literalMutationString2953:inverted_literalMutationString2955:inverted_literalMutationString2952:inverted_literalMutationString2956:inverted_add2958:inverted_add2957:inverted_remove2959 
Parsing --class com.github.mustachejava.SpecTest --tests invertednull2960:inverted_literalMutationString2954:inverted_literalMutationString2951:inverted_literalMutationString2953:inverted_literalMutationString2955:inverted_literalMutationString2952:inverted_literalMutationString2956:inverted_add2958:inverted_add2957:inverted_remove2959
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_add2957,inverted_add2958,inverted_remove2959,inverted_literalMutationString2951(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956(com.github.mustachejava.SpecTest): null,invertednull2960(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================ ]/ 66% |================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958_withlog0:inverted_add2957_withlog0:inverted_add2958_withlog1:inverted_add2957_withlog1:inverted_add2958_withlog2:inverted_add2957_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958_withlog0:inverted_add2957_withlog0:inverted_add2958_withlog1:inverted_add2957_withlog1:inverted_add2958_withlog2:inverted_add2957_withlog2
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_add2958_withlog0,inverted_add2958_withlog1,inverted_add2958_withlog2,inverted_add2957_withlog0,inverted_add2957_withlog1,inverted_add2957_withlog2
[INFO] Generating assertions...
[INFO] 7 test fail, generating try/catch/fail blocks...
[INFO] 8 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958:invertednull2960_failAssert0:inverted_literalMutationString2954_failAssert0:inverted_literalMutationString2951_failAssert0:inverted_literalMutationString2953_failAssert0:inverted_literalMutationString2955_failAssert0:inverted_literalMutationString2952_failAssert0:inverted_literalMutationString2956_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958:invertednull2960_failAssert0:inverted_literalMutationString2954_failAssert0:inverted_literalMutationString2951_failAssert0:inverted_literalMutationString2953_failAssert0:inverted_literalMutationString2955_failAssert0:inverted_literalMutationString2952_failAssert0:inverted_literalMutationString2956_failAssert0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_literalMutationString2956_failAssert0,inverted_literalMutationString2955_failAssert0,inverted_literalMutationString2954_failAssert0,invertednull2960_failAssert0,inverted_literalMutationString2953_failAssert0,inverted_add2958,inverted_literalMutationString2952_failAssert0,inverted_literalMutationString2951_failAssert0
[INFO] Assertion amplification: 8 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:44 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:44 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:44 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958:invertednull2960_failAssert0:inverted_literalMutationString2954_failAssert0:inverted_literalMutationString2951_failAssert0:inverted_literalMutationString2953_failAssert0:inverted_literalMutationString2955_failAssert0:inverted_literalMutationString2952_failAssert0:inverted_literalMutationString2956_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958:invertednull2960_failAssert0:inverted_literalMutationString2954_failAssert0:inverted_literalMutationString2951_failAssert0:inverted_literalMutationString2953_failAssert0:inverted_literalMutationString2955_failAssert0:inverted_literalMutationString2952_failAssert0:inverted_literalMutationString2956_failAssert0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_literalMutationString2956_failAssert0,inverted_literalMutationString2955_failAssert0,inverted_literalMutationString2954_failAssert0,invertednull2960_failAssert0,inverted_literalMutationString2953_failAssert0,inverted_add2958,inverted_literalMutationString2952_failAssert0,inverted_literalMutationString2951_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 8 tests selected to be amplified over 8 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 165ms
  1% | ]/ 55% |=========================== ]\ 96% |================================================ ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958null3096:inverted_add2958null3097:inverted_literalMutationString2954_failAssert0null3098:inverted_literalMutationString2956_failAssert0null3103:inverted_literalMutationString2951_failAssert0null3099:inverted_literalMutationString2955_failAssert0null3101:inverted_literalMutationString2952_failAssert0null3102:inverted_literalMutationString2953_failAssert0null3100:inverted_add2958_literalMutationString2995:inverted_add2958_literalMutationString2984:inverted_add2958_literalMutationString2990:inverted_literalMutationString2954_failAssert0_literalMutationString2997:inverted_literalMutationString2954_failAssert0_literalMutationString3000:inverted_literalMutationString2954_failAssert0_literalMutationString2999:inverted_literalMutationString2956_failAssert0_literalMutationString3027:inverted_literalMutationString2956_failAssert0_literalMutationString3025:inverted_literalMutationString2956_failAssert0_literalMutationString3026:inverted_literalMutationString2951_failAssert0_literalMutationString3004:inverted_literalMutationString2951_failAssert0_literalMutationString3003:inverted_literalMutationString2951_failAssert0_literalMutationString3002:inverted_literalMutationString2955_failAssert0_literalMutationString3015:inverted_literalMutationString2955_failAssert0_literalMutationString3012:inverted_literalMutationString2955_failAssert0_literalMutationString3011:inverted_literalMutationString2952_failAssert0_literalMutationString3022:inverted_literalMutationString2952_failAssert0_literalMutationString3019:inverted_literalMutationString2952_failAssert0_literalMutationString3021:inverted_literalMutationString2953_failAssert0_literalMutationString3008:inverted_literalMutationString2953_failAssert0_literalMutationString3005:inverted_literalMutationString2953_failAssert0_literalMutationString3009:inverted_add2958_add3053:inverted_add2958_add3065:inverted_add2958_add3048:inverted_literalMutationString2954_failAssert0_add3078:inverted_literalMutationString2954_failAssert0_add3079:inverted_literalMutationString2954_failAssert0_add3077:inverted_literalMutationString2956_failAssert0_add3092:inverted_literalMutationString2956_failAssert0_add3094:inverted_literalMutationString2956_failAssert0_add3093:invertednull2960_failAssert0_add3076:invertednull2960_failAssert0_add3074:invertednull2960_failAssert0_add3075:inverted_literalMutationString2951_failAssert0_add3080:inverted_literalMutationString2951_failAssert0_add3082:inverted_literalMutationString2951_failAssert0_add3081:inverted_literalMutationString2955_failAssert0_add3086:inverted_literalMutationString2955_failAssert0_add3088:inverted_literalMutationString2955_failAssert0_add3087:inverted_literalMutationString2952_failAssert0_add3091:inverted_literalMutationString2952_failAssert0_add3090:inverted_literalMutationString2952_failAssert0_add3089:inverted_literalMutationString2953_failAssert0_add3085:inverted_literalMutationString2953_failAssert0_add3083:inverted_literalMutationString2953_failAssert0_add3084:inverted_add2958_remove3095:inverted_add2958_literalMutationString2988:inverted_add2958_literalMutationString2989:inverted_add2958_literalMutationString2985:inverted_literalMutationString2954_failAssert0_literalMutationString2998:inverted_literalMutationString2954_failAssert0_literalMutationString3001:inverted_literalMutationString2954_failAssert0_literalMutationString2996:inverted_literalMutationString2956_failAssert0_literalMutationString3024:inverted_literalMutationString2956_failAssert0_literalMutationString3028:inverted_literalMutationString2956_failAssert0_literalMutationString3023:inverted_literalMutationString2955_failAssert0_literalMutationString3014:inverted_literalMutationString2955_failAssert0_literalMutationString3013:inverted_literalMutationString2955_failAssert0_literalMutationString3016:inverted_literalMutationString2952_failAssert0_literalMutationString3017:inverted_literalMutationString2952_failAssert0_literalMutationString3018:inverted_literalMutationString2952_failAssert0_literalMutationString3020:inverted_literalMutationString2953_failAssert0_literalMutationString3006:inverted_literalMutationString2953_failAssert0_literalMutationString3007:inverted_literalMutationString2953_failAssert0_literalMutationString3010:inverted_add2958_add3058:inverted_add2958_add3042:inverted_add2958_add3029:inverted_add2958_add3046:inverted_add2958_add3073:inverted_add2958_add3066:inverted_add2958_add3055:inverted_add2958_add3033:inverted_add2958_add3072:inverted_add2958_add3031:inverted_add2958_add3062:inverted_add2958_add3041:inverted_add2958_add3070:inverted_add2958_add3039:inverted_add2958_add3047:inverted_add2958_add3037:inverted_add2958_add3057:inverted_add2958_add3043:inverted_add2958_add3068:inverted_add2958_add3059:inverted_add2958_add3040:inverted_add2958_add3050:inverted_add2958_add3044:inverted_add2958_literalMutationString2992:inverted_add2958_literalMutationString2991:inverted_add2958_add3064:inverted_add2958_add3036:inverted_add2958_add3032 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958null3096:inverted_add2958null3097:inverted_literalMutationString2954_failAssert0null3098:inverted_literalMutationString2956_failAssert0null3103:inverted_literalMutationString2951_failAssert0null3099:inverted_literalMutationString2955_failAssert0null3101:inverted_literalMutationString2952_failAssert0null3102:inverted_literalMutationString2953_failAssert0null3100:inverted_add2958_literalMutationString2995:inverted_add2958_literalMutationString2984:inverted_add2958_literalMutationString2990:inverted_literalMutationString2954_failAssert0_literalMutationString2997:inverted_literalMutationString2954_failAssert0_literalMutationString3000:inverted_literalMutationString2954_failAssert0_literalMutationString2999:inverted_literalMutationString2956_failAssert0_literalMutationString3027:inverted_literalMutationString2956_failAssert0_literalMutationString3025:inverted_literalMutationString2956_failAssert0_literalMutationString3026:inverted_literalMutationString2951_failAssert0_literalMutationString3004:inverted_literalMutationString2951_failAssert0_literalMutationString3003:inverted_literalMutationString2951_failAssert0_literalMutationString3002:inverted_literalMutationString2955_failAssert0_literalMutationString3015:inverted_literalMutationString2955_failAssert0_literalMutationString3012:inverted_literalMutationString2955_failAssert0_literalMutationString3011:inverted_literalMutationString2952_failAssert0_literalMutationString3022:inverted_literalMutationString2952_failAssert0_literalMutationString3019:inverted_literalMutationString2952_failAssert0_literalMutationString3021:inverted_literalMutationString2953_failAssert0_literalMutationString3008:inverted_literalMutationString2953_failAssert0_literalMutationString3005:inverted_literalMutationString2953_failAssert0_literalMutationString3009:inverted_add2958_add3053:inverted_add2958_add3065:inverted_add2958_add3048:inverted_literalMutationString2954_failAssert0_add3078:inverted_literalMutationString2954_failAssert0_add3079:inverted_literalMutationString2954_failAssert0_add3077:inverted_literalMutationString2956_failAssert0_add3092:inverted_literalMutationString2956_failAssert0_add3094:inverted_literalMutationString2956_failAssert0_add3093:invertednull2960_failAssert0_add3076:invertednull2960_failAssert0_add3074:invertednull2960_failAssert0_add3075:inverted_literalMutationString2951_failAssert0_add3080:inverted_literalMutationString2951_failAssert0_add3082:inverted_literalMutationString2951_failAssert0_add3081:inverted_literalMutationString2955_failAssert0_add3086:inverted_literalMutationString2955_failAssert0_add3088:inverted_literalMutationString2955_failAssert0_add3087:inverted_literalMutationString2952_failAssert0_add3091:inverted_literalMutationString2952_failAssert0_add3090:inverted_literalMutationString2952_failAssert0_add3089:inverted_literalMutationString2953_failAssert0_add3085:inverted_literalMutationString2953_failAssert0_add3083:inverted_literalMutationString2953_failAssert0_add3084:inverted_add2958_remove3095:inverted_add2958_literalMutationString2988:inverted_add2958_literalMutationString2989:inverted_add2958_literalMutationString2985:inverted_literalMutationString2954_failAssert0_literalMutationString2998:inverted_literalMutationString2954_failAssert0_literalMutationString3001:inverted_literalMutationString2954_failAssert0_literalMutationString2996:inverted_literalMutationString2956_failAssert0_literalMutationString3024:inverted_literalMutationString2956_failAssert0_literalMutationString3028:inverted_literalMutationString2956_failAssert0_literalMutationString3023:inverted_literalMutationString2955_failAssert0_literalMutationString3014:inverted_literalMutationString2955_failAssert0_literalMutationString3013:inverted_literalMutationString2955_failAssert0_literalMutationString3016:inverted_literalMutationString2952_failAssert0_literalMutationString3017:inverted_literalMutationString2952_failAssert0_literalMutationString3018:inverted_literalMutationString2952_failAssert0_literalMutationString3020:inverted_literalMutationString2953_failAssert0_literalMutationString3006:inverted_literalMutationString2953_failAssert0_literalMutationString3007:inverted_literalMutationString2953_failAssert0_literalMutationString3010:inverted_add2958_add3058:inverted_add2958_add3042:inverted_add2958_add3029:inverted_add2958_add3046:inverted_add2958_add3073:inverted_add2958_add3066:inverted_add2958_add3055:inverted_add2958_add3033:inverted_add2958_add3072:inverted_add2958_add3031:inverted_add2958_add3062:inverted_add2958_add3041:inverted_add2958_add3070:inverted_add2958_add3039:inverted_add2958_add3047:inverted_add2958_add3037:inverted_add2958_add3057:inverted_add2958_add3043:inverted_add2958_add3068:inverted_add2958_add3059:inverted_add2958_add3040:inverted_add2958_add3050:inverted_add2958_add3044:inverted_add2958_literalMutationString2992:inverted_add2958_literalMutationString2991:inverted_add2958_add3064:inverted_add2958_add3036:inverted_add2958_add3032
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_add2958_add3029,inverted_add2958_add3031,inverted_add2958_add3032,inverted_add2958_add3033,inverted_add2958_add3036,inverted_add2958_add3037,inverted_add2958_add3039,inverted_add2958_add3040,inverted_add2958_add3041,inverted_add2958_add3042,inverted_add2958_add3043,inverted_add2958_add3044,inverted_add2958_add3046,inverted_add2958_add3047,inverted_add2958_add3048,inverted_add2958_add3050,inverted_add2958_add3053,inverted_add2958_add3055,inverted_add2958_add3057,inverted_add2958_add3058,inverted_add2958_add3059,inverted_add2958_add3062,inverted_add2958_add3064,inverted_add2958_add3065,inverted_add2958_add3066,inverted_add2958_add3068,inverted_add2958_add3070,inverted_add2958_add3072,inverted_add2958_add3073,inverted_add2958_remove3095,inverted_add2958_literalMutationString2985,inverted_literalMutationString2955_failAssert0_literalMutationString3011(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3012(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3013(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3014(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3015(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3016(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0_add3080(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0_add3081(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0_add3082(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_add3089(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_add3090(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_add3091(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3083(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3084(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3085(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3077(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3078(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3079(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2996(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2998(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2999(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3001(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_add3086(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_add3087(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_add3088(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_add3092(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_add3093(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_add3094(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0null3099(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0null3102(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_literalMutationString3005(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_literalMutationString3006(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_literalMutationString3007(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_literalMutationString3008(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_literalMutationString3009(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_literalMutationString3010(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0null3100(com.github.mustachejava.SpecTest): null,inverted_add2958null3096(com.github.mustachejava.SpecTest): null,inverted_add2958null3097(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0null3098(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0null3101(com.github.mustachejava.SpecTest): null,invertednull2960_failAssert0_add3074(com.github.mustachejava.SpecTest): null,invertednull2960_failAssert0_add3075(com.github.mustachejava.SpecTest): null,invertednull2960_failAssert0_add3076(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0null3103(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2984(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2988(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2989(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2990(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2991(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2992(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2995(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3017(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3018(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3019(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3020(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3021(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3022(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3023(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3024(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3025(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3026(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3027(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3028(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0_literalMutationString3002(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0_literalMutationString3003(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0_literalMutationString3004(com.github.mustachejava.SpecTest): null
[INFO] 31 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |= ]/  6% |=== ]-  9% |==== ]\ 12% |====== ]| 16% |======== ]/ 19% |========= ]- 22% |=========== ]\ 25% |============ ]| 29% |============== ]/ 32% |================ ]- 35% |================= ]\ 38% |=================== ]| 41% |==================== ]/ 45% |====================== ]- 48% |======================== ]\ 51% |========================= ]| 54% |=========================== ]/ 58% |============================= ]- 61% |============================== ]\ 64% |================================ ]| 67% |================================= ]/ 70% |=================================== ]- 74% |===================================== ]\ 77% |====================================== ]| 80% |======================================== ]/ 83% |========================================= ]- 87% |=========================================== ]\ 90% |============================================= ]| 93% |============================================== ]/ 96% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (93)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3053_withlog0:inverted_add2958_add3065_withlog0:inverted_add2958_add3048_withlog0:inverted_add2958_remove3095_withlog0:inverted_add2958_literalMutationString2985_withlog0:inverted_add2958_add3058_withlog0:inverted_add2958_add3042_withlog0:inverted_add2958_add3029_withlog0:inverted_add2958_add3046_withlog0:inverted_add2958_add3073_withlog0:inverted_add2958_add3066_withlog0:inverted_add2958_add3055_withlog0:inverted_add2958_add3033_withlog0:inverted_add2958_add3072_withlog0:inverted_add2958_add3031_withlog0:inverted_add2958_add3062_withlog0:inverted_add2958_add3041_withlog0:inverted_add2958_add3070_withlog0:inverted_add2958_add3039_withlog0:inverted_add2958_add3047_withlog0:inverted_add2958_add3037_withlog0:inverted_add2958_add3057_withlog0:inverted_add2958_add3043_withlog0:inverted_add2958_add3068_withlog0:inverted_add2958_add3059_withlog0:inverted_add2958_add3040_withlog0:inverted_add2958_add3050_withlog0:inverted_add2958_add3044_withlog0:inverted_add2958_add3064_withlog0:inverted_add2958_add3036_withlog0:inverted_add2958_add3032_withlog0:inverted_add2958_add3053_withlog1:inverted_add2958_add3065_withlog1:inverted_add2958_add3048_withlog1:inverted_add2958_remove3095_withlog1:inverted_add2958_literalMutationString2985_withlog1:inverted_add2958_add3058_withlog1:inverted_add2958_add3042_withlog1:inverted_add2958_add3029_withlog1:inverted_add2958_add3046_withlog1:inverted_add2958_add3073_withlog1:inverted_add2958_add3066_withlog1:inverted_add2958_add3055_withlog1:inverted_add2958_add3033_withlog1:inverted_add2958_add3072_withlog1:inverted_add2958_add3031_withlog1:inverted_add2958_add3062_withlog1:inverted_add2958_add3041_withlog1:inverted_add2958_add3070_withlog1:inverted_add2958_add3039_withlog1:inverted_add2958_add3047_withlog1:inverted_add2958_add3037_withlog1:inverted_add2958_add3057_withlog1:inverted_add2958_add3043_withlog1:inverted_add2958_add3068_withlog1:inverted_add2958_add3059_withlog1:inverted_add2958_add3040_withlog1:inverted_add2958_add3050_withlog1:inverted_add2958_add3044_withlog1:inverted_add2958_add3064_withlog1:inverted_add2958_add3036_withlog1:inverted_add2958_add3032_withlog1:inverted_add2958_add3053_withlog2:inverted_add2958_add3065_withlog2:inverted_add2958_add3048_withlog2:inverted_add2958_remove3095_withlog2:inverted_add2958_literalMutationString2985_withlog2:inverted_add2958_add3058_withlog2:inverted_add2958_add3042_withlog2:inverted_add2958_add3029_withlog2:inverted_add2958_add3046_withlog2:inverted_add2958_add3073_withlog2:inverted_add2958_add3066_withlog2:inverted_add2958_add3055_withlog2:inverted_add2958_add3033_withlog2:inverted_add2958_add3072_withlog2:inverted_add2958_add3031_withlog2:inverted_add2958_add3062_withlog2:inverted_add2958_add3041_withlog2:inverted_add2958_add3070_withlog2:inverted_add2958_add3039_withlog2:inverted_add2958_add3047_withlog2:inverted_add2958_add3037_withlog2:inverted_add2958_add3057_withlog2:inverted_add2958_add3043_withlog2:inverted_add2958_add3068_withlog2:inverted_add2958_add3059_withlog2:inverted_add2958_add3040_withlog2:inverted_add2958_add3050_withlog2:inverted_add2958_add3044_withlog2:inverted_add2958_add3064_withlog2:inverted_add2958_add3036_withlog2:inverted_add2958_add3032_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3053_withlog0:inverted_add2958_add3065_withlog0:inverted_add2958_add3048_withlog0:inverted_add2958_remove3095_withlog0:inverted_add2958_literalMutationString2985_withlog0:inverted_add2958_add3058_withlog0:inverted_add2958_add3042_withlog0:inverted_add2958_add3029_withlog0:inverted_add2958_add3046_withlog0:inverted_add2958_add3073_withlog0:inverted_add2958_add3066_withlog0:inverted_add2958_add3055_withlog0:inverted_add2958_add3033_withlog0:inverted_add2958_add3072_withlog0:inverted_add2958_add3031_withlog0:inverted_add2958_add3062_withlog0:inverted_add2958_add3041_withlog0:inverted_add2958_add3070_withlog0:inverted_add2958_add3039_withlog0:inverted_add2958_add3047_withlog0:inverted_add2958_add3037_withlog0:inverted_add2958_add3057_withlog0:inverted_add2958_add3043_withlog0:inverted_add2958_add3068_withlog0:inverted_add2958_add3059_withlog0:inverted_add2958_add3040_withlog0:inverted_add2958_add3050_withlog0:inverted_add2958_add3044_withlog0:inverted_add2958_add3064_withlog0:inverted_add2958_add3036_withlog0:inverted_add2958_add3032_withlog0:inverted_add2958_add3053_withlog1:inverted_add2958_add3065_withlog1:inverted_add2958_add3048_withlog1:inverted_add2958_remove3095_withlog1:inverted_add2958_literalMutationString2985_withlog1:inverted_add2958_add3058_withlog1:inverted_add2958_add3042_withlog1:inverted_add2958_add3029_withlog1:inverted_add2958_add3046_withlog1:inverted_add2958_add3073_withlog1:inverted_add2958_add3066_withlog1:inverted_add2958_add3055_withlog1:inverted_add2958_add3033_withlog1:inverted_add2958_add3072_withlog1:inverted_add2958_add3031_withlog1:inverted_add2958_add3062_withlog1:inverted_add2958_add3041_withlog1:inverted_add2958_add3070_withlog1:inverted_add2958_add3039_withlog1:inverted_add2958_add3047_withlog1:inverted_add2958_add3037_withlog1:inverted_add2958_add3057_withlog1:inverted_add2958_add3043_withlog1:inverted_add2958_add3068_withlog1:inverted_add2958_add3059_withlog1:inverted_add2958_add3040_withlog1:inverted_add2958_add3050_withlog1:inverted_add2958_add3044_withlog1:inverted_add2958_add3064_withlog1:inverted_add2958_add3036_withlog1:inverted_add2958_add3032_withlog1:inverted_add2958_add3053_withlog2:inverted_add2958_add3065_withlog2:inverted_add2958_add3048_withlog2:inverted_add2958_remove3095_withlog2:inverted_add2958_literalMutationString2985_withlog2:inverted_add2958_add3058_withlog2:inverted_add2958_add3042_withlog2:inverted_add2958_add3029_withlog2:inverted_add2958_add3046_withlog2:inverted_add2958_add3073_withlog2:inverted_add2958_add3066_withlog2:inverted_add2958_add3055_withlog2:inverted_add2958_add3033_withlog2:inverted_add2958_add3072_withlog2:inverted_add2958_add3031_withlog2:inverted_add2958_add3062_withlog2:inverted_add2958_add3041_withlog2:inverted_add2958_add3070_withlog2:inverted_add2958_add3039_withlog2:inverted_add2958_add3047_withlog2:inverted_add2958_add3037_withlog2:inverted_add2958_add3057_withlog2:inverted_add2958_add3043_withlog2:inverted_add2958_add3068_withlog2:inverted_add2958_add3059_withlog2:inverted_add2958_add3040_withlog2:inverted_add2958_add3050_withlog2:inverted_add2958_add3044_withlog2:inverted_add2958_add3064_withlog2:inverted_add2958_add3036_withlog2:inverted_add2958_add3032_withlog2
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_add2958_add3029_withlog0,inverted_add2958_add3029_withlog1,inverted_add2958_add3029_withlog2,inverted_add2958_add3053_withlog0,inverted_add2958_add3053_withlog1,inverted_add2958_add3053_withlog2,inverted_add2958_add3050_withlog0,inverted_add2958_add3050_withlog1,inverted_add2958_add3050_withlog2,inverted_add2958_add3073_withlog0,inverted_add2958_add3073_withlog1,inverted_add2958_add3073_withlog2,inverted_add2958_add3048_withlog0,inverted_add2958_add3048_withlog1,inverted_add2958_add3048_withlog2,inverted_add2958_add3072_withlog0,inverted_add2958_add3072_withlog1,inverted_add2958_add3072_withlog2,inverted_add2958_add3047_withlog0,inverted_add2958_add3047_withlog1,inverted_add2958_add3047_withlog2,inverted_add2958_add3046_withlog0,inverted_add2958_add3046_withlog1,inverted_add2958_add3046_withlog2,inverted_add2958_add3070_withlog0,inverted_add2958_add3070_withlog1,inverted_add2958_add3070_withlog2,inverted_add2958_add3068_withlog0,inverted_add2958_add3068_withlog1,inverted_add2958_add3068_withlog2,inverted_add2958_add3044_withlog0,inverted_add2958_add3044_withlog1,inverted_add2958_add3044_withlog2,inverted_add2958_add3043_withlog0,inverted_add2958_add3043_withlog1,inverted_add2958_add3043_withlog2,inverted_add2958_add3066_withlog0,inverted_add2958_add3066_withlog1,inverted_add2958_add3066_withlog2,inverted_add2958_add3042_withlog0,inverted_add2958_add3042_withlog1,inverted_add2958_add3042_withlog2,inverted_add2958_add3065_withlog0,inverted_add2958_add3065_withlog1,inverted_add2958_add3065_withlog2,inverted_add2958_add3041_withlog0,inverted_add2958_add3041_withlog1,inverted_add2958_add3041_withlog2,inverted_add2958_add3064_withlog0,inverted_add2958_add3064_withlog1,inverted_add2958_add3064_withlog2,inverted_add2958_add3040_withlog0,inverted_add2958_add3040_withlog1,inverted_add2958_add3040_withlog2,inverted_add2958_add3039_withlog0,inverted_add2958_add3039_withlog1,inverted_add2958_add3039_withlog2,inverted_add2958_literalMutationString2985_withlog0,inverted_add2958_literalMutationString2985_withlog1,inverted_add2958_literalMutationString2985_withlog2,inverted_add2958_add3062_withlog0,inverted_add2958_add3062_withlog1,inverted_add2958_add3062_withlog2,inverted_add2958_add3037_withlog0,inverted_add2958_add3037_withlog1,inverted_add2958_add3037_withlog2,inverted_add2958_add3036_withlog0,inverted_add2958_add3036_withlog1,inverted_add2958_add3036_withlog2,inverted_add2958_remove3095_withlog0,inverted_add2958_remove3095_withlog1,inverted_add2958_remove3095_withlog2,inverted_add2958_add3059_withlog0,inverted_add2958_add3059_withlog1,inverted_add2958_add3059_withlog2,inverted_add2958_add3058_withlog0,inverted_add2958_add3058_withlog1,inverted_add2958_add3058_withlog2,inverted_add2958_add3057_withlog0,inverted_add2958_add3057_withlog1,inverted_add2958_add3057_withlog2,inverted_add2958_add3033_withlog0,inverted_add2958_add3033_withlog1,inverted_add2958_add3033_withlog2,inverted_add2958_add3032_withlog0,inverted_add2958_add3032_withlog1,inverted_add2958_add3032_withlog2,inverted_add2958_add3055_withlog0,inverted_add2958_add3055_withlog1,inverted_add2958_add3055_withlog2,inverted_add2958_add3031_withlog0,inverted_add2958_add3031_withlog1,inverted_add2958_add3031_withlog2
[INFO] Generating assertions...
[INFO] 69 test fail, generating try/catch/fail blocks...
[INFO] 70 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3029:inverted_add2958null3096_failAssert0:inverted_add2958null3097_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0:inverted_literalMutationString2956_failAssert0null3103_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0:inverted_literalMutationString2955_failAssert0null3101_failAssert0:inverted_literalMutationString2952_failAssert0null3102_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0:inverted_add2958_literalMutationString2995_failAssert0:inverted_add2958_literalMutationString2984_failAssert0:inverted_add2958_literalMutationString2990_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3027_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3025_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3026_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3004_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3003_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3002_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3019_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3008_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3005_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3009_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0:inverted_literalMutationString2954_failAssert0_add3077_failAssert0:inverted_literalMutationString2956_failAssert0_add3092_failAssert0:inverted_literalMutationString2956_failAssert0_add3094_failAssert0:inverted_literalMutationString2956_failAssert0_add3093_failAssert0:invertednull2960_failAssert0_add3076_failAssert0:invertednull2960_failAssert0_add3074_failAssert0:invertednull2960_failAssert0_add3075_failAssert0:inverted_literalMutationString2951_failAssert0_add3080_failAssert0:inverted_literalMutationString2951_failAssert0_add3082_failAssert0:inverted_literalMutationString2951_failAssert0_add3081_failAssert0:inverted_literalMutationString2955_failAssert0_add3086_failAssert0:inverted_literalMutationString2955_failAssert0_add3088_failAssert0:inverted_literalMutationString2955_failAssert0_add3087_failAssert0:inverted_literalMutationString2952_failAssert0_add3091_failAssert0:inverted_literalMutationString2952_failAssert0_add3090_failAssert0:inverted_literalMutationString2952_failAssert0_add3089_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0:inverted_add2958_literalMutationString2988_failAssert0:inverted_add2958_literalMutationString2989_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3028_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3017_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3018_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3006_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3007_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3010_failAssert0:inverted_add2958_literalMutationString2992_failAssert0:inverted_add2958_literalMutationString2991_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3029:inverted_add2958null3096_failAssert0:inverted_add2958null3097_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0:inverted_literalMutationString2956_failAssert0null3103_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0:inverted_literalMutationString2955_failAssert0null3101_failAssert0:inverted_literalMutationString2952_failAssert0null3102_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0:inverted_add2958_literalMutationString2995_failAssert0:inverted_add2958_literalMutationString2984_failAssert0:inverted_add2958_literalMutationString2990_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3027_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3025_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3026_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3004_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3003_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3002_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3019_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3008_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3005_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3009_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0:inverted_literalMutationString2954_failAssert0_add3077_failAssert0:inverted_literalMutationString2956_failAssert0_add3092_failAssert0:inverted_literalMutationString2956_failAssert0_add3094_failAssert0:inverted_literalMutationString2956_failAssert0_add3093_failAssert0:invertednull2960_failAssert0_add3076_failAssert0:invertednull2960_failAssert0_add3074_failAssert0:invertednull2960_failAssert0_add3075_failAssert0:inverted_literalMutationString2951_failAssert0_add3080_failAssert0:inverted_literalMutationString2951_failAssert0_add3082_failAssert0:inverted_literalMutationString2951_failAssert0_add3081_failAssert0:inverted_literalMutationString2955_failAssert0_add3086_failAssert0:inverted_literalMutationString2955_failAssert0_add3088_failAssert0:inverted_literalMutationString2955_failAssert0_add3087_failAssert0:inverted_literalMutationString2952_failAssert0_add3091_failAssert0:inverted_literalMutationString2952_failAssert0_add3090_failAssert0:inverted_literalMutationString2952_failAssert0_add3089_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0:inverted_add2958_literalMutationString2988_failAssert0:inverted_add2958_literalMutationString2989_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3028_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3017_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3018_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3006_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3007_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3010_failAssert0:inverted_add2958_literalMutationString2992_failAssert0:inverted_add2958_literalMutationString2991_failAssert0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_literalMutationString2952_failAssert0_add3090_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0,inverted_add2958_literalMutationString2988_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3007_failAssert0,inverted_literalMutationString2955_failAssert0_add3088_failAssert0,invertednull2960_failAssert0_add3076_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3006_failAssert0,inverted_add2958_literalMutationString2995_failAssert0,inverted_literalMutationString2955_failAssert0_add3087_failAssert0,invertednull2960_failAssert0_add3075_failAssert0,inverted_literalMutationString2955_failAssert0null3101_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3005_failAssert0,inverted_literalMutationString2955_failAssert0_add3086_failAssert0,invertednull2960_failAssert0_add3074_failAssert0,inverted_literalMutationString2951_failAssert0null3099_failAssert0,inverted_add2958_add3029,inverted_literalMutationString2953_failAssert0null3100_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0,inverted_add2958_literalMutationString2984_failAssert0,inverted_add2958_literalMutationString2992_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0,inverted_add2958_literalMutationString2991_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3010_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0,inverted_add2958_literalMutationString2990_failAssert0,inverted_literalMutationString2956_failAssert0null3103_failAssert0,inverted_literalMutationString2951_failAssert0_add3082_failAssert0,inverted_literalMutationString2952_failAssert0_add3089_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3019_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3028_failAssert0,inverted_literalMutationString2951_failAssert0_add3081_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3018_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0,inverted_literalMutationString2952_failAssert0null3102_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3027_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0,inverted_literalMutationString2951_failAssert0_add3080_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3017_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3026_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0,inverted_literalMutationString2956_failAssert0_add3094_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0,inverted_literalMutationString2951_failAssert0_literalMutationString3004_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3025_failAssert0,inverted_literalMutationString2954_failAssert0null3098_failAssert0,inverted_literalMutationString2954_failAssert0_add3077_failAssert0,inverted_literalMutationString2956_failAssert0_add3093_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0,inverted_literalMutationString2951_failAssert0_literalMutationString3003_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0,inverted_literalMutationString2956_failAssert0_add3092_failAssert0,inverted_literalMutationString2951_failAssert0_literalMutationString3002_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3009_failAssert0,inverted_add2958null3097_failAssert0,inverted_literalMutationString2952_failAssert0_add3091_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0,inverted_add2958_literalMutationString2989_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3008_failAssert0,inverted_add2958null3096_failAssert0
[INFO] Assertion amplification: 70 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:49 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:49 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:49 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3029:inverted_add2958null3096_failAssert0:inverted_add2958null3097_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0:inverted_literalMutationString2956_failAssert0null3103_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0:inverted_literalMutationString2955_failAssert0null3101_failAssert0:inverted_literalMutationString2952_failAssert0null3102_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0:inverted_add2958_literalMutationString2995_failAssert0:inverted_add2958_literalMutationString2984_failAssert0:inverted_add2958_literalMutationString2990_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3027_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3025_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3026_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3004_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3003_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3002_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3019_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3008_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3005_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3009_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0:inverted_literalMutationString2954_failAssert0_add3077_failAssert0:inverted_literalMutationString2956_failAssert0_add3092_failAssert0:inverted_literalMutationString2956_failAssert0_add3094_failAssert0:inverted_literalMutationString2956_failAssert0_add3093_failAssert0:invertednull2960_failAssert0_add3076_failAssert0:invertednull2960_failAssert0_add3074_failAssert0:invertednull2960_failAssert0_add3075_failAssert0:inverted_literalMutationString2951_failAssert0_add3080_failAssert0:inverted_literalMutationString2951_failAssert0_add3082_failAssert0:inverted_literalMutationString2951_failAssert0_add3081_failAssert0:inverted_literalMutationString2955_failAssert0_add3086_failAssert0:inverted_literalMutationString2955_failAssert0_add3088_failAssert0:inverted_literalMutationString2955_failAssert0_add3087_failAssert0:inverted_literalMutationString2952_failAssert0_add3091_failAssert0:inverted_literalMutationString2952_failAssert0_add3090_failAssert0:inverted_literalMutationString2952_failAssert0_add3089_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0:inverted_add2958_literalMutationString2988_failAssert0:inverted_add2958_literalMutationString2989_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3028_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3017_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3018_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3006_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3007_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3010_failAssert0:inverted_add2958_literalMutationString2992_failAssert0:inverted_add2958_literalMutationString2991_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3029:inverted_add2958null3096_failAssert0:inverted_add2958null3097_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0:inverted_literalMutationString2956_failAssert0null3103_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0:inverted_literalMutationString2955_failAssert0null3101_failAssert0:inverted_literalMutationString2952_failAssert0null3102_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0:inverted_add2958_literalMutationString2995_failAssert0:inverted_add2958_literalMutationString2984_failAssert0:inverted_add2958_literalMutationString2990_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3027_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3025_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3026_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3004_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3003_failAssert0:inverted_literalMutationString2951_failAssert0_literalMutationString3002_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3019_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3008_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3005_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3009_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0:inverted_literalMutationString2954_failAssert0_add3077_failAssert0:inverted_literalMutationString2956_failAssert0_add3092_failAssert0:inverted_literalMutationString2956_failAssert0_add3094_failAssert0:inverted_literalMutationString2956_failAssert0_add3093_failAssert0:invertednull2960_failAssert0_add3076_failAssert0:invertednull2960_failAssert0_add3074_failAssert0:invertednull2960_failAssert0_add3075_failAssert0:inverted_literalMutationString2951_failAssert0_add3080_failAssert0:inverted_literalMutationString2951_failAssert0_add3082_failAssert0:inverted_literalMutationString2951_failAssert0_add3081_failAssert0:inverted_literalMutationString2955_failAssert0_add3086_failAssert0:inverted_literalMutationString2955_failAssert0_add3088_failAssert0:inverted_literalMutationString2955_failAssert0_add3087_failAssert0:inverted_literalMutationString2952_failAssert0_add3091_failAssert0:inverted_literalMutationString2952_failAssert0_add3090_failAssert0:inverted_literalMutationString2952_failAssert0_add3089_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0:inverted_add2958_literalMutationString2988_failAssert0:inverted_add2958_literalMutationString2989_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3028_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3017_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3018_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3006_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3007_failAssert0:inverted_literalMutationString2953_failAssert0_literalMutationString3010_failAssert0:inverted_add2958_literalMutationString2992_failAssert0:inverted_add2958_literalMutationString2991_failAssert0
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_literalMutationString2952_failAssert0_add3090_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0,inverted_add2958_literalMutationString2988_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3007_failAssert0,inverted_literalMutationString2955_failAssert0_add3088_failAssert0,invertednull2960_failAssert0_add3076_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3006_failAssert0,inverted_add2958_literalMutationString2995_failAssert0,inverted_literalMutationString2955_failAssert0_add3087_failAssert0,invertednull2960_failAssert0_add3075_failAssert0,inverted_literalMutationString2955_failAssert0null3101_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3005_failAssert0,inverted_literalMutationString2955_failAssert0_add3086_failAssert0,invertednull2960_failAssert0_add3074_failAssert0,inverted_literalMutationString2951_failAssert0null3099_failAssert0,inverted_add2958_add3029,inverted_literalMutationString2953_failAssert0null3100_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0,inverted_add2958_literalMutationString2984_failAssert0,inverted_add2958_literalMutationString2992_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0,inverted_add2958_literalMutationString2991_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3010_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0,inverted_add2958_literalMutationString2990_failAssert0,inverted_literalMutationString2956_failAssert0null3103_failAssert0,inverted_literalMutationString2951_failAssert0_add3082_failAssert0,inverted_literalMutationString2952_failAssert0_add3089_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3019_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3028_failAssert0,inverted_literalMutationString2951_failAssert0_add3081_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3018_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0,inverted_literalMutationString2952_failAssert0null3102_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3027_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0,inverted_literalMutationString2951_failAssert0_add3080_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3017_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3026_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0,inverted_literalMutationString2956_failAssert0_add3094_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0,inverted_literalMutationString2951_failAssert0_literalMutationString3004_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3025_failAssert0,inverted_literalMutationString2954_failAssert0null3098_failAssert0,inverted_literalMutationString2954_failAssert0_add3077_failAssert0,inverted_literalMutationString2956_failAssert0_add3093_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0,inverted_literalMutationString2951_failAssert0_literalMutationString3003_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0,inverted_literalMutationString2956_failAssert0_add3092_failAssert0,inverted_literalMutationString2951_failAssert0_literalMutationString3002_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3009_failAssert0,inverted_add2958null3097_failAssert0,inverted_literalMutationString2952_failAssert0_add3091_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0,inverted_add2958_literalMutationString2989_failAssert0,inverted_literalMutationString2953_failAssert0_literalMutationString3008_failAssert0,inverted_add2958null3096_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 70 tests selected to be amplified over 70 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 971ms
  1% | ]/ 70% |=================================== ]- 92% |============================================== ]|[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137:inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127:inverted_add2958null3096_failAssert0null4075:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092:inverted_add2958null3097_failAssert0null4076:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140:inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130:inverted_add2958_literalMutationString2988_failAssert0null4132:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142:inverted_add2958_literalMutationString2989_failAssert0null4134:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642:inverted_add2958null3096_failAssert0_literalMutationString3358:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449:inverted_add2958null3097_failAssert0_literalMutationString3361:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652:inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722:inverted_add2958_literalMutationString2989_failAssert0_literalMutationString3671:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042:inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003:inverted_add2958null3096_failAssert0_add3835:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029:inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901:inverted_add2958null3097_failAssert0_add3839:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009:inverted_add2958_literalMutationString2988_failAssert0_add4010:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041:inverted_add2958_literalMutationString2989_failAssert0_add4017:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020:inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129:inverted_add2958_literalMutationString2988_failAssert0null4131:inverted_add2958_literalMutationString2989_failAssert0null4133:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044:inverted_add2958_add3029_remove4071:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097:inverted_add2958_literalMutationString2984_failAssert0null4079:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137:inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127:inverted_add2958null3096_failAssert0null4075:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092:inverted_add2958null3097_failAssert0null4076:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140:inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130:inverted_add2958_literalMutationString2988_failAssert0null4132:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142:inverted_add2958_literalMutationString2989_failAssert0null4134:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642:inverted_add2958null3096_failAssert0_literalMutationString3358:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449:inverted_add2958null3097_failAssert0_literalMutationString3361:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652:inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722:inverted_add2958_literalMutationString2989_failAssert0_literalMutationString3671:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042:inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003:inverted_add2958null3096_failAssert0_add3835:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029:inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901:inverted_add2958null3097_failAssert0_add3839:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009:inverted_add2958_literalMutationString2988_failAssert0_add4010:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041:inverted_add2958_literalMutationString2989_failAssert0_add4017:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020:inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129:inverted_add2958_literalMutationString2988_failAssert0null4131:inverted_add2958_literalMutationString2989_failAssert0null4133:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044:inverted_add2958_add3029_remove4071:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097:inverted_add2958_literalMutationString2984_failAssert0null4079:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872
Running Falsey - Falsey sections should have their contents rendered.: success!
Running Truthy - Truthy sections should have their contents omitted.: success!
Running Context - Objects and hashes should behave like truthy values.: success!
Running List - Lists should behave like truthy values.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple inverted sections per template should be permitted.: success!
Running Nested (Falsey) - Nested falsey sections should have their contents rendered.: success!
Running Nested (Truthy) - Nested truthy sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Inverted Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Inverted sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Inverted should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Standalone Indented Lines - Standalone indented lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 21 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_add2958_add3029_remove4071,inverted_add2958_literalMutationString2989_failAssert0null4133(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2989_failAssert0null4134(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097(com.github.mustachejava.SpecTest): null,inverted_add2958null3096_failAssert0_add3835(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095(com.github.mustachejava.SpecTest): null,inverted_add2958null3097_failAssert0_add3839(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2989_failAssert0_literalMutationString3671(com.github.mustachejava.SpecTest): inverted_add2958_literalMutationString2989 should have thrown NullPointerException,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130(com.github.mustachejava.SpecTest): null,inverted_add2958null3097_failAssert0_literalMutationString3361(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2988_failAssert0_add4010(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2989_failAssert0_add4017(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683(com.github.mustachejava.SpecTest): null,inverted_add2958null3096_failAssert0null4075(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2984_failAssert0null4079(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668(com.github.mustachejava.SpecTest): null,inverted_add2958null3097_failAssert0null4076(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102(com.github.mustachejava.SpecTest): null,inverted_add2958null3096_failAssert0_literalMutationString3358(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2988_failAssert0null4131(com.github.mustachejava.SpecTest): null,inverted_add2958_literalMutationString2988_failAssert0null4132(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041(com.github.mustachejava.SpecTest): null,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020(com.github.mustachejava.SpecTest): null
[INFO] 1 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
100% |================================================== ]/
[INFO] Run instrumented tests. (3)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3029_remove4071_withlog0:inverted_add2958_add3029_remove4071_withlog1:inverted_add2958_add3029_remove4071_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_add2958_add3029_remove4071_withlog0:inverted_add2958_add3029_remove4071_withlog1:inverted_add2958_add3029_remove4071_withlog2
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_add2958_add3029_remove4071_withlog0,inverted_add2958_add3029_remove4071_withlog1,inverted_add2958_add3029_remove4071_withlog2
[INFO] Generating assertions...
[INFO] 99 test fail, generating try/catch/fail blocks...
[INFO] 98 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127_failAssert0:inverted_add2958null3096_failAssert0null4075_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092_failAssert0:inverted_add2958null3097_failAssert0null4076_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4132_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4134_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642_failAssert0:inverted_add2958null3096_failAssert0_literalMutationString3358_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449_failAssert0:inverted_add2958null3097_failAssert0_literalMutationString3361_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003_failAssert0:inverted_add2958null3096_failAssert0_add3835_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901_failAssert0:inverted_add2958null3097_failAssert0_add3839_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_add4010_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041_failAssert0:inverted_add2958_literalMutationString2989_failAssert0_add4017_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4131_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4133_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097_failAssert0:inverted_add2958_literalMutationString2984_failAssert0null4079_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127_failAssert0:inverted_add2958null3096_failAssert0null4075_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092_failAssert0:inverted_add2958null3097_failAssert0null4076_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4132_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4134_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642_failAssert0:inverted_add2958null3096_failAssert0_literalMutationString3358_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449_failAssert0:inverted_add2958null3097_failAssert0_literalMutationString3361_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003_failAssert0:inverted_add2958null3096_failAssert0_add3835_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901_failAssert0:inverted_add2958null3097_failAssert0_add3839_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_add4010_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041_failAssert0:inverted_add2958_literalMutationString2989_failAssert0_add4017_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4131_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4133_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097_failAssert0:inverted_add2958_literalMutationString2984_failAssert0null4079_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449_failAssert0,inverted_add2958null3096_failAssert0null4075_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415_failAssert0,inverted_add2958_literalMutationString2988_failAssert0null4132_failAssert0,inverted_add2958null3096_failAssert0_add3835_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000_failAssert0,inverted_add2958_literalMutationString2988_failAssert0null4131_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126_failAssert0,inverted_add2958null3096_failAssert0_literalMutationString3358_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097_failAssert0,inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137_failAssert0,inverted_add2958null3097_failAssert0_add3839_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021_failAssert0,inverted_add2958null3097_failAssert0null4076_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141_failAssert0,inverted_add2958_literalMutationString2989_failAssert0null4134_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129_failAssert0,inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453_failAssert0,inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857_failAssert0,inverted_add2958_literalMutationString2989_failAssert0null4133_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509_failAssert0,inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905_failAssert0,inverted_add2958null3097_failAssert0_literalMutationString3361_failAssert0,inverted_add2958_literalMutationString2988_failAssert0_add4010_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683_failAssert0,inverted_add2958_literalMutationString2989_failAssert0_add4017_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094_failAssert0,inverted_add2958_literalMutationString2984_failAssert0null4079_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629_failAssert0
[INFO] Assertion amplification: 98 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:54 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:54 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:54 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127_failAssert0:inverted_add2958null3096_failAssert0null4075_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092_failAssert0:inverted_add2958null3097_failAssert0null4076_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4132_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4134_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642_failAssert0:inverted_add2958null3096_failAssert0_literalMutationString3358_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449_failAssert0:inverted_add2958null3097_failAssert0_literalMutationString3361_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003_failAssert0:inverted_add2958null3096_failAssert0_add3835_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901_failAssert0:inverted_add2958null3097_failAssert0_add3839_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_add4010_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041_failAssert0:inverted_add2958_literalMutationString2989_failAssert0_add4017_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4131_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4133_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097_failAssert0:inverted_add2958_literalMutationString2984_failAssert0null4079_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127_failAssert0:inverted_add2958null3096_failAssert0null4075_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092_failAssert0:inverted_add2958null3097_failAssert0null4076_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4132_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4134_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642_failAssert0:inverted_add2958null3096_failAssert0_literalMutationString3358_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449_failAssert0:inverted_add2958null3097_failAssert0_literalMutationString3361_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042_failAssert0:inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003_failAssert0:inverted_add2958null3096_failAssert0_add3835_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029_failAssert0:inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901_failAssert0:inverted_add2958null3097_failAssert0_add3839_failAssert0:inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034_failAssert0:inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009_failAssert0:inverted_add2958_literalMutationString2988_failAssert0_add4010_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041_failAssert0:inverted_add2958_literalMutationString2989_failAssert0_add4017_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020_failAssert0:inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878_failAssert0:inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102_failAssert0:inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128_failAssert0:inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129_failAssert0:inverted_add2958_literalMutationString2988_failAssert0null4131_failAssert0:inverted_add2958_literalMutationString2989_failAssert0null4133_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026_failAssert0:inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095_failAssert0:inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097_failAssert0:inverted_add2958_literalMutationString2984_failAssert0null4079_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402_failAssert0:inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875_failAssert0:inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4024_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0null4085_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3875_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_literalMutationString3449_failAssert0,inverted_add2958null3096_failAssert0null4075_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_literalMutationString3698_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0_add3901_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3695_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4128_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3398_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0_add4009_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_literalMutationString3415_failAssert0,inverted_add2958_literalMutationString2988_failAssert0null4132_failAssert0,inverted_add2958null3096_failAssert0_add3835_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0null4127_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0null4083_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0null4140_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add4000_failAssert0,inverted_add2958_literalMutationString2988_failAssert0null4131_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0null4126_failAssert0,inverted_add2958null3096_failAssert0_literalMutationString3358_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3021_failAssert0null4097_failAssert0,inverted_literalMutationString2954_failAssert0null3098_failAssert0_add3842_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0null4138_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_literalMutationString3722_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_add4020_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3406_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0_add3931_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0null4143_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0_add4041_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0null4137_failAssert0,inverted_add2958null3097_failAssert0_add3839_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0null4084_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3460_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_add4034_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3632_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3405_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4022_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0_add3929_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3693_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0null4093_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_literalMutationString3404_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_add3903_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_add4021_failAssert0,inverted_add2958null3097_failAssert0null4076_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0null4135_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3014_failAssert0null4141_failAssert0,inverted_add2958_literalMutationString2989_failAssert0null4134_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3023_failAssert0_literalMutationString3712_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4102_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4129_failAssert0,inverted_add2958_literalMutationString2988_failAssert0_literalMutationString3668_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3012_failAssert0_literalMutationString3453_failAssert0,inverted_literalMutationString2953_failAssert0null3100_failAssert0_add3857_failAssert0,inverted_add2958_literalMutationString2989_failAssert0null4133_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0null4101_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2999_failAssert0_add3878_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4044_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0_literalMutationString3690_failAssert0,inverted_literalMutationString2956_failAssert0_literalMutationString3024_failAssert0_add4029_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3001_failAssert0null4136_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0_literalMutationString3509_failAssert0,inverted_literalMutationString2951_failAssert0null3099_failAssert0_add3848_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3907_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0_literalMutationString3642_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3727_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_add4042_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3020_failAssert0null4146_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3906_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_add3999_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_add3905_failAssert0,inverted_add2958null3097_failAssert0_literalMutationString3361_failAssert0,inverted_add2958_literalMutationString2988_failAssert0_add4010_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3874_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2998_failAssert0_literalMutationString3683_failAssert0,inverted_add2958_literalMutationString2989_failAssert0_add4017_failAssert0,inverted_literalMutationString2952_failAssert0_literalMutationString3022_failAssert0null4095_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0null4094_failAssert0,inverted_add2958_literalMutationString2984_failAssert0null4079_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3016_failAssert0_literalMutationString3725_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3459_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0_literalMutationString3652_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_add4026_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3877_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3402_failAssert0,inverted_literalMutationString2954_failAssert0_add3079_failAssert0null4103_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3013_failAssert0null4142_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3873_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3011_failAssert0_literalMutationString3458_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2996_failAssert0_literalMutationString3697_failAssert0,inverted_literalMutationString2954_failAssert0_add3078_failAssert0_literalMutationString3501_failAssert0,inverted_literalMutationString2955_failAssert0_literalMutationString3015_failAssert0null4092_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString3000_failAssert0_add3876_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_literalMutationString3401_failAssert0,inverted_literalMutationString2954_failAssert0_literalMutationString2997_failAssert0_add3872_failAssert0,inverted_literalMutationString2953_failAssert0_add3084_failAssert0null4130_failAssert0,inverted_literalMutationString2953_failAssert0_add3083_failAssert0_add4003_failAssert0,inverted_literalMutationString2953_failAssert0_add3085_failAssert0_literalMutationString3629_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Amplification of partials, (4/6)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 19ms
  1% | ]/[INFO] 10 new tests generated
[INFO] Run tests. (10)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partialsnull4364:partials_literalMutationString4358:partials_literalMutationString4359:partials_literalMutationString4355:partials_literalMutationString4360:partials_literalMutationString4357:partials_literalMutationString4356:partials_add4361:partials_add4362:partials_remove4363 
Parsing --class com.github.mustachejava.SpecTest --tests partialsnull4364:partials_literalMutationString4358:partials_literalMutationString4359:partials_literalMutationString4355:partials_literalMutationString4360:partials_literalMutationString4357:partials_literalMutationString4356:partials_add4361:partials_add4362:partials_remove4363
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_remove4363,partials_add4361,partials_add4362,partialsnull4364(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================ ]/ 66% |================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_add4361_withlog0:partials_add4362_withlog0:partials_add4361_withlog1:partials_add4362_withlog1:partials_add4361_withlog2:partials_add4362_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests partials_add4361_withlog0:partials_add4362_withlog0:partials_add4361_withlog1:partials_add4362_withlog1:partials_add4361_withlog2:partials_add4362_withlog2
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_add4362_withlog0,partials_add4362_withlog1,partials_add4362_withlog2,partials_add4361_withlog0,partials_add4361_withlog1,partials_add4361_withlog2
[INFO] Generating assertions...
[INFO] 7 test fail, generating try/catch/fail blocks...
[INFO] 8 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_add4362:partialsnull4364_failAssert0:partials_literalMutationString4358_failAssert0:partials_literalMutationString4359_failAssert0:partials_literalMutationString4355_failAssert0:partials_literalMutationString4360_failAssert0:partials_literalMutationString4357_failAssert0:partials_literalMutationString4356_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests partials_add4362:partialsnull4364_failAssert0:partials_literalMutationString4358_failAssert0:partials_literalMutationString4359_failAssert0:partials_literalMutationString4355_failAssert0:partials_literalMutationString4360_failAssert0:partials_literalMutationString4357_failAssert0:partials_literalMutationString4356_failAssert0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partialsnull4364_failAssert0,partials_literalMutationString4360_failAssert0,partials_add4362,partials_literalMutationString4359_failAssert0,partials_literalMutationString4358_failAssert0,partials_literalMutationString4357_failAssert0,partials_literalMutationString4356_failAssert0,partials_literalMutationString4355_failAssert0
[INFO] Assertion amplification: 8 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:18:57 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:57 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:18:57 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_add4362:partialsnull4364_failAssert0:partials_literalMutationString4358_failAssert0:partials_literalMutationString4359_failAssert0:partials_literalMutationString4355_failAssert0:partials_literalMutationString4360_failAssert0:partials_literalMutationString4357_failAssert0:partials_literalMutationString4356_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests partials_add4362:partialsnull4364_failAssert0:partials_literalMutationString4358_failAssert0:partials_literalMutationString4359_failAssert0:partials_literalMutationString4355_failAssert0:partials_literalMutationString4360_failAssert0:partials_literalMutationString4357_failAssert0:partials_literalMutationString4356_failAssert0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partialsnull4364_failAssert0,partials_literalMutationString4360_failAssert0,partials_add4362,partials_literalMutationString4359_failAssert0,partials_literalMutationString4358_failAssert0,partials_literalMutationString4357_failAssert0,partials_literalMutationString4356_failAssert0,partials_literalMutationString4355_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 8 tests selected to be amplified over 8 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 164ms
  1% | ]/ 55% |=========================== ]\ 96% |================================================ ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4359_failAssert0null4503:partials_literalMutationString4358_failAssert0null4502:partials_literalMutationString4355_failAssert0null4504:partials_literalMutationString4356_failAssert0null4507:partials_literalMutationString4360_failAssert0null4505:partials_literalMutationString4357_failAssert0null4506:partials_add4362null4500:partials_add4362null4501:partials_literalMutationString4359_failAssert0_literalMutationString4407:partials_literalMutationString4359_failAssert0_literalMutationString4409:partials_literalMutationString4359_failAssert0_literalMutationString4411:partials_literalMutationString4358_failAssert0_literalMutationString4401:partials_literalMutationString4358_failAssert0_literalMutationString4405:partials_literalMutationString4358_failAssert0_literalMutationString4400:partials_literalMutationString4355_failAssert0_literalMutationString4414:partials_literalMutationString4355_failAssert0_literalMutationString4413:partials_literalMutationString4355_failAssert0_literalMutationString4412:partials_literalMutationString4356_failAssert0_literalMutationString4432:partials_literalMutationString4356_failAssert0_literalMutationString4427:partials_literalMutationString4356_failAssert0_literalMutationString4429:partials_literalMutationString4360_failAssert0_literalMutationString4417:partials_literalMutationString4360_failAssert0_literalMutationString4415:partials_literalMutationString4360_failAssert0_literalMutationString4419:partials_literalMutationString4357_failAssert0_literalMutationString4421:partials_literalMutationString4357_failAssert0_literalMutationString4426:partials_literalMutationString4357_failAssert0_literalMutationString4423:partials_add4362_literalMutationString4394:partials_add4362_literalMutationString4398:partials_add4362_literalMutationString4393:partialsnull4364_failAssert0_add4480:partialsnull4364_failAssert0_add4478:partialsnull4364_failAssert0_add4479:partials_literalMutationString4359_failAssert0_add4486:partials_literalMutationString4359_failAssert0_add4485:partials_literalMutationString4359_failAssert0_add4484:partials_literalMutationString4358_failAssert0_add4483:partials_literalMutationString4358_failAssert0_add4481:partials_literalMutationString4358_failAssert0_add4482:partials_literalMutationString4355_failAssert0_add4487:partials_literalMutationString4355_failAssert0_add4489:partials_literalMutationString4355_failAssert0_add4488:partials_literalMutationString4356_failAssert0_add4498:partials_literalMutationString4356_failAssert0_add4497:partials_literalMutationString4356_failAssert0_add4496:partials_literalMutationString4360_failAssert0_add4492:partials_literalMutationString4360_failAssert0_add4490:partials_literalMutationString4360_failAssert0_add4491:partials_literalMutationString4357_failAssert0_add4494:partials_literalMutationString4357_failAssert0_add4493:partials_literalMutationString4357_failAssert0_add4495:partials_add4362_add4455:partials_add4362_add4471:partials_add4362_add4464:partials_add4362_remove4499:partials_literalMutationString4359_failAssert0_literalMutationString4406:partials_literalMutationString4359_failAssert0_literalMutationString4408:partials_literalMutationString4359_failAssert0_literalMutationString4410:partials_literalMutationString4358_failAssert0_literalMutationString4404:partials_literalMutationString4358_failAssert0_literalMutationString4402:partials_literalMutationString4358_failAssert0_literalMutationString4403:partials_literalMutationString4356_failAssert0_literalMutationString4428:partials_literalMutationString4356_failAssert0_literalMutationString4430:partials_literalMutationString4356_failAssert0_literalMutationString4431:partials_literalMutationString4360_failAssert0_literalMutationString4416:partials_literalMutationString4360_failAssert0_literalMutationString4418:partials_literalMutationString4360_failAssert0_literalMutationString4420:partials_literalMutationString4357_failAssert0_literalMutationString4425:partials_literalMutationString4357_failAssert0_literalMutationString4424:partials_literalMutationString4357_failAssert0_literalMutationString4422:partials_add4362_literalMutationString4395:partials_add4362_literalMutationString4391:partials_add4362_literalMutationString4389:partials_add4362_add4462:partials_add4362_add4474:partials_add4362_add4461:partials_add4362_add4434:partials_add4362_add4454:partials_add4362_add4444:partials_add4362_add4448:partials_add4362_add4441:partials_add4362_add4446:partials_add4362_add4460:partials_add4362_add4463:partials_add4362_add4458:partials_add4362_add4472:partials_add4362_add4476:partials_add4362_add4451:partials_add4362_add4440:partials_add4362_add4439:partials_add4362_add4449:partials_add4362_add4436:partials_add4362_add4467:partials_add4362_add4443:partials_add4362_add4435:partials_add4362_add4450:partials_add4362_literalMutationString4397:partials_add4362_literalMutationString4396:partials_add4362_add4438:partials_add4362_add4475:partials_add4362_add4468 
Parsing --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4359_failAssert0null4503:partials_literalMutationString4358_failAssert0null4502:partials_literalMutationString4355_failAssert0null4504:partials_literalMutationString4356_failAssert0null4507:partials_literalMutationString4360_failAssert0null4505:partials_literalMutationString4357_failAssert0null4506:partials_add4362null4500:partials_add4362null4501:partials_literalMutationString4359_failAssert0_literalMutationString4407:partials_literalMutationString4359_failAssert0_literalMutationString4409:partials_literalMutationString4359_failAssert0_literalMutationString4411:partials_literalMutationString4358_failAssert0_literalMutationString4401:partials_literalMutationString4358_failAssert0_literalMutationString4405:partials_literalMutationString4358_failAssert0_literalMutationString4400:partials_literalMutationString4355_failAssert0_literalMutationString4414:partials_literalMutationString4355_failAssert0_literalMutationString4413:partials_literalMutationString4355_failAssert0_literalMutationString4412:partials_literalMutationString4356_failAssert0_literalMutationString4432:partials_literalMutationString4356_failAssert0_literalMutationString4427:partials_literalMutationString4356_failAssert0_literalMutationString4429:partials_literalMutationString4360_failAssert0_literalMutationString4417:partials_literalMutationString4360_failAssert0_literalMutationString4415:partials_literalMutationString4360_failAssert0_literalMutationString4419:partials_literalMutationString4357_failAssert0_literalMutationString4421:partials_literalMutationString4357_failAssert0_literalMutationString4426:partials_literalMutationString4357_failAssert0_literalMutationString4423:partials_add4362_literalMutationString4394:partials_add4362_literalMutationString4398:partials_add4362_literalMutationString4393:partialsnull4364_failAssert0_add4480:partialsnull4364_failAssert0_add4478:partialsnull4364_failAssert0_add4479:partials_literalMutationString4359_failAssert0_add4486:partials_literalMutationString4359_failAssert0_add4485:partials_literalMutationString4359_failAssert0_add4484:partials_literalMutationString4358_failAssert0_add4483:partials_literalMutationString4358_failAssert0_add4481:partials_literalMutationString4358_failAssert0_add4482:partials_literalMutationString4355_failAssert0_add4487:partials_literalMutationString4355_failAssert0_add4489:partials_literalMutationString4355_failAssert0_add4488:partials_literalMutationString4356_failAssert0_add4498:partials_literalMutationString4356_failAssert0_add4497:partials_literalMutationString4356_failAssert0_add4496:partials_literalMutationString4360_failAssert0_add4492:partials_literalMutationString4360_failAssert0_add4490:partials_literalMutationString4360_failAssert0_add4491:partials_literalMutationString4357_failAssert0_add4494:partials_literalMutationString4357_failAssert0_add4493:partials_literalMutationString4357_failAssert0_add4495:partials_add4362_add4455:partials_add4362_add4471:partials_add4362_add4464:partials_add4362_remove4499:partials_literalMutationString4359_failAssert0_literalMutationString4406:partials_literalMutationString4359_failAssert0_literalMutationString4408:partials_literalMutationString4359_failAssert0_literalMutationString4410:partials_literalMutationString4358_failAssert0_literalMutationString4404:partials_literalMutationString4358_failAssert0_literalMutationString4402:partials_literalMutationString4358_failAssert0_literalMutationString4403:partials_literalMutationString4356_failAssert0_literalMutationString4428:partials_literalMutationString4356_failAssert0_literalMutationString4430:partials_literalMutationString4356_failAssert0_literalMutationString4431:partials_literalMutationString4360_failAssert0_literalMutationString4416:partials_literalMutationString4360_failAssert0_literalMutationString4418:partials_literalMutationString4360_failAssert0_literalMutationString4420:partials_literalMutationString4357_failAssert0_literalMutationString4425:partials_literalMutationString4357_failAssert0_literalMutationString4424:partials_literalMutationString4357_failAssert0_literalMutationString4422:partials_add4362_literalMutationString4395:partials_add4362_literalMutationString4391:partials_add4362_literalMutationString4389:partials_add4362_add4462:partials_add4362_add4474:partials_add4362_add4461:partials_add4362_add4434:partials_add4362_add4454:partials_add4362_add4444:partials_add4362_add4448:partials_add4362_add4441:partials_add4362_add4446:partials_add4362_add4460:partials_add4362_add4463:partials_add4362_add4458:partials_add4362_add4472:partials_add4362_add4476:partials_add4362_add4451:partials_add4362_add4440:partials_add4362_add4439:partials_add4362_add4449:partials_add4362_add4436:partials_add4362_add4467:partials_add4362_add4443:partials_add4362_add4435:partials_add4362_add4450:partials_add4362_literalMutationString4397:partials_add4362_literalMutationString4396:partials_add4362_add4438:partials_add4362_add4475:partials_add4362_add4468
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_add4362_literalMutationString4389,partials_add4362_remove4499,partials_add4362_add4434,partials_add4362_add4435,partials_add4362_add4436,partials_add4362_add4438,partials_add4362_add4439,partials_add4362_add4440,partials_add4362_add4441,partials_add4362_add4443,partials_add4362_add4444,partials_add4362_add4446,partials_add4362_add4448,partials_add4362_add4449,partials_add4362_add4450,partials_add4362_add4451,partials_add4362_add4454,partials_add4362_add4455,partials_add4362_add4458,partials_add4362_add4460,partials_add4362_add4461,partials_add4362_add4462,partials_add4362_add4463,partials_add4362_add4464,partials_add4362_add4467,partials_add4362_add4468,partials_add4362_add4471,partials_add4362_add4472,partials_add4362_add4474,partials_add4362_add4475,partials_add4362_add4476,partials_literalMutationString4358_failAssert0_literalMutationString4400(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4401(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4402(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4403(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4404(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4405(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4391(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4393(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4394(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4395(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4396(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4397(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4398(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4415(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4416(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4417(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4418(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4419(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4420(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4421(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4422(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4423(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4424(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4425(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4426(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_add4487(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_add4488(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_add4489(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4496(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4498(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4493(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4494(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4495(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_add4481(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_add4482(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_add4483(com.github.mustachejava.SpecTest): null,partialsnull4364_failAssert0_add4478(com.github.mustachejava.SpecTest): null,partialsnull4364_failAssert0_add4479(com.github.mustachejava.SpecTest): null,partialsnull4364_failAssert0_add4480(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_add4484(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_add4485(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_add4486(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4427(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4428(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4429(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4430(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4431(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4432(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0null4504(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_add4490(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_add4491(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_add4492(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0null4507(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0null4506(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_literalMutationString4412(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_literalMutationString4413(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_literalMutationString4414(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0null4502(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0null4503(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0null4505(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_literalMutationString4406(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_literalMutationString4407(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_literalMutationString4408(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_literalMutationString4409(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_literalMutationString4410(com.github.mustachejava.SpecTest): null,partials_literalMutationString4359_failAssert0_literalMutationString4411(com.github.mustachejava.SpecTest): null,partials_add4362null4500(com.github.mustachejava.SpecTest): null,partials_add4362null4501(com.github.mustachejava.SpecTest): null
[INFO] 31 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |= ]/  6% |=== ]-  9% |==== ]\ 12% |====== ]| 16% |======== ]/ 19% |========= ]- 22% |=========== ]\ 25% |============ ]| 29% |============== ]/ 32% |================ ]- 35% |================= ]\ 38% |=================== ]| 41% |==================== ]/ 45% |====================== ]- 48% |======================== ]\ 51% |========================= ]| 54% |=========================== ]/ 58% |============================= ]- 61% |============================== ]\ 64% |================================ ]| 67% |================================= ]/ 70% |=================================== ]- 74% |===================================== ]\ 77% |====================================== ]| 80% |======================================== ]/ 83% |========================================= ]- 87% |=========================================== ]\ 90% |============================================= ]| 93% |============================================== ]/ 96% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (93)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_add4362_add4455_withlog0:partials_add4362_add4471_withlog0:partials_add4362_add4464_withlog0:partials_add4362_remove4499_withlog0:partials_add4362_literalMutationString4389_withlog0:partials_add4362_add4462_withlog0:partials_add4362_add4474_withlog0:partials_add4362_add4461_withlog0:partials_add4362_add4434_withlog0:partials_add4362_add4454_withlog0:partials_add4362_add4444_withlog0:partials_add4362_add4448_withlog0:partials_add4362_add4441_withlog0:partials_add4362_add4446_withlog0:partials_add4362_add4460_withlog0:partials_add4362_add4463_withlog0:partials_add4362_add4458_withlog0:partials_add4362_add4472_withlog0:partials_add4362_add4476_withlog0:partials_add4362_add4451_withlog0:partials_add4362_add4440_withlog0:partials_add4362_add4439_withlog0:partials_add4362_add4449_withlog0:partials_add4362_add4436_withlog0:partials_add4362_add4467_withlog0:partials_add4362_add4443_withlog0:partials_add4362_add4435_withlog0:partials_add4362_add4450_withlog0:partials_add4362_add4438_withlog0:partials_add4362_add4475_withlog0:partials_add4362_add4468_withlog0:partials_add4362_add4455_withlog1:partials_add4362_add4471_withlog1:partials_add4362_add4464_withlog1:partials_add4362_remove4499_withlog1:partials_add4362_literalMutationString4389_withlog1:partials_add4362_add4462_withlog1:partials_add4362_add4474_withlog1:partials_add4362_add4461_withlog1:partials_add4362_add4434_withlog1:partials_add4362_add4454_withlog1:partials_add4362_add4444_withlog1:partials_add4362_add4448_withlog1:partials_add4362_add4441_withlog1:partials_add4362_add4446_withlog1:partials_add4362_add4460_withlog1:partials_add4362_add4463_withlog1:partials_add4362_add4458_withlog1:partials_add4362_add4472_withlog1:partials_add4362_add4476_withlog1:partials_add4362_add4451_withlog1:partials_add4362_add4440_withlog1:partials_add4362_add4439_withlog1:partials_add4362_add4449_withlog1:partials_add4362_add4436_withlog1:partials_add4362_add4467_withlog1:partials_add4362_add4443_withlog1:partials_add4362_add4435_withlog1:partials_add4362_add4450_withlog1:partials_add4362_add4438_withlog1:partials_add4362_add4475_withlog1:partials_add4362_add4468_withlog1:partials_add4362_add4455_withlog2:partials_add4362_add4471_withlog2:partials_add4362_add4464_withlog2:partials_add4362_remove4499_withlog2:partials_add4362_literalMutationString4389_withlog2:partials_add4362_add4462_withlog2:partials_add4362_add4474_withlog2:partials_add4362_add4461_withlog2:partials_add4362_add4434_withlog2:partials_add4362_add4454_withlog2:partials_add4362_add4444_withlog2:partials_add4362_add4448_withlog2:partials_add4362_add4441_withlog2:partials_add4362_add4446_withlog2:partials_add4362_add4460_withlog2:partials_add4362_add4463_withlog2:partials_add4362_add4458_withlog2:partials_add4362_add4472_withlog2:partials_add4362_add4476_withlog2:partials_add4362_add4451_withlog2:partials_add4362_add4440_withlog2:partials_add4362_add4439_withlog2:partials_add4362_add4449_withlog2:partials_add4362_add4436_withlog2:partials_add4362_add4467_withlog2:partials_add4362_add4443_withlog2:partials_add4362_add4435_withlog2:partials_add4362_add4450_withlog2:partials_add4362_add4438_withlog2:partials_add4362_add4475_withlog2:partials_add4362_add4468_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests partials_add4362_add4455_withlog0:partials_add4362_add4471_withlog0:partials_add4362_add4464_withlog0:partials_add4362_remove4499_withlog0:partials_add4362_literalMutationString4389_withlog0:partials_add4362_add4462_withlog0:partials_add4362_add4474_withlog0:partials_add4362_add4461_withlog0:partials_add4362_add4434_withlog0:partials_add4362_add4454_withlog0:partials_add4362_add4444_withlog0:partials_add4362_add4448_withlog0:partials_add4362_add4441_withlog0:partials_add4362_add4446_withlog0:partials_add4362_add4460_withlog0:partials_add4362_add4463_withlog0:partials_add4362_add4458_withlog0:partials_add4362_add4472_withlog0:partials_add4362_add4476_withlog0:partials_add4362_add4451_withlog0:partials_add4362_add4440_withlog0:partials_add4362_add4439_withlog0:partials_add4362_add4449_withlog0:partials_add4362_add4436_withlog0:partials_add4362_add4467_withlog0:partials_add4362_add4443_withlog0:partials_add4362_add4435_withlog0:partials_add4362_add4450_withlog0:partials_add4362_add4438_withlog0:partials_add4362_add4475_withlog0:partials_add4362_add4468_withlog0:partials_add4362_add4455_withlog1:partials_add4362_add4471_withlog1:partials_add4362_add4464_withlog1:partials_add4362_remove4499_withlog1:partials_add4362_literalMutationString4389_withlog1:partials_add4362_add4462_withlog1:partials_add4362_add4474_withlog1:partials_add4362_add4461_withlog1:partials_add4362_add4434_withlog1:partials_add4362_add4454_withlog1:partials_add4362_add4444_withlog1:partials_add4362_add4448_withlog1:partials_add4362_add4441_withlog1:partials_add4362_add4446_withlog1:partials_add4362_add4460_withlog1:partials_add4362_add4463_withlog1:partials_add4362_add4458_withlog1:partials_add4362_add4472_withlog1:partials_add4362_add4476_withlog1:partials_add4362_add4451_withlog1:partials_add4362_add4440_withlog1:partials_add4362_add4439_withlog1:partials_add4362_add4449_withlog1:partials_add4362_add4436_withlog1:partials_add4362_add4467_withlog1:partials_add4362_add4443_withlog1:partials_add4362_add4435_withlog1:partials_add4362_add4450_withlog1:partials_add4362_add4438_withlog1:partials_add4362_add4475_withlog1:partials_add4362_add4468_withlog1:partials_add4362_add4455_withlog2:partials_add4362_add4471_withlog2:partials_add4362_add4464_withlog2:partials_add4362_remove4499_withlog2:partials_add4362_literalMutationString4389_withlog2:partials_add4362_add4462_withlog2:partials_add4362_add4474_withlog2:partials_add4362_add4461_withlog2:partials_add4362_add4434_withlog2:partials_add4362_add4454_withlog2:partials_add4362_add4444_withlog2:partials_add4362_add4448_withlog2:partials_add4362_add4441_withlog2:partials_add4362_add4446_withlog2:partials_add4362_add4460_withlog2:partials_add4362_add4463_withlog2:partials_add4362_add4458_withlog2:partials_add4362_add4472_withlog2:partials_add4362_add4476_withlog2:partials_add4362_add4451_withlog2:partials_add4362_add4440_withlog2:partials_add4362_add4439_withlog2:partials_add4362_add4449_withlog2:partials_add4362_add4436_withlog2:partials_add4362_add4467_withlog2:partials_add4362_add4443_withlog2:partials_add4362_add4435_withlog2:partials_add4362_add4450_withlog2:partials_add4362_add4438_withlog2:partials_add4362_add4475_withlog2:partials_add4362_add4468_withlog2
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
Running Basic Behavior - The greater-than operator should expand to the named partial.: success!
Running Failed Lookup - The empty string should be used when the named partial is not found.: success!
Running Context - The greater-than operator should operate within the current context.: success!
Running Recursion - The greater-than operator should properly recurse.: success!
Running Surrounding Whitespace - The greater-than operator should not alter surrounding whitespace.: success!
Running Inline Indentation - Whitespace should be left untouched.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success, whitespace differences.
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Standalone Indentation - Each line of the partial should be indented before rendering.: success, whitespace differences.
Running Padding Whitespace - Superfluous in-tag whitespace should be ignored.: success!
Success: 11 Whitespace: 4 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_add4362_add4441_withlog0,partials_add4362_add4441_withlog1,partials_add4362_add4441_withlog2,partials_add4362_add4464_withlog0,partials_add4362_add4464_withlog1,partials_add4362_add4464_withlog2,partials_add4362_add4440_withlog0,partials_add4362_add4440_withlog1,partials_add4362_add4440_withlog2,partials_add4362_add4439_withlog0,partials_add4362_add4439_withlog1,partials_add4362_add4439_withlog2,partials_add4362_add4463_withlog0,partials_add4362_add4463_withlog1,partials_add4362_add4463_withlog2,partials_add4362_add4438_withlog0,partials_add4362_add4438_withlog1,partials_add4362_add4438_withlog2,partials_add4362_add4462_withlog0,partials_add4362_add4462_withlog1,partials_add4362_add4462_withlog2,partials_add4362_add4461_withlog0,partials_add4362_add4461_withlog1,partials_add4362_add4461_withlog2,partials_add4362_add4436_withlog0,partials_add4362_add4436_withlog1,partials_add4362_add4436_withlog2,partials_add4362_add4460_withlog0,partials_add4362_add4460_withlog1,partials_add4362_add4460_withlog2,partials_add4362_add4435_withlog0,partials_add4362_add4435_withlog1,partials_add4362_add4435_withlog2,partials_add4362_add4458_withlog0,partials_add4362_add4458_withlog1,partials_add4362_add4458_withlog2,partials_add4362_add4434_withlog0,partials_add4362_add4434_withlog1,partials_add4362_add4434_withlog2,partials_add4362_add4455_withlog0,partials_add4362_add4455_withlog1,partials_add4362_add4455_withlog2,partials_add4362_literalMutationString4389_withlog0,partials_add4362_literalMutationString4389_withlog1,partials_add4362_literalMutationString4389_withlog2,partials_add4362_add4454_withlog0,partials_add4362_add4454_withlog1,partials_add4362_add4454_withlog2,partials_add4362_remove4499_withlog0,partials_add4362_remove4499_withlog1,partials_add4362_remove4499_withlog2,partials_add4362_add4476_withlog0,partials_add4362_add4476_withlog1,partials_add4362_add4476_withlog2,partials_add4362_add4475_withlog0,partials_add4362_add4475_withlog1,partials_add4362_add4475_withlog2,partials_add4362_add4451_withlog0,partials_add4362_add4451_withlog1,partials_add4362_add4451_withlog2,partials_add4362_add4474_withlog0,partials_add4362_add4474_withlog1,partials_add4362_add4474_withlog2,partials_add4362_add4450_withlog0,partials_add4362_add4450_withlog1,partials_add4362_add4450_withlog2,partials_add4362_add4449_withlog0,partials_add4362_add4449_withlog1,partials_add4362_add4449_withlog2,partials_add4362_add4448_withlog0,partials_add4362_add4448_withlog1,partials_add4362_add4448_withlog2,partials_add4362_add4472_withlog0,partials_add4362_add4472_withlog1,partials_add4362_add4472_withlog2,partials_add4362_add4471_withlog0,partials_add4362_add4471_withlog1,partials_add4362_add4471_withlog2,partials_add4362_add4446_withlog0,partials_add4362_add4446_withlog1,partials_add4362_add4446_withlog2,partials_add4362_add4468_withlog0,partials_add4362_add4468_withlog1,partials_add4362_add4468_withlog2,partials_add4362_add4444_withlog0,partials_add4362_add4444_withlog1,partials_add4362_add4444_withlog2,partials_add4362_add4467_withlog0,partials_add4362_add4467_withlog1,partials_add4362_add4467_withlog2,partials_add4362_add4443_withlog0,partials_add4362_add4443_withlog1,partials_add4362_add4443_withlog2
[INFO] Generating assertions...
[INFO] 69 test fail, generating try/catch/fail blocks...
[INFO] 69 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4359_failAssert0null4503_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0:partials_literalMutationString4356_failAssert0null4507_failAssert0:partials_literalMutationString4360_failAssert0null4505_failAssert0:partials_literalMutationString4357_failAssert0null4506_failAssert0:partials_add4362null4500_failAssert0:partials_add4362null4501_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4407_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4409_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4411_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4401_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4400_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4414_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4427_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4429_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4417_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4415_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4419_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0:partials_add4362_literalMutationString4394_failAssert0:partials_add4362_literalMutationString4398_failAssert0:partials_add4362_literalMutationString4393_failAssert0:partialsnull4364_failAssert0_add4480_failAssert0:partialsnull4364_failAssert0_add4478_failAssert0:partialsnull4364_failAssert0_add4479_failAssert0:partials_literalMutationString4359_failAssert0_add4486_failAssert0:partials_literalMutationString4359_failAssert0_add4485_failAssert0:partials_literalMutationString4359_failAssert0_add4484_failAssert0:partials_literalMutationString4358_failAssert0_add4483_failAssert0:partials_literalMutationString4358_failAssert0_add4481_failAssert0:partials_literalMutationString4358_failAssert0_add4482_failAssert0:partials_literalMutationString4355_failAssert0_add4487_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0:partials_literalMutationString4355_failAssert0_add4488_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0:partials_literalMutationString4360_failAssert0_add4492_failAssert0:partials_literalMutationString4360_failAssert0_add4490_failAssert0:partials_literalMutationString4360_failAssert0_add4491_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0:partials_literalMutationString4357_failAssert0_add4493_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4406_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4408_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4402_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4428_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4416_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4418_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0:partials_add4362_literalMutationString4395_failAssert0:partials_add4362_literalMutationString4391_failAssert0:partials_add4362_literalMutationString4397_failAssert0:partials_add4362_literalMutationString4396_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4359_failAssert0null4503_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0:partials_literalMutationString4356_failAssert0null4507_failAssert0:partials_literalMutationString4360_failAssert0null4505_failAssert0:partials_literalMutationString4357_failAssert0null4506_failAssert0:partials_add4362null4500_failAssert0:partials_add4362null4501_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4407_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4409_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4411_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4401_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4400_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4414_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4427_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4429_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4417_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4415_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4419_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0:partials_add4362_literalMutationString4394_failAssert0:partials_add4362_literalMutationString4398_failAssert0:partials_add4362_literalMutationString4393_failAssert0:partialsnull4364_failAssert0_add4480_failAssert0:partialsnull4364_failAssert0_add4478_failAssert0:partialsnull4364_failAssert0_add4479_failAssert0:partials_literalMutationString4359_failAssert0_add4486_failAssert0:partials_literalMutationString4359_failAssert0_add4485_failAssert0:partials_literalMutationString4359_failAssert0_add4484_failAssert0:partials_literalMutationString4358_failAssert0_add4483_failAssert0:partials_literalMutationString4358_failAssert0_add4481_failAssert0:partials_literalMutationString4358_failAssert0_add4482_failAssert0:partials_literalMutationString4355_failAssert0_add4487_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0:partials_literalMutationString4355_failAssert0_add4488_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0:partials_literalMutationString4360_failAssert0_add4492_failAssert0:partials_literalMutationString4360_failAssert0_add4490_failAssert0:partials_literalMutationString4360_failAssert0_add4491_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0:partials_literalMutationString4357_failAssert0_add4493_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4406_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4408_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4402_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4428_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4416_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4418_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0:partials_add4362_literalMutationString4395_failAssert0:partials_add4362_literalMutationString4391_failAssert0:partials_add4362_literalMutationString4397_failAssert0:partials_add4362_literalMutationString4396_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_literalMutationString4358_failAssert0_add4483_failAssert0,partials_add4362_literalMutationString4394_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4408_failAssert0,partials_add4362null4500_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0,partialsnull4364_failAssert0_add4478_failAssert0,partials_literalMutationString4355_failAssert0null4504_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4427_failAssert0,partials_literalMutationString4358_failAssert0_add4482_failAssert0,partials_add4362_literalMutationString4393_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4407_failAssert0,partials_literalMutationString4359_failAssert0null4503_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4414_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0,partials_literalMutationString4358_failAssert0_add4481_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4406_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4402_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0,partials_literalMutationString4355_failAssert0_add4488_failAssert0,partials_add4362_literalMutationString4391_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4401_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0,partials_literalMutationString4355_failAssert0_add4487_failAssert0,partials_literalMutationString4357_failAssert0_add4495_failAssert0,partials_literalMutationString4360_failAssert0_add4492_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0,partials_literalMutationString4359_failAssert0_add4486_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4400_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0,partials_literalMutationString4360_failAssert0_add4491_failAssert0,partials_literalMutationString4356_failAssert0null4507_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0,partials_literalMutationString4359_failAssert0_add4485_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4411_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0,partials_literalMutationString4357_failAssert0_add4493_failAssert0,partials_literalMutationString4360_failAssert0_add4490_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0,partials_literalMutationString4359_failAssert0_add4484_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4410_failAssert0,partialsnull4364_failAssert0_add4480_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4419_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0,partials_literalMutationString4358_failAssert0null4502_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4418_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0,partials_add4362_literalMutationString4398_failAssert0,partials_literalMutationString4360_failAssert0null4505_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4417_failAssert0,partials_add4362_literalMutationString4397_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4416_failAssert0,partials_add4362_literalMutationString4396_failAssert0,partials_literalMutationString4357_failAssert0null4506_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4415_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4429_failAssert0,partials_add4362_literalMutationString4395_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4409_failAssert0,partials_add4362null4501_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0,partialsnull4364_failAssert0_add4479_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4428_failAssert0
[INFO] Assertion amplification: 69 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:02 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:02 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:02 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4359_failAssert0null4503_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0:partials_literalMutationString4356_failAssert0null4507_failAssert0:partials_literalMutationString4360_failAssert0null4505_failAssert0:partials_literalMutationString4357_failAssert0null4506_failAssert0:partials_add4362null4500_failAssert0:partials_add4362null4501_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4407_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4409_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4411_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4401_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4400_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4414_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4427_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4429_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4417_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4415_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4419_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0:partials_add4362_literalMutationString4394_failAssert0:partials_add4362_literalMutationString4398_failAssert0:partials_add4362_literalMutationString4393_failAssert0:partialsnull4364_failAssert0_add4480_failAssert0:partialsnull4364_failAssert0_add4478_failAssert0:partialsnull4364_failAssert0_add4479_failAssert0:partials_literalMutationString4359_failAssert0_add4486_failAssert0:partials_literalMutationString4359_failAssert0_add4485_failAssert0:partials_literalMutationString4359_failAssert0_add4484_failAssert0:partials_literalMutationString4358_failAssert0_add4483_failAssert0:partials_literalMutationString4358_failAssert0_add4481_failAssert0:partials_literalMutationString4358_failAssert0_add4482_failAssert0:partials_literalMutationString4355_failAssert0_add4487_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0:partials_literalMutationString4355_failAssert0_add4488_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0:partials_literalMutationString4360_failAssert0_add4492_failAssert0:partials_literalMutationString4360_failAssert0_add4490_failAssert0:partials_literalMutationString4360_failAssert0_add4491_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0:partials_literalMutationString4357_failAssert0_add4493_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4406_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4408_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4402_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4428_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4416_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4418_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0:partials_add4362_literalMutationString4395_failAssert0:partials_add4362_literalMutationString4391_failAssert0:partials_add4362_literalMutationString4397_failAssert0:partials_add4362_literalMutationString4396_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4359_failAssert0null4503_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0:partials_literalMutationString4356_failAssert0null4507_failAssert0:partials_literalMutationString4360_failAssert0null4505_failAssert0:partials_literalMutationString4357_failAssert0null4506_failAssert0:partials_add4362null4500_failAssert0:partials_add4362null4501_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4407_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4409_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4411_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4401_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4400_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4414_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4427_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4429_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4417_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4415_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4419_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0:partials_add4362_literalMutationString4394_failAssert0:partials_add4362_literalMutationString4398_failAssert0:partials_add4362_literalMutationString4393_failAssert0:partialsnull4364_failAssert0_add4480_failAssert0:partialsnull4364_failAssert0_add4478_failAssert0:partialsnull4364_failAssert0_add4479_failAssert0:partials_literalMutationString4359_failAssert0_add4486_failAssert0:partials_literalMutationString4359_failAssert0_add4485_failAssert0:partials_literalMutationString4359_failAssert0_add4484_failAssert0:partials_literalMutationString4358_failAssert0_add4483_failAssert0:partials_literalMutationString4358_failAssert0_add4481_failAssert0:partials_literalMutationString4358_failAssert0_add4482_failAssert0:partials_literalMutationString4355_failAssert0_add4487_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0:partials_literalMutationString4355_failAssert0_add4488_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0:partials_literalMutationString4360_failAssert0_add4492_failAssert0:partials_literalMutationString4360_failAssert0_add4490_failAssert0:partials_literalMutationString4360_failAssert0_add4491_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0:partials_literalMutationString4357_failAssert0_add4493_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4406_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4408_failAssert0:partials_literalMutationString4359_failAssert0_literalMutationString4410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4402_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4428_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4416_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4418_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0:partials_add4362_literalMutationString4395_failAssert0:partials_add4362_literalMutationString4391_failAssert0:partials_add4362_literalMutationString4397_failAssert0:partials_add4362_literalMutationString4396_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_literalMutationString4358_failAssert0_add4483_failAssert0,partials_add4362_literalMutationString4394_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4408_failAssert0,partials_add4362null4500_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0,partialsnull4364_failAssert0_add4478_failAssert0,partials_literalMutationString4355_failAssert0null4504_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4427_failAssert0,partials_literalMutationString4358_failAssert0_add4482_failAssert0,partials_add4362_literalMutationString4393_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4407_failAssert0,partials_literalMutationString4359_failAssert0null4503_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4414_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0,partials_literalMutationString4358_failAssert0_add4481_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4406_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4402_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0,partials_literalMutationString4355_failAssert0_add4488_failAssert0,partials_add4362_literalMutationString4391_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4401_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0,partials_literalMutationString4355_failAssert0_add4487_failAssert0,partials_literalMutationString4357_failAssert0_add4495_failAssert0,partials_literalMutationString4360_failAssert0_add4492_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0,partials_literalMutationString4359_failAssert0_add4486_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4400_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0,partials_literalMutationString4360_failAssert0_add4491_failAssert0,partials_literalMutationString4356_failAssert0null4507_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0,partials_literalMutationString4359_failAssert0_add4485_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4411_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0,partials_literalMutationString4357_failAssert0_add4493_failAssert0,partials_literalMutationString4360_failAssert0_add4490_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0,partials_literalMutationString4359_failAssert0_add4484_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4410_failAssert0,partialsnull4364_failAssert0_add4480_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4419_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0,partials_literalMutationString4358_failAssert0null4502_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4418_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0,partials_add4362_literalMutationString4398_failAssert0,partials_literalMutationString4360_failAssert0null4505_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4417_failAssert0,partials_add4362_literalMutationString4397_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4416_failAssert0,partials_add4362_literalMutationString4396_failAssert0,partials_literalMutationString4357_failAssert0null4506_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4415_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4429_failAssert0,partials_add4362_literalMutationString4395_failAssert0,partials_literalMutationString4359_failAssert0_literalMutationString4409_failAssert0,partials_add4362null4501_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0,partialsnull4364_failAssert0_add4479_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4428_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 69 tests selected to be amplified over 69 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 900ms
  1% | ]/ 72% |==================================== ]| 99% |================================================= ]\[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481:partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479:partials_add4362null4500_failAssert0null5411:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455:partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429:partials_add4362null4501_failAssert0null5412:partials_add4362_literalMutationString4398_failAssert0null5434:partials_add4362_literalMutationString4396_failAssert0null5488:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472:partials_add4362_literalMutationString4397_failAssert0null5486:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112:partials_add4362null4500_failAssert0_literalMutationString4744:partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975:partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840:partials_add4362null4501_failAssert0_literalMutationString4750:partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864:partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074:partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775:partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393:partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387:partials_add4362null4500_failAssert0_add5194:partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321:partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248:partials_add4362null4501_failAssert0_add5197:partials_add4362_literalMutationString4398_failAssert0_add5259:partials_add4362_literalMutationString4396_failAssert0_add5410:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367:partials_add4362_literalMutationString4397_failAssert0_add5406:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214:partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456:partials_add4362_literalMutationString4398_failAssert0null5433:partials_add4362_literalMutationString4396_failAssert0null5489:partials_add4362_literalMutationString4397_failAssert0null5487:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463:partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394:partials_add4362_literalMutationString4398_failAssert0_add5258:partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144 
Parsing --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481:partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479:partials_add4362null4500_failAssert0null5411:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455:partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429:partials_add4362null4501_failAssert0null5412:partials_add4362_literalMutationString4398_failAssert0null5434:partials_add4362_literalMutationString4396_failAssert0null5488:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472:partials_add4362_literalMutationString4397_failAssert0null5486:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112:partials_add4362null4500_failAssert0_literalMutationString4744:partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975:partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840:partials_add4362null4501_failAssert0_literalMutationString4750:partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864:partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074:partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775:partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393:partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387:partials_add4362null4500_failAssert0_add5194:partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321:partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248:partials_add4362null4501_failAssert0_add5197:partials_add4362_literalMutationString4398_failAssert0_add5259:partials_add4362_literalMutationString4396_failAssert0_add5410:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367:partials_add4362_literalMutationString4397_failAssert0_add5406:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214:partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456:partials_add4362_literalMutationString4398_failAssert0null5433:partials_add4362_literalMutationString4396_failAssert0null5489:partials_add4362_literalMutationString4397_failAssert0null5487:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463:partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394:partials_add4362_literalMutationString4398_failAssert0_add5258:partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972(com.github.mustachejava.SpecTest): null,partials_add4362null4500_failAssert0_add5194(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4396_failAssert0null5488(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4396_failAssert0null5489(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247(com.github.mustachejava.SpecTest): null,partials_add4362null4501_failAssert0_add5197(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4397_failAssert0null5486(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4397_failAssert0null5487(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394(com.github.mustachejava.SpecTest): null,partials_add4362null4501_failAssert0_literalMutationString4750(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4398_failAssert0null5433(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4398_failAssert0null5434(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214(com.github.mustachejava.SpecTest): null,partials_add4362null4500_failAssert0null5411(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428(com.github.mustachejava.SpecTest): null,partials_add4362null4500_failAssert0_literalMutationString4744(com.github.mustachejava.SpecTest): null,partials_add4362null4501_failAssert0null5412(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144(com.github.mustachejava.SpecTest): null,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466(com.github.mustachejava.SpecTest): null,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112(com.github.mustachejava.SpecTest): null,partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4396_failAssert0_add5410(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4397_failAssert0_add5406(com.github.mustachejava.SpecTest): null,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422(com.github.mustachejava.SpecTest): null,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4398_failAssert0_add5258(com.github.mustachejava.SpecTest): null,partials_add4362_literalMutationString4398_failAssert0_add5259(com.github.mustachejava.SpecTest): null
[INFO] 100 test fail, generating try/catch/fail blocks...
[INFO] 100 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479_failAssert0:partials_add4362null4500_failAssert0null5411_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429_failAssert0:partials_add4362null4501_failAssert0null5412_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5434_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5488_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5486_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112_failAssert0:partials_add4362null4500_failAssert0_literalMutationString4744_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840_failAssert0:partials_add4362null4501_failAssert0_literalMutationString4750_failAssert0:partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864_failAssert0:partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074_failAssert0:partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387_failAssert0:partials_add4362null4500_failAssert0_add5194_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248_failAssert0:partials_add4362null4501_failAssert0_add5197_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5259_failAssert0:partials_add4362_literalMutationString4396_failAssert0_add5410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367_failAssert0:partials_add4362_literalMutationString4397_failAssert0_add5406_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5433_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5489_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5487_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5258_failAssert0:partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479_failAssert0:partials_add4362null4500_failAssert0null5411_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429_failAssert0:partials_add4362null4501_failAssert0null5412_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5434_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5488_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5486_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112_failAssert0:partials_add4362null4500_failAssert0_literalMutationString4744_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840_failAssert0:partials_add4362null4501_failAssert0_literalMutationString4750_failAssert0:partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864_failAssert0:partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074_failAssert0:partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387_failAssert0:partials_add4362null4500_failAssert0_add5194_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248_failAssert0:partials_add4362null4501_failAssert0_add5197_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5259_failAssert0:partials_add4362_literalMutationString4396_failAssert0_add5410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367_failAssert0:partials_add4362_literalMutationString4397_failAssert0_add5406_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5433_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5489_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5487_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5258_failAssert0:partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420_failAssert0,partials_add4362null4501_failAssert0_add5197_failAssert0,partials_add4362null4500_failAssert0_literalMutationString4744_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120_failAssert0,partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153_failAssert0,partials_add4362_literalMutationString4398_failAssert0null5434_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118_failAssert0,partials_add4362_literalMutationString4398_failAssert0null5433_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449_failAssert0,partials_add4362_literalMutationString4396_failAssert0null5489_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106_failAssert0,partials_add4362null4500_failAssert0null5411_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383_failAssert0,partials_add4362_literalMutationString4396_failAssert0null5488_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462_failAssert0,partials_add4362_literalMutationString4396_failAssert0_add5410_failAssert0,partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961_failAssert0,partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181_failAssert0,partials_add4362null4501_failAssert0_literalMutationString4750_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372_failAssert0,partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144_failAssert0,partials_add4362_literalMutationString4398_failAssert0_add5259_failAssert0,partials_add4362_literalMutationString4397_failAssert0_add5406_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314_failAssert0,partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371_failAssert0,partials_add4362_literalMutationString4398_failAssert0_add5258_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082_failAssert0,partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172_failAssert0,partials_add4362null4501_failAssert0null5412_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321_failAssert0,partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775_failAssert0,partials_add4362null4500_failAssert0_add5194_failAssert0,partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125_failAssert0,partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091_failAssert0,partials_add4362_literalMutationString4397_failAssert0null5487_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430_failAssert0,partials_add4362_literalMutationString4397_failAssert0null5486_failAssert0
[INFO] Assertion amplification: 100 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:07 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:07 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:07 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479_failAssert0:partials_add4362null4500_failAssert0null5411_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429_failAssert0:partials_add4362null4501_failAssert0null5412_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5434_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5488_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5486_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112_failAssert0:partials_add4362null4500_failAssert0_literalMutationString4744_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840_failAssert0:partials_add4362null4501_failAssert0_literalMutationString4750_failAssert0:partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864_failAssert0:partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074_failAssert0:partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387_failAssert0:partials_add4362null4500_failAssert0_add5194_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248_failAssert0:partials_add4362null4501_failAssert0_add5197_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5259_failAssert0:partials_add4362_literalMutationString4396_failAssert0_add5410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367_failAssert0:partials_add4362_literalMutationString4397_failAssert0_add5406_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5433_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5489_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5487_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5258_failAssert0:partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479_failAssert0:partials_add4362null4500_failAssert0null5411_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429_failAssert0:partials_add4362null4501_failAssert0null5412_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5434_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5488_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5486_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112_failAssert0:partials_add4362null4500_failAssert0_literalMutationString4744_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840_failAssert0:partials_add4362null4501_failAssert0_literalMutationString4750_failAssert0:partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864_failAssert0:partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074_failAssert0:partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387_failAssert0:partials_add4362null4500_failAssert0_add5194_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321_failAssert0:partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248_failAssert0:partials_add4362null4501_failAssert0_add5197_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5259_failAssert0:partials_add4362_literalMutationString4396_failAssert0_add5410_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367_failAssert0:partials_add4362_literalMutationString4397_failAssert0_add5406_failAssert0:partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454_failAssert0:partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456_failAssert0:partials_add4362_literalMutationString4398_failAssert0null5433_failAssert0:partials_add4362_literalMutationString4396_failAssert0null5489_failAssert0:partials_add4362_literalMutationString4397_failAssert0null5487_failAssert0:partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463_failAssert0:partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421_failAssert0:partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120_failAssert0:partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375_failAssert0:partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371_failAssert0:partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320_failAssert0:partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247_failAssert0:partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383_failAssert0:partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181_failAssert0:partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394_failAssert0:partials_add4362_literalMutationString4398_failAssert0_add5258_failAssert0:partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4834_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4413_failAssert0null5420_failAssert0,partials_add4362null4501_failAssert0_add5197_failAssert0,partials_add4362null4500_failAssert0_literalMutationString4744_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_add5390_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0null5474_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0null5417_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5120_failAssert0,partials_add4362_literalMutationString4397_failAssert0_literalMutationString5153_failAssert0,partials_add4362_literalMutationString4398_failAssert0null5434_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_literalMutationString4832_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0_add5307_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_add5387_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5118_failAssert0,partials_add4362_literalMutationString4398_failAssert0null5433_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4798_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5384_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0null5449_failAssert0,partials_add4362_literalMutationString4396_failAssert0null5489_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5320_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5106_failAssert0,partials_add4362null4500_failAssert0null5411_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4972_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0null5454_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_add5214_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5229_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_literalMutationString4797_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0null5463_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_add5383_failAssert0,partials_add4362_literalMutationString4396_failAssert0null5488_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0_literalMutationString5105_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0null5453_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5247_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4958_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_literalMutationString5060_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_literalMutationString4845_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0null5470_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0null5462_failAssert0,partials_add4362_literalMutationString4396_failAssert0_add5410_failAssert0,partials_literalMutationString4355_failAssert0null4504_failAssert0_add5182_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0_add5227_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_literalMutationString4961_failAssert0,partials_literalMutationString4355_failAssert0null4504_failAssert0_add5181_failAssert0,partials_add4362null4501_failAssert0_literalMutationString4750_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0_literalMutationString5114_failAssert0,partials_literalMutationString4355_failAssert0_literalMutationString4412_failAssert0null5421_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0_add5245_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0_add5253_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0null5475_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0_literalMutationString4956_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_literalMutationString4840_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5084_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4421_failAssert0null5428_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5372_failAssert0,partials_add4362_literalMutationString4391_failAssert0_literalMutationString5144_failAssert0,partials_add4362_literalMutationString4398_failAssert0_add5259_failAssert0,partials_add4362_literalMutationString4397_failAssert0_add5406_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0_add5314_failAssert0,partials_literalMutationString4357_failAssert0_add4495_failAssert0null5466_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0_add5339_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_add5371_failAssert0,partials_add4362_literalMutationString4398_failAssert0_add5258_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0null5456_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4430_failAssert0_literalMutationString5082_failAssert0,partials_add4362_literalMutationString4396_failAssert0_literalMutationString5172_failAssert0,partials_add4362null4501_failAssert0null5412_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0_add5321_failAssert0,partials_literalMutationString4358_failAssert0null4502_failAssert0_add5179_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_literalMutationString5074_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0null5455_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0null5472_failAssert0,partials_literalMutationString4355_failAssert0_add4489_failAssert0_literalMutationString4947_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0_add5248_failAssert0,partials_literalMutationString4360_failAssert0_literalMutationString4420_failAssert0null5478_failAssert0,partials_literalMutationString4357_failAssert0_add4494_failAssert0_literalMutationString5021_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4405_failAssert0_literalMutationString4775_failAssert0,partials_add4362null4500_failAssert0_add5194_failAssert0,partials_add4362_literalMutationString4398_failAssert0_literalMutationString4864_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_literalMutationString5125_failAssert0,partials_literalMutationString4358_failAssert0null4502_failAssert0_add5178_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4432_failAssert0null5422_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0null5481_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5092_failAssert0,partials_literalMutationString4356_failAssert0_add4496_failAssert0_literalMutationString4975_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5394_failAssert0,partials_literalMutationString4356_failAssert0_add4497_failAssert0_add5318_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4404_failAssert0_add5360_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0null5479_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5375_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4424_failAssert0null5480_failAssert0,partials_literalMutationString4358_failAssert0_literalMutationString4403_failAssert0_add5367_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_literalMutationString5091_failAssert0,partials_add4362_literalMutationString4397_failAssert0null5487_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4425_failAssert0_literalMutationString5112_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4422_failAssert0_add5393_failAssert0,partials_literalMutationString4356_failAssert0_add4498_failAssert0null5452_failAssert0,partials_literalMutationString4356_failAssert0_literalMutationString4431_failAssert0_add5374_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4426_failAssert0null5429_failAssert0,partials_literalMutationString4357_failAssert0_literalMutationString4423_failAssert0null5430_failAssert0,partials_add4362_literalMutationString4397_failAssert0null5486_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Amplification of sections, (5/6)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 19ms
  1% |================================================= ]/[INFO] 10 new tests generated
[INFO] Run tests. (10)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sectionsnull5699:sections_literalMutationString5694:sections_literalMutationString5693:sections_literalMutationString5691:sections_literalMutationString5692:sections_literalMutationString5690:sections_literalMutationString5695:sections_add5696:sections_add5697:sections_remove5698 
Parsing --class com.github.mustachejava.SpecTest --tests sectionsnull5699:sections_literalMutationString5694:sections_literalMutationString5693:sections_literalMutationString5691:sections_literalMutationString5692:sections_literalMutationString5690:sections_literalMutationString5695:sections_add5696:sections_add5697:sections_remove5698
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_remove5698,sections_add5696,sections_add5697,sectionsnull5699(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================================================= ]/ 66% |================================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5696_withlog0:sections_add5697_withlog0:sections_add5696_withlog1:sections_add5697_withlog1:sections_add5696_withlog2:sections_add5697_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5696_withlog0:sections_add5697_withlog0:sections_add5696_withlog1:sections_add5697_withlog1:sections_add5696_withlog2:sections_add5697_withlog2
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_withlog0,sections_add5697_withlog1,sections_add5697_withlog2,sections_add5696_withlog0,sections_add5696_withlog1,sections_add5696_withlog2
[INFO] Generating assertions...
[INFO] 7 test fail, generating try/catch/fail blocks...
[INFO] 8 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5697:sectionsnull5699_failAssert0:sections_literalMutationString5694_failAssert0:sections_literalMutationString5693_failAssert0:sections_literalMutationString5691_failAssert0:sections_literalMutationString5692_failAssert0:sections_literalMutationString5690_failAssert0:sections_literalMutationString5695_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5697:sectionsnull5699_failAssert0:sections_literalMutationString5694_failAssert0:sections_literalMutationString5693_failAssert0:sections_literalMutationString5691_failAssert0:sections_literalMutationString5692_failAssert0:sections_literalMutationString5690_failAssert0:sections_literalMutationString5695_failAssert0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_literalMutationString5693_failAssert0,sectionsnull5699_failAssert0,sections_literalMutationString5692_failAssert0,sections_literalMutationString5691_failAssert0,sections_literalMutationString5690_failAssert0,sections_add5697,sections_literalMutationString5695_failAssert0,sections_literalMutationString5694_failAssert0
[INFO] Assertion amplification: 8 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:10 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:10 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:10 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5697:sectionsnull5699_failAssert0:sections_literalMutationString5694_failAssert0:sections_literalMutationString5693_failAssert0:sections_literalMutationString5691_failAssert0:sections_literalMutationString5692_failAssert0:sections_literalMutationString5690_failAssert0:sections_literalMutationString5695_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5697:sectionsnull5699_failAssert0:sections_literalMutationString5694_failAssert0:sections_literalMutationString5693_failAssert0:sections_literalMutationString5691_failAssert0:sections_literalMutationString5692_failAssert0:sections_literalMutationString5690_failAssert0:sections_literalMutationString5695_failAssert0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_literalMutationString5693_failAssert0,sectionsnull5699_failAssert0,sections_literalMutationString5692_failAssert0,sections_literalMutationString5691_failAssert0,sections_literalMutationString5690_failAssert0,sections_add5697,sections_literalMutationString5695_failAssert0,sections_literalMutationString5694_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 8 tests selected to be amplified over 8 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 182ms
  1% | ]/ 55% |=========================== ]\ 96% |================================================ ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0null5838:sections_literalMutationString5691_failAssert0null5839:sections_literalMutationString5694_failAssert0null5837:sections_literalMutationString5690_failAssert0null5841:sections_add5697null5836:sections_add5697null5835:sections_literalMutationString5695_failAssert0null5842:sections_literalMutationString5692_failAssert0null5840:sections_literalMutationString5693_failAssert0_literalMutationString5746:sections_literalMutationString5693_failAssert0_literalMutationString5741:sections_literalMutationString5693_failAssert0_literalMutationString5744:sections_literalMutationString5691_failAssert0_literalMutationString5747:sections_literalMutationString5691_failAssert0_literalMutationString5748:sections_literalMutationString5691_failAssert0_literalMutationString5751:sections_literalMutationString5694_failAssert0_literalMutationString5735:sections_literalMutationString5694_failAssert0_literalMutationString5740:sections_literalMutationString5694_failAssert0_literalMutationString5739:sections_literalMutationString5690_failAssert0_literalMutationString5759:sections_literalMutationString5690_failAssert0_literalMutationString5761:sections_literalMutationString5690_failAssert0_literalMutationString5760:sections_add5697_literalMutationString5729:sections_add5697_literalMutationString5731:sections_add5697_literalMutationString5724:sections_literalMutationString5695_failAssert0_literalMutationString5766:sections_literalMutationString5695_failAssert0_literalMutationString5767:sections_literalMutationString5695_failAssert0_literalMutationString5765:sections_literalMutationString5692_failAssert0_literalMutationString5755:sections_literalMutationString5692_failAssert0_literalMutationString5754:sections_literalMutationString5692_failAssert0_literalMutationString5756:sections_literalMutationString5693_failAssert0_add5819:sections_literalMutationString5693_failAssert0_add5820:sections_literalMutationString5693_failAssert0_add5821:sections_literalMutationString5691_failAssert0_add5823:sections_literalMutationString5691_failAssert0_add5824:sections_literalMutationString5691_failAssert0_add5822:sections_literalMutationString5694_failAssert0_add5816:sections_literalMutationString5694_failAssert0_add5818:sections_literalMutationString5694_failAssert0_add5817:sections_literalMutationString5690_failAssert0_add5830:sections_literalMutationString5690_failAssert0_add5828:sections_literalMutationString5690_failAssert0_add5829:sections_add5697_add5802:sections_add5697_add5801:sections_add5697_add5778:sections_literalMutationString5695_failAssert0_add5833:sections_literalMutationString5695_failAssert0_add5832:sections_literalMutationString5695_failAssert0_add5831:sectionsnull5699_failAssert0_add5813:sectionsnull5699_failAssert0_add5814:sectionsnull5699_failAssert0_add5815:sections_literalMutationString5692_failAssert0_add5827:sections_literalMutationString5692_failAssert0_add5826:sections_literalMutationString5692_failAssert0_add5825:sections_add5697_remove5834:sections_literalMutationString5693_failAssert0_literalMutationString5745:sections_literalMutationString5693_failAssert0_literalMutationString5742:sections_literalMutationString5693_failAssert0_literalMutationString5743:sections_literalMutationString5691_failAssert0_literalMutationString5749:sections_literalMutationString5691_failAssert0_literalMutationString5752:sections_literalMutationString5691_failAssert0_literalMutationString5750:sections_literalMutationString5694_failAssert0_literalMutationString5738:sections_literalMutationString5694_failAssert0_literalMutationString5736:sections_literalMutationString5694_failAssert0_literalMutationString5737:sections_add5697_literalMutationString5725:sections_add5697_literalMutationString5723:sections_add5697_literalMutationString5734:sections_literalMutationString5695_failAssert0_literalMutationString5764:sections_literalMutationString5695_failAssert0_literalMutationString5762:sections_literalMutationString5695_failAssert0_literalMutationString5763:sections_literalMutationString5692_failAssert0_literalMutationString5758:sections_literalMutationString5692_failAssert0_literalMutationString5757:sections_literalMutationString5692_failAssert0_literalMutationString5753:sections_add5697_add5772:sections_add5697_add5791:sections_add5697_add5803:sections_add5697_add5804:sections_add5697_add5792:sections_add5697_add5788:sections_add5697_add5786:sections_add5697_add5806:sections_add5697_add5807:sections_add5697_add5784:sections_add5697_add5783:sections_add5697_add5771:sections_add5697_add5776:sections_add5697_add5810:sections_add5697_add5812:sections_add5697_add5793:sections_add5697_add5789:sections_add5697_add5777:sections_add5697_add5805:sections_add5697_add5796:sections_add5697_add5795:sections_add5697_add5774:sections_add5697_add5775:sections_add5697_literalMutationString5732:sections_add5697_literalMutationString5733:sections_add5697_add5785:sections_add5697_add5768:sections_add5697_add5797 
Parsing --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0null5838:sections_literalMutationString5691_failAssert0null5839:sections_literalMutationString5694_failAssert0null5837:sections_literalMutationString5690_failAssert0null5841:sections_add5697null5836:sections_add5697null5835:sections_literalMutationString5695_failAssert0null5842:sections_literalMutationString5692_failAssert0null5840:sections_literalMutationString5693_failAssert0_literalMutationString5746:sections_literalMutationString5693_failAssert0_literalMutationString5741:sections_literalMutationString5693_failAssert0_literalMutationString5744:sections_literalMutationString5691_failAssert0_literalMutationString5747:sections_literalMutationString5691_failAssert0_literalMutationString5748:sections_literalMutationString5691_failAssert0_literalMutationString5751:sections_literalMutationString5694_failAssert0_literalMutationString5735:sections_literalMutationString5694_failAssert0_literalMutationString5740:sections_literalMutationString5694_failAssert0_literalMutationString5739:sections_literalMutationString5690_failAssert0_literalMutationString5759:sections_literalMutationString5690_failAssert0_literalMutationString5761:sections_literalMutationString5690_failAssert0_literalMutationString5760:sections_add5697_literalMutationString5729:sections_add5697_literalMutationString5731:sections_add5697_literalMutationString5724:sections_literalMutationString5695_failAssert0_literalMutationString5766:sections_literalMutationString5695_failAssert0_literalMutationString5767:sections_literalMutationString5695_failAssert0_literalMutationString5765:sections_literalMutationString5692_failAssert0_literalMutationString5755:sections_literalMutationString5692_failAssert0_literalMutationString5754:sections_literalMutationString5692_failAssert0_literalMutationString5756:sections_literalMutationString5693_failAssert0_add5819:sections_literalMutationString5693_failAssert0_add5820:sections_literalMutationString5693_failAssert0_add5821:sections_literalMutationString5691_failAssert0_add5823:sections_literalMutationString5691_failAssert0_add5824:sections_literalMutationString5691_failAssert0_add5822:sections_literalMutationString5694_failAssert0_add5816:sections_literalMutationString5694_failAssert0_add5818:sections_literalMutationString5694_failAssert0_add5817:sections_literalMutationString5690_failAssert0_add5830:sections_literalMutationString5690_failAssert0_add5828:sections_literalMutationString5690_failAssert0_add5829:sections_add5697_add5802:sections_add5697_add5801:sections_add5697_add5778:sections_literalMutationString5695_failAssert0_add5833:sections_literalMutationString5695_failAssert0_add5832:sections_literalMutationString5695_failAssert0_add5831:sectionsnull5699_failAssert0_add5813:sectionsnull5699_failAssert0_add5814:sectionsnull5699_failAssert0_add5815:sections_literalMutationString5692_failAssert0_add5827:sections_literalMutationString5692_failAssert0_add5826:sections_literalMutationString5692_failAssert0_add5825:sections_add5697_remove5834:sections_literalMutationString5693_failAssert0_literalMutationString5745:sections_literalMutationString5693_failAssert0_literalMutationString5742:sections_literalMutationString5693_failAssert0_literalMutationString5743:sections_literalMutationString5691_failAssert0_literalMutationString5749:sections_literalMutationString5691_failAssert0_literalMutationString5752:sections_literalMutationString5691_failAssert0_literalMutationString5750:sections_literalMutationString5694_failAssert0_literalMutationString5738:sections_literalMutationString5694_failAssert0_literalMutationString5736:sections_literalMutationString5694_failAssert0_literalMutationString5737:sections_add5697_literalMutationString5725:sections_add5697_literalMutationString5723:sections_add5697_literalMutationString5734:sections_literalMutationString5695_failAssert0_literalMutationString5764:sections_literalMutationString5695_failAssert0_literalMutationString5762:sections_literalMutationString5695_failAssert0_literalMutationString5763:sections_literalMutationString5692_failAssert0_literalMutationString5758:sections_literalMutationString5692_failAssert0_literalMutationString5757:sections_literalMutationString5692_failAssert0_literalMutationString5753:sections_add5697_add5772:sections_add5697_add5791:sections_add5697_add5803:sections_add5697_add5804:sections_add5697_add5792:sections_add5697_add5788:sections_add5697_add5786:sections_add5697_add5806:sections_add5697_add5807:sections_add5697_add5784:sections_add5697_add5783:sections_add5697_add5771:sections_add5697_add5776:sections_add5697_add5810:sections_add5697_add5812:sections_add5697_add5793:sections_add5697_add5789:sections_add5697_add5777:sections_add5697_add5805:sections_add5697_add5796:sections_add5697_add5795:sections_add5697_add5774:sections_add5697_add5775:sections_add5697_literalMutationString5732:sections_add5697_literalMutationString5733:sections_add5697_add5785:sections_add5697_add5768:sections_add5697_add5797
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_add5768,sections_add5697_add5771,sections_add5697_add5772,sections_add5697_add5774,sections_add5697_add5775,sections_add5697_add5776,sections_add5697_add5777,sections_add5697_add5778,sections_add5697_add5783,sections_add5697_add5784,sections_add5697_add5785,sections_add5697_add5786,sections_add5697_add5788,sections_add5697_add5789,sections_add5697_add5791,sections_add5697_add5792,sections_add5697_add5793,sections_add5697_add5795,sections_add5697_add5796,sections_add5697_add5797,sections_add5697_add5801,sections_add5697_add5802,sections_add5697_add5803,sections_add5697_add5804,sections_add5697_add5805,sections_add5697_add5806,sections_add5697_add5807,sections_add5697_add5810,sections_add5697_add5812,sections_add5697_remove5834,sections_add5697_literalMutationString5724,sections_literalMutationString5691_failAssert0_literalMutationString5747(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_literalMutationString5748(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_literalMutationString5749(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_literalMutationString5750(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_literalMutationString5751(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_literalMutationString5752(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_add5828(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_add5829(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_add5830(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5824(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_literalMutationString5762(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_literalMutationString5763(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_literalMutationString5764(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_literalMutationString5765(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_literalMutationString5766(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_literalMutationString5767(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5825(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5826(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5827(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5820(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5821(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_literalMutationString5759(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_literalMutationString5760(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_literalMutationString5761(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_add5816(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_add5817(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_add5818(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5831(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5833(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0null5841(com.github.mustachejava.SpecTest): null,sections_add5697null5835(com.github.mustachejava.SpecTest): null,sections_add5697null5836(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5735(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5736(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5737(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5738(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5739(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5740(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0null5839(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0null5840(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5723(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5725(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5731(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5732(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5733(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5734(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0null5838(com.github.mustachejava.SpecTest): null,sectionsnull5699_failAssert0_add5813(com.github.mustachejava.SpecTest): null,sectionsnull5699_failAssert0_add5814(com.github.mustachejava.SpecTest): null,sectionsnull5699_failAssert0_add5815(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0null5837(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_literalMutationString5741(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_literalMutationString5742(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_literalMutationString5743(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_literalMutationString5744(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_literalMutationString5745(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_literalMutationString5746(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0null5842(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5753(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5754(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5755(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5756(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5757(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5758(com.github.mustachejava.SpecTest): null
[INFO] 31 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |= ]/  6% |=== ]-  9% |==== ]\ 12% |====== ]| 16% |======== ]/ 19% |========= ]- 22% |=========== ]\ 25% |============ ]| 29% |============== ]/ 32% |================ ]- 35% |================= ]\ 38% |=================== ]| 41% |==================== ]/ 45% |====================== ]- 48% |======================== ]\ 51% |========================= ]| 54% |=========================== ]/ 58% |============================= ]- 61% |============================== ]\ 64% |================================ ]| 67% |================================= ]/ 70% |=================================== ]- 74% |===================================== ]\ 77% |====================================== ]| 80% |======================================== ]/ 83% |========================================= ]- 87% |=========================================== ]\ 90% |============================================= ]| 93% |============================================== ]/ 96% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (93)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5697_literalMutationString5724_withlog0:sections_add5697_add5802_withlog0:sections_add5697_add5801_withlog0:sections_add5697_add5778_withlog0:sections_add5697_remove5834_withlog0:sections_add5697_add5772_withlog0:sections_add5697_add5791_withlog0:sections_add5697_add5803_withlog0:sections_add5697_add5804_withlog0:sections_add5697_add5792_withlog0:sections_add5697_add5788_withlog0:sections_add5697_add5786_withlog0:sections_add5697_add5806_withlog0:sections_add5697_add5807_withlog0:sections_add5697_add5784_withlog0:sections_add5697_add5783_withlog0:sections_add5697_add5771_withlog0:sections_add5697_add5776_withlog0:sections_add5697_add5810_withlog0:sections_add5697_add5812_withlog0:sections_add5697_add5793_withlog0:sections_add5697_add5789_withlog0:sections_add5697_add5777_withlog0:sections_add5697_add5805_withlog0:sections_add5697_add5796_withlog0:sections_add5697_add5795_withlog0:sections_add5697_add5774_withlog0:sections_add5697_add5775_withlog0:sections_add5697_add5785_withlog0:sections_add5697_add5768_withlog0:sections_add5697_add5797_withlog0:sections_add5697_literalMutationString5724_withlog1:sections_add5697_add5802_withlog1:sections_add5697_add5801_withlog1:sections_add5697_add5778_withlog1:sections_add5697_remove5834_withlog1:sections_add5697_add5772_withlog1:sections_add5697_add5791_withlog1:sections_add5697_add5803_withlog1:sections_add5697_add5804_withlog1:sections_add5697_add5792_withlog1:sections_add5697_add5788_withlog1:sections_add5697_add5786_withlog1:sections_add5697_add5806_withlog1:sections_add5697_add5807_withlog1:sections_add5697_add5784_withlog1:sections_add5697_add5783_withlog1:sections_add5697_add5771_withlog1:sections_add5697_add5776_withlog1:sections_add5697_add5810_withlog1:sections_add5697_add5812_withlog1:sections_add5697_add5793_withlog1:sections_add5697_add5789_withlog1:sections_add5697_add5777_withlog1:sections_add5697_add5805_withlog1:sections_add5697_add5796_withlog1:sections_add5697_add5795_withlog1:sections_add5697_add5774_withlog1:sections_add5697_add5775_withlog1:sections_add5697_add5785_withlog1:sections_add5697_add5768_withlog1:sections_add5697_add5797_withlog1:sections_add5697_literalMutationString5724_withlog2:sections_add5697_add5802_withlog2:sections_add5697_add5801_withlog2:sections_add5697_add5778_withlog2:sections_add5697_remove5834_withlog2:sections_add5697_add5772_withlog2:sections_add5697_add5791_withlog2:sections_add5697_add5803_withlog2:sections_add5697_add5804_withlog2:sections_add5697_add5792_withlog2:sections_add5697_add5788_withlog2:sections_add5697_add5786_withlog2:sections_add5697_add5806_withlog2:sections_add5697_add5807_withlog2:sections_add5697_add5784_withlog2:sections_add5697_add5783_withlog2:sections_add5697_add5771_withlog2:sections_add5697_add5776_withlog2:sections_add5697_add5810_withlog2:sections_add5697_add5812_withlog2:sections_add5697_add5793_withlog2:sections_add5697_add5789_withlog2:sections_add5697_add5777_withlog2:sections_add5697_add5805_withlog2:sections_add5697_add5796_withlog2:sections_add5697_add5795_withlog2:sections_add5697_add5774_withlog2:sections_add5697_add5775_withlog2:sections_add5697_add5785_withlog2:sections_add5697_add5768_withlog2:sections_add5697_add5797_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5697_literalMutationString5724_withlog0:sections_add5697_add5802_withlog0:sections_add5697_add5801_withlog0:sections_add5697_add5778_withlog0:sections_add5697_remove5834_withlog0:sections_add5697_add5772_withlog0:sections_add5697_add5791_withlog0:sections_add5697_add5803_withlog0:sections_add5697_add5804_withlog0:sections_add5697_add5792_withlog0:sections_add5697_add5788_withlog0:sections_add5697_add5786_withlog0:sections_add5697_add5806_withlog0:sections_add5697_add5807_withlog0:sections_add5697_add5784_withlog0:sections_add5697_add5783_withlog0:sections_add5697_add5771_withlog0:sections_add5697_add5776_withlog0:sections_add5697_add5810_withlog0:sections_add5697_add5812_withlog0:sections_add5697_add5793_withlog0:sections_add5697_add5789_withlog0:sections_add5697_add5777_withlog0:sections_add5697_add5805_withlog0:sections_add5697_add5796_withlog0:sections_add5697_add5795_withlog0:sections_add5697_add5774_withlog0:sections_add5697_add5775_withlog0:sections_add5697_add5785_withlog0:sections_add5697_add5768_withlog0:sections_add5697_add5797_withlog0:sections_add5697_literalMutationString5724_withlog1:sections_add5697_add5802_withlog1:sections_add5697_add5801_withlog1:sections_add5697_add5778_withlog1:sections_add5697_remove5834_withlog1:sections_add5697_add5772_withlog1:sections_add5697_add5791_withlog1:sections_add5697_add5803_withlog1:sections_add5697_add5804_withlog1:sections_add5697_add5792_withlog1:sections_add5697_add5788_withlog1:sections_add5697_add5786_withlog1:sections_add5697_add5806_withlog1:sections_add5697_add5807_withlog1:sections_add5697_add5784_withlog1:sections_add5697_add5783_withlog1:sections_add5697_add5771_withlog1:sections_add5697_add5776_withlog1:sections_add5697_add5810_withlog1:sections_add5697_add5812_withlog1:sections_add5697_add5793_withlog1:sections_add5697_add5789_withlog1:sections_add5697_add5777_withlog1:sections_add5697_add5805_withlog1:sections_add5697_add5796_withlog1:sections_add5697_add5795_withlog1:sections_add5697_add5774_withlog1:sections_add5697_add5775_withlog1:sections_add5697_add5785_withlog1:sections_add5697_add5768_withlog1:sections_add5697_add5797_withlog1:sections_add5697_literalMutationString5724_withlog2:sections_add5697_add5802_withlog2:sections_add5697_add5801_withlog2:sections_add5697_add5778_withlog2:sections_add5697_remove5834_withlog2:sections_add5697_add5772_withlog2:sections_add5697_add5791_withlog2:sections_add5697_add5803_withlog2:sections_add5697_add5804_withlog2:sections_add5697_add5792_withlog2:sections_add5697_add5788_withlog2:sections_add5697_add5786_withlog2:sections_add5697_add5806_withlog2:sections_add5697_add5807_withlog2:sections_add5697_add5784_withlog2:sections_add5697_add5783_withlog2:sections_add5697_add5771_withlog2:sections_add5697_add5776_withlog2:sections_add5697_add5810_withlog2:sections_add5697_add5812_withlog2:sections_add5697_add5793_withlog2:sections_add5697_add5789_withlog2:sections_add5697_add5777_withlog2:sections_add5697_add5805_withlog2:sections_add5697_add5796_withlog2:sections_add5697_add5795_withlog2:sections_add5697_add5774_withlog2:sections_add5697_add5775_withlog2:sections_add5697_add5785_withlog2:sections_add5697_add5768_withlog2:sections_add5697_add5797_withlog2
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_add5791_withlog0,sections_add5697_add5791_withlog1,sections_add5697_add5791_withlog2,sections_add5697_add5789_withlog0,sections_add5697_add5789_withlog1,sections_add5697_add5789_withlog2,sections_add5697_add5788_withlog0,sections_add5697_add5788_withlog1,sections_add5697_add5788_withlog2,sections_add5697_add5786_withlog0,sections_add5697_add5786_withlog1,sections_add5697_add5786_withlog2,sections_add5697_add5785_withlog0,sections_add5697_add5785_withlog1,sections_add5697_add5785_withlog2,sections_add5697_add5784_withlog0,sections_add5697_add5784_withlog1,sections_add5697_add5784_withlog2,sections_add5697_add5783_withlog0,sections_add5697_add5783_withlog1,sections_add5697_add5783_withlog2,sections_add5697_add5812_withlog0,sections_add5697_add5812_withlog1,sections_add5697_add5812_withlog2,sections_add5697_add5810_withlog0,sections_add5697_add5810_withlog1,sections_add5697_add5810_withlog2,sections_add5697_add5778_withlog0,sections_add5697_add5778_withlog1,sections_add5697_add5778_withlog2,sections_add5697_add5807_withlog0,sections_add5697_add5807_withlog1,sections_add5697_add5807_withlog2,sections_add5697_add5777_withlog0,sections_add5697_add5777_withlog1,sections_add5697_add5777_withlog2,sections_add5697_remove5834_withlog0,sections_add5697_remove5834_withlog1,sections_add5697_remove5834_withlog2,sections_add5697_add5806_withlog0,sections_add5697_add5806_withlog1,sections_add5697_add5806_withlog2,sections_add5697_add5776_withlog0,sections_add5697_add5776_withlog1,sections_add5697_add5776_withlog2,sections_add5697_add5805_withlog0,sections_add5697_add5805_withlog1,sections_add5697_add5805_withlog2,sections_add5697_add5775_withlog0,sections_add5697_add5775_withlog1,sections_add5697_add5775_withlog2,sections_add5697_add5804_withlog0,sections_add5697_add5804_withlog1,sections_add5697_add5804_withlog2,sections_add5697_literalMutationString5724_withlog0,sections_add5697_literalMutationString5724_withlog1,sections_add5697_literalMutationString5724_withlog2,sections_add5697_add5774_withlog0,sections_add5697_add5774_withlog1,sections_add5697_add5774_withlog2,sections_add5697_add5803_withlog0,sections_add5697_add5803_withlog1,sections_add5697_add5803_withlog2,sections_add5697_add5797_withlog0,sections_add5697_add5797_withlog1,sections_add5697_add5797_withlog2,sections_add5697_add5802_withlog0,sections_add5697_add5802_withlog1,sections_add5697_add5802_withlog2,sections_add5697_add5796_withlog0,sections_add5697_add5796_withlog1,sections_add5697_add5796_withlog2,sections_add5697_add5772_withlog0,sections_add5697_add5772_withlog1,sections_add5697_add5772_withlog2,sections_add5697_add5801_withlog0,sections_add5697_add5801_withlog1,sections_add5697_add5801_withlog2,sections_add5697_add5795_withlog0,sections_add5697_add5795_withlog1,sections_add5697_add5795_withlog2,sections_add5697_add5771_withlog0,sections_add5697_add5771_withlog1,sections_add5697_add5771_withlog2,sections_add5697_add5793_withlog0,sections_add5697_add5793_withlog1,sections_add5697_add5793_withlog2,sections_add5697_add5768_withlog0,sections_add5697_add5768_withlog1,sections_add5697_add5768_withlog2,sections_add5697_add5792_withlog0,sections_add5697_add5792_withlog1,sections_add5697_add5792_withlog2
[INFO] Generating assertions...
[INFO] 69 test fail, generating try/catch/fail blocks...
[INFO] 71 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5697_add5791:sections_add5697_add5768:sections_literalMutationString5693_failAssert0null5838_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0:sections_literalMutationString5690_failAssert0null5841_failAssert0:sections_add5697null5836_failAssert0:sections_add5697null5835_failAssert0:sections_literalMutationString5695_failAssert0null5842_failAssert0:sections_literalMutationString5692_failAssert0null5840_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5746_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5741_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5744_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5747_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5748_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5751_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5735_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5739_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5761_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5760_failAssert0:sections_add5697_literalMutationString5729_failAssert0:sections_add5697_literalMutationString5731_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5766_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5767_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5765_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0:sections_literalMutationString5693_failAssert0_add5820_failAssert0:sections_literalMutationString5693_failAssert0_add5821_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0:sections_literalMutationString5694_failAssert0_add5816_failAssert0:sections_literalMutationString5694_failAssert0_add5818_failAssert0:sections_literalMutationString5694_failAssert0_add5817_failAssert0:sections_literalMutationString5690_failAssert0_add5830_failAssert0:sections_literalMutationString5690_failAssert0_add5828_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0:sectionsnull5699_failAssert0_add5815_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5745_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5742_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5743_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5749_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5752_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5750_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5738_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5736_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5737_failAssert0:sections_add5697_literalMutationString5725_failAssert0:sections_add5697_literalMutationString5723_failAssert0:sections_add5697_literalMutationString5734_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5764_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5762_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5763_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0:sections_add5697_literalMutationString5732_failAssert0:sections_add5697_literalMutationString5733_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5697_add5791:sections_add5697_add5768:sections_literalMutationString5693_failAssert0null5838_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0:sections_literalMutationString5690_failAssert0null5841_failAssert0:sections_add5697null5836_failAssert0:sections_add5697null5835_failAssert0:sections_literalMutationString5695_failAssert0null5842_failAssert0:sections_literalMutationString5692_failAssert0null5840_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5746_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5741_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5744_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5747_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5748_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5751_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5735_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5739_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5761_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5760_failAssert0:sections_add5697_literalMutationString5729_failAssert0:sections_add5697_literalMutationString5731_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5766_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5767_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5765_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0:sections_literalMutationString5693_failAssert0_add5820_failAssert0:sections_literalMutationString5693_failAssert0_add5821_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0:sections_literalMutationString5694_failAssert0_add5816_failAssert0:sections_literalMutationString5694_failAssert0_add5818_failAssert0:sections_literalMutationString5694_failAssert0_add5817_failAssert0:sections_literalMutationString5690_failAssert0_add5830_failAssert0:sections_literalMutationString5690_failAssert0_add5828_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0:sectionsnull5699_failAssert0_add5815_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5745_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5742_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5743_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5749_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5752_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5750_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5738_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5736_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5737_failAssert0:sections_add5697_literalMutationString5725_failAssert0:sections_add5697_literalMutationString5723_failAssert0:sections_add5697_literalMutationString5734_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5764_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5762_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5763_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0:sections_add5697_literalMutationString5732_failAssert0:sections_add5697_literalMutationString5733_failAssert0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_literalMutationString5732_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5743_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5767_failAssert0,sections_literalMutationString5690_failAssert0_add5830_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5738_failAssert0,sections_add5697_literalMutationString5723_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5749_failAssert0,sections_add5697_literalMutationString5731_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5742_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5766_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5737_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5761_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5748_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5741_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5765_failAssert0,sections_literalMutationString5690_failAssert0null5841_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5736_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5760_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5747_failAssert0,sections_literalMutationString5692_failAssert0null5840_failAssert0,sections_literalMutationString5691_failAssert0null5839_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5764_failAssert0,sections_add5697_add5768,sections_add5697_add5791,sections_literalMutationString5694_failAssert0_literalMutationString5735_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0,sectionsnull5699_failAssert0_add5815_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5763_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0,sectionsnull5699_failAssert0_add5814_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5762_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0,sections_add5697null5836_failAssert0,sectionsnull5699_failAssert0_add5813_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5752_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0,sections_add5697null5835_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5751_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0,sections_literalMutationString5690_failAssert0_add5829_failAssert0,sections_literalMutationString5695_failAssert0null5842_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5750_failAssert0,sections_literalMutationString5693_failAssert0_add5821_failAssert0,sections_literalMutationString5690_failAssert0_add5828_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0,sections_literalMutationString5693_failAssert0_add5820_failAssert0,sections_add5697_literalMutationString5729_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0,sections_literalMutationString5694_failAssert0_add5818_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0,sections_literalMutationString5694_failAssert0_add5817_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5746_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0,sections_literalMutationString5694_failAssert0null5837_failAssert0,sections_literalMutationString5694_failAssert0_add5816_failAssert0,sections_add5697_literalMutationString5734_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5745_failAssert0,sections_add5697_literalMutationString5725_failAssert0,sections_add5697_literalMutationString5733_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5744_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5739_failAssert0
[INFO] Assertion amplification: 71 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:16 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:16 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:16 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5697_add5791:sections_add5697_add5768:sections_literalMutationString5693_failAssert0null5838_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0:sections_literalMutationString5690_failAssert0null5841_failAssert0:sections_add5697null5836_failAssert0:sections_add5697null5835_failAssert0:sections_literalMutationString5695_failAssert0null5842_failAssert0:sections_literalMutationString5692_failAssert0null5840_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5746_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5741_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5744_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5747_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5748_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5751_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5735_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5739_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5761_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5760_failAssert0:sections_add5697_literalMutationString5729_failAssert0:sections_add5697_literalMutationString5731_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5766_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5767_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5765_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0:sections_literalMutationString5693_failAssert0_add5820_failAssert0:sections_literalMutationString5693_failAssert0_add5821_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0:sections_literalMutationString5694_failAssert0_add5816_failAssert0:sections_literalMutationString5694_failAssert0_add5818_failAssert0:sections_literalMutationString5694_failAssert0_add5817_failAssert0:sections_literalMutationString5690_failAssert0_add5830_failAssert0:sections_literalMutationString5690_failAssert0_add5828_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0:sectionsnull5699_failAssert0_add5815_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5745_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5742_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5743_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5749_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5752_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5750_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5738_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5736_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5737_failAssert0:sections_add5697_literalMutationString5725_failAssert0:sections_add5697_literalMutationString5723_failAssert0:sections_add5697_literalMutationString5734_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5764_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5762_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5763_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0:sections_add5697_literalMutationString5732_failAssert0:sections_add5697_literalMutationString5733_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5697_add5791:sections_add5697_add5768:sections_literalMutationString5693_failAssert0null5838_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0:sections_literalMutationString5690_failAssert0null5841_failAssert0:sections_add5697null5836_failAssert0:sections_add5697null5835_failAssert0:sections_literalMutationString5695_failAssert0null5842_failAssert0:sections_literalMutationString5692_failAssert0null5840_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5746_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5741_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5744_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5747_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5748_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5751_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5735_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5739_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5761_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5760_failAssert0:sections_add5697_literalMutationString5729_failAssert0:sections_add5697_literalMutationString5731_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5766_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5767_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5765_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0:sections_literalMutationString5693_failAssert0_add5820_failAssert0:sections_literalMutationString5693_failAssert0_add5821_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0:sections_literalMutationString5694_failAssert0_add5816_failAssert0:sections_literalMutationString5694_failAssert0_add5818_failAssert0:sections_literalMutationString5694_failAssert0_add5817_failAssert0:sections_literalMutationString5690_failAssert0_add5830_failAssert0:sections_literalMutationString5690_failAssert0_add5828_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0:sectionsnull5699_failAssert0_add5815_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5745_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5742_failAssert0:sections_literalMutationString5693_failAssert0_literalMutationString5743_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5749_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5752_failAssert0:sections_literalMutationString5691_failAssert0_literalMutationString5750_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5738_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5736_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5737_failAssert0:sections_add5697_literalMutationString5725_failAssert0:sections_add5697_literalMutationString5723_failAssert0:sections_add5697_literalMutationString5734_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5764_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5762_failAssert0:sections_literalMutationString5695_failAssert0_literalMutationString5763_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0:sections_add5697_literalMutationString5732_failAssert0:sections_add5697_literalMutationString5733_failAssert0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_literalMutationString5732_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5743_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5767_failAssert0,sections_literalMutationString5690_failAssert0_add5830_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5738_failAssert0,sections_add5697_literalMutationString5723_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5749_failAssert0,sections_add5697_literalMutationString5731_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5742_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5766_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5737_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5761_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5748_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5741_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5765_failAssert0,sections_literalMutationString5690_failAssert0null5841_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5736_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5760_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5747_failAssert0,sections_literalMutationString5692_failAssert0null5840_failAssert0,sections_literalMutationString5691_failAssert0null5839_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5764_failAssert0,sections_add5697_add5768,sections_add5697_add5791,sections_literalMutationString5694_failAssert0_literalMutationString5735_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0,sectionsnull5699_failAssert0_add5815_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5763_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0,sectionsnull5699_failAssert0_add5814_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0,sections_literalMutationString5695_failAssert0_literalMutationString5762_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0,sections_add5697null5836_failAssert0,sectionsnull5699_failAssert0_add5813_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5752_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0,sections_add5697null5835_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5751_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0,sections_literalMutationString5690_failAssert0_add5829_failAssert0,sections_literalMutationString5695_failAssert0null5842_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0,sections_literalMutationString5691_failAssert0_literalMutationString5750_failAssert0,sections_literalMutationString5693_failAssert0_add5821_failAssert0,sections_literalMutationString5690_failAssert0_add5828_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0,sections_literalMutationString5693_failAssert0_add5820_failAssert0,sections_add5697_literalMutationString5729_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0,sections_literalMutationString5694_failAssert0_add5818_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0,sections_literalMutationString5694_failAssert0_add5817_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5746_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0,sections_literalMutationString5694_failAssert0null5837_failAssert0,sections_literalMutationString5694_failAssert0_add5816_failAssert0,sections_add5697_literalMutationString5734_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5745_failAssert0,sections_add5697_literalMutationString5725_failAssert0,sections_add5697_literalMutationString5733_failAssert0,sections_literalMutationString5693_failAssert0_literalMutationString5744_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5739_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 71 tests selected to be amplified over 71 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 1057ms
  1% | ]/ 67% |================================= ]\ 92% |============================================== ]|[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912:sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913:sections_add5697_add5791null6877:sections_add5697_literalMutationString5729_failAssert0null6896:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927:sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954:sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284:sections_add5697_add5791_literalMutationString6090:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346:sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511:sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158:sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380:sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743:sections_add5697_add5791_add6548:sections_add5697_literalMutationString5729_failAssert0_add6702:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778:sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774:sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857:sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644:sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684:sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800:sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808:sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865:sectionsnull5699_failAssert0_add5813_failAssert0_add6785:sectionsnull5699_failAssert0_add5814_failAssert0_add6791:sections_add5697_add5791_remove6874:sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911:sections_add5697_add5791null6878:sections_add5697_literalMutationString5729_failAssert0null6897:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282:sections_add5697_add5791_literalMutationString6079:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741:sections_add5697_add5791_add6551:sections_add5697_literalMutationString5729_failAssert0_add6701:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779:sections_add5697_add5768_remove6875:sections_add5697_add5791null6876:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935:sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748 
Parsing --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912:sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913:sections_add5697_add5791null6877:sections_add5697_literalMutationString5729_failAssert0null6896:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927:sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954:sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284:sections_add5697_add5791_literalMutationString6090:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346:sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511:sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158:sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380:sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743:sections_add5697_add5791_add6548:sections_add5697_literalMutationString5729_failAssert0_add6702:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778:sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774:sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857:sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644:sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684:sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800:sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808:sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865:sectionsnull5699_failAssert0_add5813_failAssert0_add6785:sectionsnull5699_failAssert0_add5814_failAssert0_add6791:sections_add5697_add5791_remove6874:sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911:sections_add5697_add5791null6878:sections_add5697_literalMutationString5729_failAssert0null6897:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282:sections_add5697_add5791_literalMutationString6079:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741:sections_add5697_add5791_add6551:sections_add5697_literalMutationString5729_failAssert0_add6701:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779:sections_add5697_add5768_remove6875:sections_add5697_add5791null6876:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935:sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_add5791_add6548,sections_add5697_add5791_add6551,sections_add5697_add5768_remove6875,sections_add5697_add5791_remove6874,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729_failAssert0null6896(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729_failAssert0null6897(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172(com.github.mustachejava.SpecTest): null,sections_add5697_add5791null6876(com.github.mustachejava.SpecTest): null,sections_add5697_add5791null6877(com.github.mustachejava.SpecTest): null,sections_add5697_add5791null6878(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906(com.github.mustachejava.SpecTest): null,sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720(com.github.mustachejava.SpecTest): null,sectionsnull5699_failAssert0_add5813_failAssert0_add6785(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275(com.github.mustachejava.SpecTest): null,sectionsnull5699_failAssert0_add5814_failAssert0_add6791(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913(com.github.mustachejava.SpecTest): null,sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729_failAssert0_add6701(com.github.mustachejava.SpecTest): null,sections_add5697_literalMutationString5729_failAssert0_add6702(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723(com.github.mustachejava.SpecTest): null,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857(com.github.mustachejava.SpecTest): null,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293(com.github.mustachejava.SpecTest): null,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294(com.github.mustachejava.SpecTest): null,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904(com.github.mustachejava.SpecTest): null,sections_add5697_add5791_literalMutationString6079(com.github.mustachejava.SpecTest): null,sections_add5697_add5791_literalMutationString6090(com.github.mustachejava.SpecTest): null
[INFO] 4 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 25% |============================================== ]/ 50% |============================================== ]- 75% |============================================== ]\100% |================================================== ]|
[INFO] Run instrumented tests. (12)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_add5697_add5791_add6548_withlog0:sections_add5697_add5791_remove6874_withlog0:sections_add5697_add5791_add6551_withlog0:sections_add5697_add5768_remove6875_withlog0:sections_add5697_add5791_add6548_withlog1:sections_add5697_add5791_remove6874_withlog1:sections_add5697_add5791_add6551_withlog1:sections_add5697_add5768_remove6875_withlog1:sections_add5697_add5791_add6548_withlog2:sections_add5697_add5791_remove6874_withlog2:sections_add5697_add5791_add6551_withlog2:sections_add5697_add5768_remove6875_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests sections_add5697_add5791_add6548_withlog0:sections_add5697_add5791_remove6874_withlog0:sections_add5697_add5791_add6551_withlog0:sections_add5697_add5768_remove6875_withlog0:sections_add5697_add5791_add6548_withlog1:sections_add5697_add5791_remove6874_withlog1:sections_add5697_add5791_add6551_withlog1:sections_add5697_add5768_remove6875_withlog1:sections_add5697_add5791_add6548_withlog2:sections_add5697_add5791_remove6874_withlog2:sections_add5697_add5791_add6551_withlog2:sections_add5697_add5768_remove6875_withlog2
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
Running Truthy - Truthy sections should have their contents rendered.: success!
Running Falsey - Falsey sections should have their contents omitted.: success!
Running Context - Objects and hashes should be pushed onto the context stack.: success!
Running Deeply Nested Contexts - All elements on the context stack should be accessible.: success!
Running List - Lists should be iterated; list items should visit the context stack.: success!
Running Empty List - Empty lists should behave like falsey values.: success!
Running Doubled - Multiple sections per template should be permitted.: success!
Running Nested (Truthy) - Nested truthy sections should have their contents rendered.: success!
Running Nested (Falsey) - Nested falsey sections should be omitted.: success!
Running Context Misses - Failed context lookups should be considered falsey.: success!
Running Implicit Iterator - String - Implicit iterators should directly interpolate strings.: success!
Running Implicit Iterator - Integer - Implicit iterators should cast integers to strings and interpolate.: success!
Running Implicit Iterator - Decimal - Implicit iterators should cast decimals to strings and interpolate.: success!
Running Dotted Names - Truthy - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Falsey - Dotted names should be valid for Section tags.: success!
Running Dotted Names - Broken Chains - Dotted names that cannot be resolved should be considered falsey.: success!
Running Surrounding Whitespace - Sections should not alter surrounding whitespace.: success!
Running Internal Whitespace - Sections should not alter internal whitespace.: success, whitespace differences.
Running Indented Inline Sections - Single-line sections should not alter surrounding whitespace.: success!
Running Standalone Lines - Standalone lines should be removed from the template.: success!
Running Indented Standalone Lines - Indented standalone lines should be removed from the template.: success!
Running Standalone Line Endings - "\r\n" should be considered a newline for standalone tags.: success!
Running Standalone Without Previous Line - Standalone tags should not require a newline to precede them.: success, whitespace differences.
Running Standalone Without Newline - Standalone tags should not require a newline to follow them.: success, whitespace differences.
Running Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 25 Whitespace: 3 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_add5697_add5791_add6551_withlog0,sections_add5697_add5791_add6551_withlog1,sections_add5697_add5791_add6551_withlog2,sections_add5697_add5791_add6548_withlog0,sections_add5697_add5791_add6548_withlog1,sections_add5697_add5791_add6548_withlog2,sections_add5697_add5768_remove6875_withlog0,sections_add5697_add5768_remove6875_withlog1,sections_add5697_add5768_remove6875_withlog2,sections_add5697_add5791_remove6874_withlog0,sections_add5697_add5791_remove6874_withlog1,sections_add5697_add5791_remove6874_withlog2
[INFO] Generating assertions...
[INFO] 96 test fail, generating try/catch/fail blocks...
[INFO] 96 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913_failAssert0:sections_add5697_add5791null6877_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6896_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284_failAssert0:sections_add5697_add5791_literalMutationString6090_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6702_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0_add6785_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0_add6791_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911_failAssert0:sections_add5697_add5791null6878_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6897_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282_failAssert0:sections_add5697_add5791_literalMutationString6079_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6701_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779_failAssert0:sections_add5697_add5791null6876_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913_failAssert0:sections_add5697_add5791null6877_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6896_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284_failAssert0:sections_add5697_add5791_literalMutationString6090_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6702_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0_add6785_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0_add6791_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911_failAssert0:sections_add5697_add5791null6878_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6897_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282_failAssert0:sections_add5697_add5791_literalMutationString6079_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6701_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779_failAssert0:sections_add5697_add5791null6876_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294_failAssert0,sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857_failAssert0,sections_add5697_add5791_literalMutationString6090_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230_failAssert0,sectionsnull5699_failAssert0_add5814_failAssert0_add6791_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748_failAssert0,sections_add5697_add5791null6878_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956_failAssert0,sections_add5697_add5791null6877_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275_failAssert0,sections_add5697_add5791null6876_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403_failAssert0,sections_add5697_literalMutationString5729_failAssert0_add6702_failAssert0,sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912_failAssert0,sectionsnull5699_failAssert0_add5813_failAssert0_add6785_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904_failAssert0,sections_add5697_literalMutationString5729_failAssert0_add6701_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911_failAssert0,sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925_failAssert0,sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172_failAssert0,sections_add5697_add5791_literalMutationString6079_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270_failAssert0,sections_add5697_literalMutationString5729_failAssert0null6897_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728_failAssert0,sections_add5697_literalMutationString5729_failAssert0null6896_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515_failAssert0,sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190_failAssert0
[INFO] Assertion amplification: 96 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:21 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:21 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:21 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913_failAssert0:sections_add5697_add5791null6877_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6896_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284_failAssert0:sections_add5697_add5791_literalMutationString6090_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6702_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0_add6785_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0_add6791_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911_failAssert0:sections_add5697_add5791null6878_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6897_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282_failAssert0:sections_add5697_add5791_literalMutationString6079_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6701_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779_failAssert0:sections_add5697_add5791null6876_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913_failAssert0:sections_add5697_add5791null6877_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6896_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284_failAssert0:sections_add5697_add5791_literalMutationString6090_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6702_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857_failAssert0:sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644_failAssert0:sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718_failAssert0:sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808_failAssert0:sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723_failAssert0:sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720_failAssert0:sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865_failAssert0:sectionsnull5699_failAssert0_add5813_failAssert0_add6785_failAssert0:sectionsnull5699_failAssert0_add5814_failAssert0_add6791_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911_failAssert0:sections_add5697_add5791null6878_failAssert0:sections_add5697_literalMutationString5729_failAssert0null6897_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928_failAssert0:sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930_failAssert0:sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282_failAssert0:sections_add5697_add5791_literalMutationString6079_failAssert0:sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357_failAssert0:sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739_failAssert0:sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741_failAssert0:sections_add5697_literalMutationString5729_failAssert0_add6701_failAssert0:sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779_failAssert0:sections_add5697_add5791null6876_failAssert0:sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935_failAssert0:sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293_failAssert0:sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271_failAssert0:sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638_failAssert0:sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726_failAssert0:sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0null6954_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_add6860_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6726_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0null6913_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0null6928_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_add6692_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6294_failAssert0,sections_literalMutationString5694_failAssert0null5837_failAssert0_add6644_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0null6927_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6293_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6243_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_add6857_failAssert0,sections_add5697_add5791_literalMutationString6090_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0null6903_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0_add6808_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0null6907_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0_add6774_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0_literalMutationString6364_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_literalMutationString6226_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0_add6800_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_literalMutationString6230_failAssert0,sectionsnull5699_failAssert0_add5814_failAssert0_add6791_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0null6906_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0_add6781_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0null6933_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6748_failAssert0,sections_add5697_add5791null6878_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6779_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6740_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6357_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0null6932_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6747_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0null6956_failAssert0,sections_add5697_add5791null6877_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_add6778_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_add6723_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0_literalMutationString6235_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0null6955_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0null6929_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6275_failAssert0,sections_add5697_add5791null6876_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5758_failAssert0_literalMutationString6511_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5756_failAssert0null6905_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_add6745_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0_literalMutationString6403_failAssert0,sections_add5697_literalMutationString5729_failAssert0_add6702_failAssert0,sections_add5697_literalMutationString5729_failAssert0_literalMutationString6188_failAssert0,sections_literalMutationString5695_failAssert0_add5832_failAssert0_literalMutationString6354_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0null6912_failAssert0,sectionsnull5699_failAssert0_add5813_failAssert0_add6785_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0null6904_failAssert0,sections_add5697_literalMutationString5729_failAssert0_add6701_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6349_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0null6926_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5754_failAssert0_add6720_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_literalMutationString6519_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6743_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0null6911_failAssert0,sections_literalMutationString5690_failAssert0_add5829_failAssert0null6925_failAssert0,sections_literalMutationString5691_failAssert0null5839_failAssert0_add6640_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6284_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0null6935_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0_literalMutationString6376_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5753_failAssert0_add6865_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_literalMutationString6158_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5755_failAssert0_add6718_failAssert0,sections_literalMutationString5692_failAssert0_add5826_failAssert0_literalMutationString6380_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6271_failAssert0,sections_literalMutationString5692_failAssert0_add5825_failAssert0null6934_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6639_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0_literalMutationString6172_failAssert0,sections_add5697_add5791_literalMutationString6079_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6248_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_add6741_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6729_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_literalMutationString6270_failAssert0,sections_add5697_literalMutationString5729_failAssert0null6897_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0_literalMutationString6289_failAssert0,sections_literalMutationString5691_failAssert0_add5824_failAssert0_literalMutationString6282_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0_add6797_failAssert0,sections_literalMutationString5695_failAssert0_add5833_failAssert0_literalMutationString6346_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_literalMutationString6239_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6638_failAssert0,sections_literalMutationString5691_failAssert0_add5823_failAssert0_add6739_failAssert0,sections_literalMutationString5693_failAssert0_add5819_failAssert0_add6728_failAssert0,sections_add5697_literalMutationString5729_failAssert0null6896_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0_add6684_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0null6915_failAssert0,sections_literalMutationString5693_failAssert0null5838_failAssert0_add6637_failAssert0,sections_literalMutationString5692_failAssert0_add5827_failAssert0null6931_failAssert0,sections_literalMutationString5695_failAssert0_add5831_failAssert0null6930_failAssert0,sections_literalMutationString5690_failAssert0_literalMutationString5759_failAssert0null6893_failAssert0,sections_literalMutationString5691_failAssert0_add5822_failAssert0null6914_failAssert0,sections_literalMutationString5694_failAssert0_literalMutationString5740_failAssert0null6891_failAssert0,sections_literalMutationString5692_failAssert0_literalMutationString5757_failAssert0_literalMutationString6515_failAssert0,sections_add5697_literalMutationString5729_failAssert0_literalMutationString6190_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Amplification of interpolations, (6/6)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 19ms
  1% | ]/[INFO] 10 new tests generated
[INFO] Run tests. (10)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolationsnull7174:interpolations_literalMutationString7170:interpolations_literalMutationString7167:interpolations_literalMutationString7168:interpolations_literalMutationString7166:interpolations_literalMutationString7169:interpolations_literalMutationString7165:interpolations_add7171:interpolations_add7172:interpolations_remove7173 
Parsing --class com.github.mustachejava.SpecTest --tests interpolationsnull7174:interpolations_literalMutationString7170:interpolations_literalMutationString7167:interpolations_literalMutationString7168:interpolations_literalMutationString7166:interpolations_literalMutationString7169:interpolations_literalMutationString7165:interpolations_add7171:interpolations_add7172:interpolations_remove7173
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_remove7173,interpolations_add7171,interpolations_add7172,interpolationsnull7174(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170(com.github.mustachejava.SpecTest): null
[INFO] 3 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 33% |================ ]/ 66% |================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (6)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7171_withlog0:interpolations_add7172_withlog0:interpolations_add7171_withlog1:interpolations_add7172_withlog1:interpolations_add7171_withlog2:interpolations_add7172_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7171_withlog0:interpolations_add7172_withlog0:interpolations_add7171_withlog1:interpolations_add7172_withlog1:interpolations_add7171_withlog2:interpolations_add7172_withlog2
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_add7172_withlog0,interpolations_add7172_withlog1,interpolations_add7172_withlog2,interpolations_add7171_withlog0,interpolations_add7171_withlog1,interpolations_add7171_withlog2
[INFO] Generating assertions...
[INFO] 7 test fail, generating try/catch/fail blocks...
[INFO] 8 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7172:interpolationsnull7174_failAssert0:interpolations_literalMutationString7170_failAssert0:interpolations_literalMutationString7167_failAssert0:interpolations_literalMutationString7168_failAssert0:interpolations_literalMutationString7166_failAssert0:interpolations_literalMutationString7169_failAssert0:interpolations_literalMutationString7165_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7172:interpolationsnull7174_failAssert0:interpolations_literalMutationString7170_failAssert0:interpolations_literalMutationString7167_failAssert0:interpolations_literalMutationString7168_failAssert0:interpolations_literalMutationString7166_failAssert0:interpolations_literalMutationString7169_failAssert0:interpolations_literalMutationString7165_failAssert0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_literalMutationString7169_failAssert0,interpolations_literalMutationString7168_failAssert0,interpolations_literalMutationString7167_failAssert0,interpolations_literalMutationString7166_failAssert0,interpolations_literalMutationString7165_failAssert0,interpolations_literalMutationString7170_failAssert0,interpolationsnull7174_failAssert0,interpolations_add7172
[INFO] Assertion amplification: 8 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:24 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:24 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:25 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7172:interpolationsnull7174_failAssert0:interpolations_literalMutationString7170_failAssert0:interpolations_literalMutationString7167_failAssert0:interpolations_literalMutationString7168_failAssert0:interpolations_literalMutationString7166_failAssert0:interpolations_literalMutationString7169_failAssert0:interpolations_literalMutationString7165_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7172:interpolationsnull7174_failAssert0:interpolations_literalMutationString7170_failAssert0:interpolations_literalMutationString7167_failAssert0:interpolations_literalMutationString7168_failAssert0:interpolations_literalMutationString7166_failAssert0:interpolations_literalMutationString7169_failAssert0:interpolations_literalMutationString7165_failAssert0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_literalMutationString7169_failAssert0,interpolations_literalMutationString7168_failAssert0,interpolations_literalMutationString7167_failAssert0,interpolations_literalMutationString7166_failAssert0,interpolations_literalMutationString7165_failAssert0,interpolations_literalMutationString7170_failAssert0,interpolationsnull7174_failAssert0,interpolations_add7172
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 8 tests selected to be amplified over 8 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 167ms
  1% | ]/ 55% |=========================== ]\ 96% |================================================ ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7167_failAssert0null7313:interpolations_literalMutationString7170_failAssert0null7312:interpolations_literalMutationString7168_failAssert0null7314:interpolations_add7172null7311:interpolations_add7172null7310:interpolations_literalMutationString7169_failAssert0null7316:interpolations_literalMutationString7165_failAssert0null7317:interpolations_literalMutationString7166_failAssert0null7315:interpolations_literalMutationString7167_failAssert0_literalMutationString7216:interpolations_literalMutationString7167_failAssert0_literalMutationString7220:interpolations_literalMutationString7167_failAssert0_literalMutationString7217:interpolations_literalMutationString7170_failAssert0_literalMutationString7213:interpolations_literalMutationString7170_failAssert0_literalMutationString7210:interpolations_literalMutationString7170_failAssert0_literalMutationString7214:interpolations_literalMutationString7168_failAssert0_literalMutationString7223:interpolations_literalMutationString7168_failAssert0_literalMutationString7225:interpolations_literalMutationString7168_failAssert0_literalMutationString7222:interpolations_add7172_literalMutationString7207:interpolations_add7172_literalMutationString7203:interpolations_add7172_literalMutationString7201:interpolations_literalMutationString7169_failAssert0_literalMutationString7235:interpolations_literalMutationString7169_failAssert0_literalMutationString7232:interpolations_literalMutationString7169_failAssert0_literalMutationString7233:interpolations_literalMutationString7165_failAssert0_literalMutationString7242:interpolations_literalMutationString7165_failAssert0_literalMutationString7238:interpolations_literalMutationString7165_failAssert0_literalMutationString7237:interpolations_literalMutationString7166_failAssert0_literalMutationString7229:interpolations_literalMutationString7166_failAssert0_literalMutationString7228:interpolations_literalMutationString7166_failAssert0_literalMutationString7230:interpolations_literalMutationString7167_failAssert0_add7294:interpolations_literalMutationString7167_failAssert0_add7295:interpolations_literalMutationString7167_failAssert0_add7296:interpolations_literalMutationString7170_failAssert0_add7292:interpolations_literalMutationString7170_failAssert0_add7291:interpolations_literalMutationString7170_failAssert0_add7293:interpolations_literalMutationString7168_failAssert0_add7299:interpolations_literalMutationString7168_failAssert0_add7298:interpolations_literalMutationString7168_failAssert0_add7297:interpolations_add7172_add7257:interpolations_add7172_add7264:interpolations_add7172_add7275:interpolations_literalMutationString7169_failAssert0_add7304:interpolations_literalMutationString7169_failAssert0_add7305:interpolations_literalMutationString7169_failAssert0_add7303:interpolations_literalMutationString7165_failAssert0_add7307:interpolations_literalMutationString7165_failAssert0_add7306:interpolations_literalMutationString7165_failAssert0_add7308:interpolationsnull7174_failAssert0_add7288:interpolationsnull7174_failAssert0_add7289:interpolationsnull7174_failAssert0_add7290:interpolations_literalMutationString7166_failAssert0_add7301:interpolations_literalMutationString7166_failAssert0_add7302:interpolations_literalMutationString7166_failAssert0_add7300:interpolations_add7172_remove7309:interpolations_literalMutationString7167_failAssert0_literalMutationString7218:interpolations_literalMutationString7167_failAssert0_literalMutationString7219:interpolations_literalMutationString7167_failAssert0_literalMutationString7221:interpolations_literalMutationString7170_failAssert0_literalMutationString7212:interpolations_literalMutationString7170_failAssert0_literalMutationString7211:interpolations_literalMutationString7170_failAssert0_literalMutationString7215:interpolations_literalMutationString7168_failAssert0_literalMutationString7226:interpolations_literalMutationString7168_failAssert0_literalMutationString7227:interpolations_literalMutationString7168_failAssert0_literalMutationString7224:interpolations_add7172_literalMutationString7202:interpolations_add7172_literalMutationString7208:interpolations_add7172_literalMutationString7204:interpolations_literalMutationString7169_failAssert0_literalMutationString7234:interpolations_literalMutationString7169_failAssert0_literalMutationString7236:interpolations_literalMutationString7169_failAssert0_literalMutationString7231:interpolations_literalMutationString7165_failAssert0_literalMutationString7240:interpolations_literalMutationString7165_failAssert0_literalMutationString7239:interpolations_literalMutationString7165_failAssert0_literalMutationString7241:interpolations_add7172_add7244:interpolations_add7172_add7243:interpolations_add7172_add7277:interpolations_add7172_add7253:interpolations_add7172_add7265:interpolations_add7172_add7279:interpolations_add7172_add7247:interpolations_add7172_add7250:interpolations_add7172_add7282:interpolations_add7172_add7278:interpolations_add7172_add7267:interpolations_add7172_add7272:interpolations_add7172_add7273:interpolations_add7172_add7259:interpolations_add7172_add7270:interpolations_add7172_add7281:interpolations_add7172_add7269:interpolations_add7172_add7271:interpolations_add7172_add7256:interpolations_add7172_add7266:interpolations_add7172_add7283:interpolations_add7172_add7286:interpolations_add7172_add7261:interpolations_add7172_literalMutationString7198:interpolations_add7172_literalMutationString7206:interpolations_add7172_add7268:interpolations_add7172_add7260:interpolations_add7172_add7284 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7167_failAssert0null7313:interpolations_literalMutationString7170_failAssert0null7312:interpolations_literalMutationString7168_failAssert0null7314:interpolations_add7172null7311:interpolations_add7172null7310:interpolations_literalMutationString7169_failAssert0null7316:interpolations_literalMutationString7165_failAssert0null7317:interpolations_literalMutationString7166_failAssert0null7315:interpolations_literalMutationString7167_failAssert0_literalMutationString7216:interpolations_literalMutationString7167_failAssert0_literalMutationString7220:interpolations_literalMutationString7167_failAssert0_literalMutationString7217:interpolations_literalMutationString7170_failAssert0_literalMutationString7213:interpolations_literalMutationString7170_failAssert0_literalMutationString7210:interpolations_literalMutationString7170_failAssert0_literalMutationString7214:interpolations_literalMutationString7168_failAssert0_literalMutationString7223:interpolations_literalMutationString7168_failAssert0_literalMutationString7225:interpolations_literalMutationString7168_failAssert0_literalMutationString7222:interpolations_add7172_literalMutationString7207:interpolations_add7172_literalMutationString7203:interpolations_add7172_literalMutationString7201:interpolations_literalMutationString7169_failAssert0_literalMutationString7235:interpolations_literalMutationString7169_failAssert0_literalMutationString7232:interpolations_literalMutationString7169_failAssert0_literalMutationString7233:interpolations_literalMutationString7165_failAssert0_literalMutationString7242:interpolations_literalMutationString7165_failAssert0_literalMutationString7238:interpolations_literalMutationString7165_failAssert0_literalMutationString7237:interpolations_literalMutationString7166_failAssert0_literalMutationString7229:interpolations_literalMutationString7166_failAssert0_literalMutationString7228:interpolations_literalMutationString7166_failAssert0_literalMutationString7230:interpolations_literalMutationString7167_failAssert0_add7294:interpolations_literalMutationString7167_failAssert0_add7295:interpolations_literalMutationString7167_failAssert0_add7296:interpolations_literalMutationString7170_failAssert0_add7292:interpolations_literalMutationString7170_failAssert0_add7291:interpolations_literalMutationString7170_failAssert0_add7293:interpolations_literalMutationString7168_failAssert0_add7299:interpolations_literalMutationString7168_failAssert0_add7298:interpolations_literalMutationString7168_failAssert0_add7297:interpolations_add7172_add7257:interpolations_add7172_add7264:interpolations_add7172_add7275:interpolations_literalMutationString7169_failAssert0_add7304:interpolations_literalMutationString7169_failAssert0_add7305:interpolations_literalMutationString7169_failAssert0_add7303:interpolations_literalMutationString7165_failAssert0_add7307:interpolations_literalMutationString7165_failAssert0_add7306:interpolations_literalMutationString7165_failAssert0_add7308:interpolationsnull7174_failAssert0_add7288:interpolationsnull7174_failAssert0_add7289:interpolationsnull7174_failAssert0_add7290:interpolations_literalMutationString7166_failAssert0_add7301:interpolations_literalMutationString7166_failAssert0_add7302:interpolations_literalMutationString7166_failAssert0_add7300:interpolations_add7172_remove7309:interpolations_literalMutationString7167_failAssert0_literalMutationString7218:interpolations_literalMutationString7167_failAssert0_literalMutationString7219:interpolations_literalMutationString7167_failAssert0_literalMutationString7221:interpolations_literalMutationString7170_failAssert0_literalMutationString7212:interpolations_literalMutationString7170_failAssert0_literalMutationString7211:interpolations_literalMutationString7170_failAssert0_literalMutationString7215:interpolations_literalMutationString7168_failAssert0_literalMutationString7226:interpolations_literalMutationString7168_failAssert0_literalMutationString7227:interpolations_literalMutationString7168_failAssert0_literalMutationString7224:interpolations_add7172_literalMutationString7202:interpolations_add7172_literalMutationString7208:interpolations_add7172_literalMutationString7204:interpolations_literalMutationString7169_failAssert0_literalMutationString7234:interpolations_literalMutationString7169_failAssert0_literalMutationString7236:interpolations_literalMutationString7169_failAssert0_literalMutationString7231:interpolations_literalMutationString7165_failAssert0_literalMutationString7240:interpolations_literalMutationString7165_failAssert0_literalMutationString7239:interpolations_literalMutationString7165_failAssert0_literalMutationString7241:interpolations_add7172_add7244:interpolations_add7172_add7243:interpolations_add7172_add7277:interpolations_add7172_add7253:interpolations_add7172_add7265:interpolations_add7172_add7279:interpolations_add7172_add7247:interpolations_add7172_add7250:interpolations_add7172_add7282:interpolations_add7172_add7278:interpolations_add7172_add7267:interpolations_add7172_add7272:interpolations_add7172_add7273:interpolations_add7172_add7259:interpolations_add7172_add7270:interpolations_add7172_add7281:interpolations_add7172_add7269:interpolations_add7172_add7271:interpolations_add7172_add7256:interpolations_add7172_add7266:interpolations_add7172_add7283:interpolations_add7172_add7286:interpolations_add7172_add7261:interpolations_add7172_literalMutationString7198:interpolations_add7172_literalMutationString7206:interpolations_add7172_add7268:interpolations_add7172_add7260:interpolations_add7172_add7284
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_add7172_add7243,interpolations_add7172_add7244,interpolations_add7172_add7247,interpolations_add7172_add7250,interpolations_add7172_add7253,interpolations_add7172_add7256,interpolations_add7172_add7257,interpolations_add7172_add7259,interpolations_add7172_add7260,interpolations_add7172_add7261,interpolations_add7172_add7264,interpolations_add7172_add7265,interpolations_add7172_add7266,interpolations_add7172_add7267,interpolations_add7172_add7268,interpolations_add7172_add7269,interpolations_add7172_add7270,interpolations_add7172_add7271,interpolations_add7172_add7272,interpolations_add7172_add7273,interpolations_add7172_add7275,interpolations_add7172_add7277,interpolations_add7172_add7278,interpolations_add7172_add7279,interpolations_add7172_add7281,interpolations_add7172_add7282,interpolations_add7172_add7283,interpolations_add7172_add7284,interpolations_add7172_add7286,interpolations_add7172_literalMutationString7198,interpolations_add7172_remove7309,interpolations_literalMutationString7170_failAssert0null7312(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7237(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7238(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7239(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7240(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7241(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7242(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7201(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7202(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7203(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7204(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7206(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7207(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7208(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7231(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7232(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7233(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7234(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7235(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7236(com.github.mustachejava.SpecTest): null,interpolations_add7172null7310(com.github.mustachejava.SpecTest): null,interpolations_add7172null7311(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7306(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7307(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7308(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_literalMutationString7222(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_literalMutationString7223(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_literalMutationString7224(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_literalMutationString7225(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_literalMutationString7226(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_literalMutationString7227(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0_add7300(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0_add7301(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0_add7302(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_literalMutationString7210(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_literalMutationString7211(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_literalMutationString7212(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_literalMutationString7213(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_literalMutationString7214(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_literalMutationString7215(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7294(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7295(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7296(com.github.mustachejava.SpecTest): null,interpolationsnull7174_failAssert0_add7288(com.github.mustachejava.SpecTest): null,interpolationsnull7174_failAssert0_add7289(com.github.mustachejava.SpecTest): null,interpolationsnull7174_failAssert0_add7290(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_add7303(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_add7304(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_add7305(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7216(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7217(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7218(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7219(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7220(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7221(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0null7317(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_add7291(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_add7292(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7170_failAssert0_add7293(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0null7315(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0null7313(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0null7314(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0_literalMutationString7228(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0_literalMutationString7229(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0_literalMutationString7230(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0null7316(com.github.mustachejava.SpecTest): null
[INFO] 31 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |= ]/  6% |=== ]-  9% |==== ]\ 12% |====== ]| 16% |======== ]/ 19% |========= ]- 22% |=========== ]\ 25% |============ ]| 29% |============== ]/ 32% |================ ]- 35% |================= ]\ 38% |=================== ]| 41% |==================== ]/ 45% |====================== ]- 48% |======================== ]\ 51% |========================= ]| 54% |=========================== ]/ 58% |============================= ]- 61% |============================== ]\ 64% |================================ ]| 67% |================================= ]/ 70% |=================================== ]- 74% |===================================== ]\ 77% |====================================== ]| 80% |======================================== ]/ 83% |========================================= ]- 87% |=========================================== ]\ 90% |============================================= ]| 93% |============================================== ]/ 96% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (93)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7257_withlog0:interpolations_add7172_add7264_withlog0:interpolations_add7172_add7275_withlog0:interpolations_add7172_remove7309_withlog0:interpolations_add7172_add7244_withlog0:interpolations_add7172_add7243_withlog0:interpolations_add7172_add7277_withlog0:interpolations_add7172_add7253_withlog0:interpolations_add7172_add7265_withlog0:interpolations_add7172_add7279_withlog0:interpolations_add7172_add7247_withlog0:interpolations_add7172_add7250_withlog0:interpolations_add7172_add7282_withlog0:interpolations_add7172_add7278_withlog0:interpolations_add7172_add7267_withlog0:interpolations_add7172_add7272_withlog0:interpolations_add7172_add7273_withlog0:interpolations_add7172_add7259_withlog0:interpolations_add7172_add7270_withlog0:interpolations_add7172_add7281_withlog0:interpolations_add7172_add7269_withlog0:interpolations_add7172_add7271_withlog0:interpolations_add7172_add7256_withlog0:interpolations_add7172_add7266_withlog0:interpolations_add7172_add7283_withlog0:interpolations_add7172_add7286_withlog0:interpolations_add7172_add7261_withlog0:interpolations_add7172_literalMutationString7198_withlog0:interpolations_add7172_add7268_withlog0:interpolations_add7172_add7260_withlog0:interpolations_add7172_add7284_withlog0:interpolations_add7172_add7257_withlog1:interpolations_add7172_add7264_withlog1:interpolations_add7172_add7275_withlog1:interpolations_add7172_remove7309_withlog1:interpolations_add7172_add7244_withlog1:interpolations_add7172_add7243_withlog1:interpolations_add7172_add7277_withlog1:interpolations_add7172_add7253_withlog1:interpolations_add7172_add7265_withlog1:interpolations_add7172_add7279_withlog1:interpolations_add7172_add7247_withlog1:interpolations_add7172_add7250_withlog1:interpolations_add7172_add7282_withlog1:interpolations_add7172_add7278_withlog1:interpolations_add7172_add7267_withlog1:interpolations_add7172_add7272_withlog1:interpolations_add7172_add7273_withlog1:interpolations_add7172_add7259_withlog1:interpolations_add7172_add7270_withlog1:interpolations_add7172_add7281_withlog1:interpolations_add7172_add7269_withlog1:interpolations_add7172_add7271_withlog1:interpolations_add7172_add7256_withlog1:interpolations_add7172_add7266_withlog1:interpolations_add7172_add7283_withlog1:interpolations_add7172_add7286_withlog1:interpolations_add7172_add7261_withlog1:interpolations_add7172_literalMutationString7198_withlog1:interpolations_add7172_add7268_withlog1:interpolations_add7172_add7260_withlog1:interpolations_add7172_add7284_withlog1:interpolations_add7172_add7257_withlog2:interpolations_add7172_add7264_withlog2:interpolations_add7172_add7275_withlog2:interpolations_add7172_remove7309_withlog2:interpolations_add7172_add7244_withlog2:interpolations_add7172_add7243_withlog2:interpolations_add7172_add7277_withlog2:interpolations_add7172_add7253_withlog2:interpolations_add7172_add7265_withlog2:interpolations_add7172_add7279_withlog2:interpolations_add7172_add7247_withlog2:interpolations_add7172_add7250_withlog2:interpolations_add7172_add7282_withlog2:interpolations_add7172_add7278_withlog2:interpolations_add7172_add7267_withlog2:interpolations_add7172_add7272_withlog2:interpolations_add7172_add7273_withlog2:interpolations_add7172_add7259_withlog2:interpolations_add7172_add7270_withlog2:interpolations_add7172_add7281_withlog2:interpolations_add7172_add7269_withlog2:interpolations_add7172_add7271_withlog2:interpolations_add7172_add7256_withlog2:interpolations_add7172_add7266_withlog2:interpolations_add7172_add7283_withlog2:interpolations_add7172_add7286_withlog2:interpolations_add7172_add7261_withlog2:interpolations_add7172_literalMutationString7198_withlog2:interpolations_add7172_add7268_withlog2:interpolations_add7172_add7260_withlog2:interpolations_add7172_add7284_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7257_withlog0:interpolations_add7172_add7264_withlog0:interpolations_add7172_add7275_withlog0:interpolations_add7172_remove7309_withlog0:interpolations_add7172_add7244_withlog0:interpolations_add7172_add7243_withlog0:interpolations_add7172_add7277_withlog0:interpolations_add7172_add7253_withlog0:interpolations_add7172_add7265_withlog0:interpolations_add7172_add7279_withlog0:interpolations_add7172_add7247_withlog0:interpolations_add7172_add7250_withlog0:interpolations_add7172_add7282_withlog0:interpolations_add7172_add7278_withlog0:interpolations_add7172_add7267_withlog0:interpolations_add7172_add7272_withlog0:interpolations_add7172_add7273_withlog0:interpolations_add7172_add7259_withlog0:interpolations_add7172_add7270_withlog0:interpolations_add7172_add7281_withlog0:interpolations_add7172_add7269_withlog0:interpolations_add7172_add7271_withlog0:interpolations_add7172_add7256_withlog0:interpolations_add7172_add7266_withlog0:interpolations_add7172_add7283_withlog0:interpolations_add7172_add7286_withlog0:interpolations_add7172_add7261_withlog0:interpolations_add7172_literalMutationString7198_withlog0:interpolations_add7172_add7268_withlog0:interpolations_add7172_add7260_withlog0:interpolations_add7172_add7284_withlog0:interpolations_add7172_add7257_withlog1:interpolations_add7172_add7264_withlog1:interpolations_add7172_add7275_withlog1:interpolations_add7172_remove7309_withlog1:interpolations_add7172_add7244_withlog1:interpolations_add7172_add7243_withlog1:interpolations_add7172_add7277_withlog1:interpolations_add7172_add7253_withlog1:interpolations_add7172_add7265_withlog1:interpolations_add7172_add7279_withlog1:interpolations_add7172_add7247_withlog1:interpolations_add7172_add7250_withlog1:interpolations_add7172_add7282_withlog1:interpolations_add7172_add7278_withlog1:interpolations_add7172_add7267_withlog1:interpolations_add7172_add7272_withlog1:interpolations_add7172_add7273_withlog1:interpolations_add7172_add7259_withlog1:interpolations_add7172_add7270_withlog1:interpolations_add7172_add7281_withlog1:interpolations_add7172_add7269_withlog1:interpolations_add7172_add7271_withlog1:interpolations_add7172_add7256_withlog1:interpolations_add7172_add7266_withlog1:interpolations_add7172_add7283_withlog1:interpolations_add7172_add7286_withlog1:interpolations_add7172_add7261_withlog1:interpolations_add7172_literalMutationString7198_withlog1:interpolations_add7172_add7268_withlog1:interpolations_add7172_add7260_withlog1:interpolations_add7172_add7284_withlog1:interpolations_add7172_add7257_withlog2:interpolations_add7172_add7264_withlog2:interpolations_add7172_add7275_withlog2:interpolations_add7172_remove7309_withlog2:interpolations_add7172_add7244_withlog2:interpolations_add7172_add7243_withlog2:interpolations_add7172_add7277_withlog2:interpolations_add7172_add7253_withlog2:interpolations_add7172_add7265_withlog2:interpolations_add7172_add7279_withlog2:interpolations_add7172_add7247_withlog2:interpolations_add7172_add7250_withlog2:interpolations_add7172_add7282_withlog2:interpolations_add7172_add7278_withlog2:interpolations_add7172_add7267_withlog2:interpolations_add7172_add7272_withlog2:interpolations_add7172_add7273_withlog2:interpolations_add7172_add7259_withlog2:interpolations_add7172_add7270_withlog2:interpolations_add7172_add7281_withlog2:interpolations_add7172_add7269_withlog2:interpolations_add7172_add7271_withlog2:interpolations_add7172_add7256_withlog2:interpolations_add7172_add7266_withlog2:interpolations_add7172_add7283_withlog2:interpolations_add7172_add7286_withlog2:interpolations_add7172_add7261_withlog2:interpolations_add7172_literalMutationString7198_withlog2:interpolations_add7172_add7268_withlog2:interpolations_add7172_add7260_withlog2:interpolations_add7172_add7284_withlog2
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_add7172_add7267_withlog0,interpolations_add7172_add7267_withlog1,interpolations_add7172_add7267_withlog2,interpolations_add7172_add7243_withlog0,interpolations_add7172_add7243_withlog1,interpolations_add7172_add7243_withlog2,interpolations_add7172_add7266_withlog0,interpolations_add7172_add7266_withlog1,interpolations_add7172_add7266_withlog2,interpolations_add7172_add7265_withlog0,interpolations_add7172_add7265_withlog1,interpolations_add7172_add7265_withlog2,interpolations_add7172_add7264_withlog0,interpolations_add7172_add7264_withlog1,interpolations_add7172_add7264_withlog2,interpolations_add7172_add7286_withlog0,interpolations_add7172_add7286_withlog1,interpolations_add7172_add7286_withlog2,interpolations_add7172_remove7309_withlog0,interpolations_add7172_remove7309_withlog1,interpolations_add7172_remove7309_withlog2,interpolations_add7172_add7261_withlog0,interpolations_add7172_add7261_withlog1,interpolations_add7172_add7261_withlog2,interpolations_add7172_add7284_withlog0,interpolations_add7172_add7284_withlog1,interpolations_add7172_add7284_withlog2,interpolations_add7172_add7260_withlog0,interpolations_add7172_add7260_withlog1,interpolations_add7172_add7260_withlog2,interpolations_add7172_add7259_withlog0,interpolations_add7172_add7259_withlog1,interpolations_add7172_add7259_withlog2,interpolations_add7172_add7283_withlog0,interpolations_add7172_add7283_withlog1,interpolations_add7172_add7283_withlog2,interpolations_add7172_add7282_withlog0,interpolations_add7172_add7282_withlog1,interpolations_add7172_add7282_withlog2,interpolations_add7172_add7257_withlog0,interpolations_add7172_add7257_withlog1,interpolations_add7172_add7257_withlog2,interpolations_add7172_add7281_withlog0,interpolations_add7172_add7281_withlog1,interpolations_add7172_add7281_withlog2,interpolations_add7172_add7256_withlog0,interpolations_add7172_add7256_withlog1,interpolations_add7172_add7256_withlog2,interpolations_add7172_add7279_withlog0,interpolations_add7172_add7279_withlog1,interpolations_add7172_add7279_withlog2,interpolations_add7172_add7278_withlog0,interpolations_add7172_add7278_withlog1,interpolations_add7172_add7278_withlog2,interpolations_add7172_add7277_withlog0,interpolations_add7172_add7277_withlog1,interpolations_add7172_add7277_withlog2,interpolations_add7172_add7253_withlog0,interpolations_add7172_add7253_withlog1,interpolations_add7172_add7253_withlog2,interpolations_add7172_add7275_withlog0,interpolations_add7172_add7275_withlog1,interpolations_add7172_add7275_withlog2,interpolations_add7172_add7250_withlog0,interpolations_add7172_add7250_withlog1,interpolations_add7172_add7250_withlog2,interpolations_add7172_add7273_withlog0,interpolations_add7172_add7273_withlog1,interpolations_add7172_add7273_withlog2,interpolations_add7172_add7272_withlog0,interpolations_add7172_add7272_withlog1,interpolations_add7172_add7272_withlog2,interpolations_add7172_add7247_withlog0,interpolations_add7172_add7247_withlog1,interpolations_add7172_add7247_withlog2,interpolations_add7172_add7271_withlog0,interpolations_add7172_add7271_withlog1,interpolations_add7172_add7271_withlog2,interpolations_add7172_add7270_withlog0,interpolations_add7172_add7270_withlog1,interpolations_add7172_add7270_withlog2,interpolations_add7172_add7269_withlog0,interpolations_add7172_add7269_withlog1,interpolations_add7172_add7269_withlog2,interpolations_add7172_add7268_withlog0,interpolations_add7172_add7268_withlog1,interpolations_add7172_add7268_withlog2,interpolations_add7172_literalMutationString7198_withlog0,interpolations_add7172_literalMutationString7198_withlog1,interpolations_add7172_literalMutationString7198_withlog2,interpolations_add7172_add7244_withlog0,interpolations_add7172_add7244_withlog1,interpolations_add7172_add7244_withlog2
[INFO] Generating assertions...
[INFO] 69 test fail, generating try/catch/fail blocks...
[INFO] 71 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7243:interpolations_add7172_add7266:interpolations_literalMutationString7167_failAssert0null7313_failAssert0:interpolations_literalMutationString7170_failAssert0null7312_failAssert0:interpolations_literalMutationString7168_failAssert0null7314_failAssert0:interpolations_add7172null7311_failAssert0:interpolations_add7172null7310_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0:interpolations_literalMutationString7165_failAssert0null7317_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7216_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7217_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7213_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7210_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7214_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7223_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7225_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7222_failAssert0:interpolations_add7172_literalMutationString7207_failAssert0:interpolations_add7172_literalMutationString7203_failAssert0:interpolations_add7172_literalMutationString7201_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7229_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7228_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7230_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0:interpolations_literalMutationString7170_failAssert0_add7292_failAssert0:interpolations_literalMutationString7170_failAssert0_add7291_failAssert0:interpolations_literalMutationString7170_failAssert0_add7293_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0:interpolations_literalMutationString7169_failAssert0_add7304_failAssert0:interpolations_literalMutationString7169_failAssert0_add7305_failAssert0:interpolations_literalMutationString7169_failAssert0_add7303_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0:interpolationsnull7174_failAssert0_add7288_failAssert0:interpolationsnull7174_failAssert0_add7289_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0:interpolations_literalMutationString7166_failAssert0_add7301_failAssert0:interpolations_literalMutationString7166_failAssert0_add7302_failAssert0:interpolations_literalMutationString7166_failAssert0_add7300_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7218_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7219_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7212_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7211_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7215_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7226_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7227_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7224_failAssert0:interpolations_add7172_literalMutationString7202_failAssert0:interpolations_add7172_literalMutationString7208_failAssert0:interpolations_add7172_literalMutationString7204_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7231_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7240_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7241_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7243:interpolations_add7172_add7266:interpolations_literalMutationString7167_failAssert0null7313_failAssert0:interpolations_literalMutationString7170_failAssert0null7312_failAssert0:interpolations_literalMutationString7168_failAssert0null7314_failAssert0:interpolations_add7172null7311_failAssert0:interpolations_add7172null7310_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0:interpolations_literalMutationString7165_failAssert0null7317_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7216_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7217_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7213_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7210_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7214_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7223_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7225_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7222_failAssert0:interpolations_add7172_literalMutationString7207_failAssert0:interpolations_add7172_literalMutationString7203_failAssert0:interpolations_add7172_literalMutationString7201_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7229_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7228_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7230_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0:interpolations_literalMutationString7170_failAssert0_add7292_failAssert0:interpolations_literalMutationString7170_failAssert0_add7291_failAssert0:interpolations_literalMutationString7170_failAssert0_add7293_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0:interpolations_literalMutationString7169_failAssert0_add7304_failAssert0:interpolations_literalMutationString7169_failAssert0_add7305_failAssert0:interpolations_literalMutationString7169_failAssert0_add7303_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0:interpolationsnull7174_failAssert0_add7288_failAssert0:interpolationsnull7174_failAssert0_add7289_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0:interpolations_literalMutationString7166_failAssert0_add7301_failAssert0:interpolations_literalMutationString7166_failAssert0_add7302_failAssert0:interpolations_literalMutationString7166_failAssert0_add7300_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7218_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7219_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7212_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7211_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7215_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7226_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7227_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7224_failAssert0:interpolations_add7172_literalMutationString7202_failAssert0:interpolations_add7172_literalMutationString7208_failAssert0:interpolations_add7172_literalMutationString7204_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7231_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7240_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7241_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_literalMutationString7169_failAssert0_add7305_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7227_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0,interpolations_add7172_literalMutationString7203_failAssert0,interpolations_literalMutationString7169_failAssert0_add7304_failAssert0,interpolations_add7172_add7243,interpolations_add7172_add7266,interpolations_literalMutationString7165_failAssert0null7317_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7226_failAssert0,interpolations_literalMutationString7169_failAssert0null7316_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0,interpolations_add7172_literalMutationString7202_failAssert0,interpolations_literalMutationString7169_failAssert0_add7303_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7225_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0,interpolations_add7172_literalMutationString7201_failAssert0,interpolations_literalMutationString7170_failAssert0null7312_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7224_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7223_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0,interpolations_literalMutationString7167_failAssert0null7313_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7215_failAssert0,interpolations_literalMutationString7166_failAssert0_literalMutationString7229_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7222_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0,interpolationsnull7174_failAssert0_add7290_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7241_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7214_failAssert0,interpolations_literalMutationString7166_failAssert0_literalMutationString7228_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7240_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7213_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0,interpolations_literalMutationString7170_failAssert0_add7293_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7212_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7231_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0,interpolations_literalMutationString7170_failAssert0_add7292_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7211_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0,interpolations_literalMutationString7170_failAssert0_add7291_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7210_failAssert0,interpolations_literalMutationString7166_failAssert0null7315_failAssert0,interpolations_add7172_literalMutationString7208_failAssert0,interpolations_literalMutationString7166_failAssert0_add7302_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7219_failAssert0,interpolations_literalMutationString7168_failAssert0null7314_failAssert0,interpolations_add7172_literalMutationString7207_failAssert0,interpolations_literalMutationString7166_failAssert0_add7301_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7218_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0,interpolations_add7172_literalMutationString7206_failAssert0,interpolations_literalMutationString7166_failAssert0_literalMutationString7230_failAssert0,interpolations_literalMutationString7166_failAssert0_add7300_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7217_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0,interpolations_add7172null7311_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0,interpolationsnull7174_failAssert0_add7289_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7216_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0,interpolations_add7172null7310_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0,interpolationsnull7174_failAssert0_add7288_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0,interpolations_add7172_literalMutationString7204_failAssert0
[INFO] Assertion amplification: 71 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:30 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:30 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:30 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7243:interpolations_add7172_add7266:interpolations_literalMutationString7167_failAssert0null7313_failAssert0:interpolations_literalMutationString7170_failAssert0null7312_failAssert0:interpolations_literalMutationString7168_failAssert0null7314_failAssert0:interpolations_add7172null7311_failAssert0:interpolations_add7172null7310_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0:interpolations_literalMutationString7165_failAssert0null7317_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7216_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7217_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7213_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7210_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7214_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7223_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7225_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7222_failAssert0:interpolations_add7172_literalMutationString7207_failAssert0:interpolations_add7172_literalMutationString7203_failAssert0:interpolations_add7172_literalMutationString7201_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7229_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7228_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7230_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0:interpolations_literalMutationString7170_failAssert0_add7292_failAssert0:interpolations_literalMutationString7170_failAssert0_add7291_failAssert0:interpolations_literalMutationString7170_failAssert0_add7293_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0:interpolations_literalMutationString7169_failAssert0_add7304_failAssert0:interpolations_literalMutationString7169_failAssert0_add7305_failAssert0:interpolations_literalMutationString7169_failAssert0_add7303_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0:interpolationsnull7174_failAssert0_add7288_failAssert0:interpolationsnull7174_failAssert0_add7289_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0:interpolations_literalMutationString7166_failAssert0_add7301_failAssert0:interpolations_literalMutationString7166_failAssert0_add7302_failAssert0:interpolations_literalMutationString7166_failAssert0_add7300_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7218_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7219_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7212_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7211_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7215_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7226_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7227_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7224_failAssert0:interpolations_add7172_literalMutationString7202_failAssert0:interpolations_add7172_literalMutationString7208_failAssert0:interpolations_add7172_literalMutationString7204_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7231_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7240_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7241_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7243:interpolations_add7172_add7266:interpolations_literalMutationString7167_failAssert0null7313_failAssert0:interpolations_literalMutationString7170_failAssert0null7312_failAssert0:interpolations_literalMutationString7168_failAssert0null7314_failAssert0:interpolations_add7172null7311_failAssert0:interpolations_add7172null7310_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0:interpolations_literalMutationString7165_failAssert0null7317_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7216_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7217_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7213_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7210_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7214_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7223_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7225_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7222_failAssert0:interpolations_add7172_literalMutationString7207_failAssert0:interpolations_add7172_literalMutationString7203_failAssert0:interpolations_add7172_literalMutationString7201_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7229_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7228_failAssert0:interpolations_literalMutationString7166_failAssert0_literalMutationString7230_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0:interpolations_literalMutationString7170_failAssert0_add7292_failAssert0:interpolations_literalMutationString7170_failAssert0_add7291_failAssert0:interpolations_literalMutationString7170_failAssert0_add7293_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0:interpolations_literalMutationString7169_failAssert0_add7304_failAssert0:interpolations_literalMutationString7169_failAssert0_add7305_failAssert0:interpolations_literalMutationString7169_failAssert0_add7303_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0:interpolationsnull7174_failAssert0_add7288_failAssert0:interpolationsnull7174_failAssert0_add7289_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0:interpolations_literalMutationString7166_failAssert0_add7301_failAssert0:interpolations_literalMutationString7166_failAssert0_add7302_failAssert0:interpolations_literalMutationString7166_failAssert0_add7300_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7218_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7219_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7212_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7211_failAssert0:interpolations_literalMutationString7170_failAssert0_literalMutationString7215_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7226_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7227_failAssert0:interpolations_literalMutationString7168_failAssert0_literalMutationString7224_failAssert0:interpolations_add7172_literalMutationString7202_failAssert0:interpolations_add7172_literalMutationString7208_failAssert0:interpolations_add7172_literalMutationString7204_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7231_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7240_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7241_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_literalMutationString7169_failAssert0_add7305_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7227_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0,interpolations_add7172_literalMutationString7203_failAssert0,interpolations_literalMutationString7169_failAssert0_add7304_failAssert0,interpolations_add7172_add7243,interpolations_add7172_add7266,interpolations_literalMutationString7165_failAssert0null7317_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7226_failAssert0,interpolations_literalMutationString7169_failAssert0null7316_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0,interpolations_add7172_literalMutationString7202_failAssert0,interpolations_literalMutationString7169_failAssert0_add7303_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7225_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0,interpolations_add7172_literalMutationString7201_failAssert0,interpolations_literalMutationString7170_failAssert0null7312_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7224_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7223_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0,interpolations_literalMutationString7167_failAssert0null7313_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7215_failAssert0,interpolations_literalMutationString7166_failAssert0_literalMutationString7229_failAssert0,interpolations_literalMutationString7168_failAssert0_literalMutationString7222_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0,interpolationsnull7174_failAssert0_add7290_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7241_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7214_failAssert0,interpolations_literalMutationString7166_failAssert0_literalMutationString7228_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7240_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7213_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0,interpolations_literalMutationString7170_failAssert0_add7293_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7212_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7231_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0,interpolations_literalMutationString7170_failAssert0_add7292_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7211_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0,interpolations_literalMutationString7170_failAssert0_add7291_failAssert0,interpolations_literalMutationString7170_failAssert0_literalMutationString7210_failAssert0,interpolations_literalMutationString7166_failAssert0null7315_failAssert0,interpolations_add7172_literalMutationString7208_failAssert0,interpolations_literalMutationString7166_failAssert0_add7302_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7219_failAssert0,interpolations_literalMutationString7168_failAssert0null7314_failAssert0,interpolations_add7172_literalMutationString7207_failAssert0,interpolations_literalMutationString7166_failAssert0_add7301_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7218_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0,interpolations_add7172_literalMutationString7206_failAssert0,interpolations_literalMutationString7166_failAssert0_literalMutationString7230_failAssert0,interpolations_literalMutationString7166_failAssert0_add7300_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7217_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0,interpolations_add7172null7311_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0,interpolationsnull7174_failAssert0_add7289_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7216_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0,interpolations_add7172null7310_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0,interpolationsnull7174_failAssert0_add7288_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0,interpolations_add7172_literalMutationString7204_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 71 tests selected to be amplified over 71 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 1126ms
  1% | ]/ 71% |=================================== ]\ 93% |============================================== ]/ 99% |================================================= ]\[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396:interpolations_add7172null7311_failAssert0null8357:interpolations_add7172null7310_failAssert0null8358:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385:interpolations_add7172_add7243null8352:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805:interpolations_add7172null7311_failAssert0_literalMutationString7586:interpolations_add7172null7310_failAssert0_literalMutationString7593:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738:interpolations_add7172_add7243_literalMutationString7550:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238:interpolations_add7172null7311_failAssert0_add8124:interpolationsnull7174_failAssert0_add7290_failAssert0_add8274:interpolations_add7172null7310_failAssert0_add8128:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136:interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211:interpolations_add7172_add7243_add8034:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182:interpolations_add7172_add7243_remove8349:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386:interpolations_add7172_add7243null8351:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804:interpolations_add7172null7311_failAssert0_literalMutationString7590:interpolations_add7172null7310_failAssert0_literalMutationString7591:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239:interpolations_add7172null7311_failAssert0_add8123:interpolationsnull7174_failAssert0_add7290_failAssert0_add8273:interpolations_add7172null7310_failAssert0_add8126:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137:interpolations_add7172_add7266_remove8350:interpolations_add7172_add7243null8353:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229:interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019:interpolations_add7172_add7243_add8032 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396:interpolations_add7172null7311_failAssert0null8357:interpolations_add7172null7310_failAssert0null8358:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385:interpolations_add7172_add7243null8352:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805:interpolations_add7172null7311_failAssert0_literalMutationString7586:interpolations_add7172null7310_failAssert0_literalMutationString7593:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738:interpolations_add7172_add7243_literalMutationString7550:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238:interpolations_add7172null7311_failAssert0_add8124:interpolationsnull7174_failAssert0_add7290_failAssert0_add8274:interpolations_add7172null7310_failAssert0_add8128:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136:interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211:interpolations_add7172_add7243_add8034:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182:interpolations_add7172_add7243_remove8349:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386:interpolations_add7172_add7243null8351:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804:interpolations_add7172null7311_failAssert0_literalMutationString7590:interpolations_add7172null7310_failAssert0_literalMutationString7591:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239:interpolations_add7172null7311_failAssert0_add8123:interpolationsnull7174_failAssert0_add7290_failAssert0_add8273:interpolations_add7172null7310_failAssert0_add8126:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137:interpolations_add7172_add7266_remove8350:interpolations_add7172_add7243null8353:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229:interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019:interpolations_add7172_add7243_add8032
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_add7172_add7266_remove8350,interpolations_add7172_add7243_remove8349,interpolations_add7172_add7243_add8032,interpolations_add7172_add7243_add8034,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428(com.github.mustachejava.SpecTest): null,interpolations_add7172null7310_failAssert0_literalMutationString7591(com.github.mustachejava.SpecTest): null,interpolations_add7172null7310_failAssert0_literalMutationString7593(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800(com.github.mustachejava.SpecTest): null,interpolations_add7172null7310_failAssert0_add8126(com.github.mustachejava.SpecTest): null,interpolations_add7172null7310_failAssert0_add8128(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213(com.github.mustachejava.SpecTest): null,interpolationsnull7174_failAssert0_add7290_failAssert0_add8273(com.github.mustachejava.SpecTest): null,interpolationsnull7174_failAssert0_add7290_failAssert0_add8274(com.github.mustachejava.SpecTest): null,interpolations_add7172null7311_failAssert0_add8123(com.github.mustachejava.SpecTest): null,interpolations_add7172null7311_failAssert0_add8124(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978(com.github.mustachejava.SpecTest): null,interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704(com.github.mustachejava.SpecTest): null,interpolations_add7172null7310_failAssert0null8358(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387(com.github.mustachejava.SpecTest): null,interpolations_add7172null7311_failAssert0null8357(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339(com.github.mustachejava.SpecTest): null,interpolations_add7172_add7243null8351(com.github.mustachejava.SpecTest): null,interpolations_add7172_add7243null8352(com.github.mustachejava.SpecTest): null,interpolations_add7172_add7243null8353(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178(com.github.mustachejava.SpecTest): null,interpolations_add7172_add7243_literalMutationString7550(com.github.mustachejava.SpecTest): null,interpolations_add7172null7311_failAssert0_literalMutationString7586(com.github.mustachejava.SpecTest): null,interpolations_add7172null7311_failAssert0_literalMutationString7590(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332(com.github.mustachejava.SpecTest): null,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903(com.github.mustachejava.SpecTest): null
[INFO] 4 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
 25% |================================================= ]/ 50% |================================================= ]- 75% |================================================= ]\100% |================================================== ]|
[INFO] Run instrumented tests. (12)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7243_add8034_withlog0:interpolations_add7172_add7243_remove8349_withlog0:interpolations_add7172_add7266_remove8350_withlog0:interpolations_add7172_add7243_add8032_withlog0:interpolations_add7172_add7243_add8034_withlog1:interpolations_add7172_add7243_remove8349_withlog1:interpolations_add7172_add7266_remove8350_withlog1:interpolations_add7172_add7243_add8032_withlog1:interpolations_add7172_add7243_add8034_withlog2:interpolations_add7172_add7243_remove8349_withlog2:interpolations_add7172_add7266_remove8350_withlog2:interpolations_add7172_add7243_add8032_withlog2 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_add7172_add7243_add8034_withlog0:interpolations_add7172_add7243_remove8349_withlog0:interpolations_add7172_add7266_remove8350_withlog0:interpolations_add7172_add7243_add8032_withlog0:interpolations_add7172_add7243_add8034_withlog1:interpolations_add7172_add7243_remove8349_withlog1:interpolations_add7172_add7266_remove8350_withlog1:interpolations_add7172_add7243_add8032_withlog1:interpolations_add7172_add7243_add8034_withlog2:interpolations_add7172_add7243_remove8349_withlog2:interpolations_add7172_add7266_remove8350_withlog2:interpolations_add7172_add7243_add8032_withlog2
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
Running No Interpolation - Mustache-free templates should render as-is.: success!
Running Basic Interpolation - Unadorned tags should interpolate content into the template.: success!
Running HTML Escaping - Basic interpolation should be HTML escaped.: success!
Running Triple Mustache - Triple mustaches should interpolate without HTML escaping.: success!
Running Ampersand - Ampersand should interpolate without HTML escaping.: success!
Running Basic Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Triple Mustache Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Ampersand Integer Interpolation - Integers should interpolate seamlessly.: success!
Running Basic Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Triple Mustache Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Ampersand Decimal Interpolation - Decimals should interpolate seamlessly with proper significance.: success!
Running Basic Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Triple Mustache Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Ampersand Context Miss Interpolation - Failed context lookups should default to empty strings.: success!
Running Dotted Names - Basic Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Triple Mustache Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Ampersand Interpolation - Dotted names should be considered a form of shorthand for sections.: success!
Running Dotted Names - Arbitrary Depth - Dotted names should be functional to any level of nesting.: success!
Running Dotted Names - Broken Chains - Any falsey value prior to the last part of the name should yield ''.: success!
Running Dotted Names - Broken Chain Resolution - Each part of a dotted name should resolve only against its parent.: success!
Running Dotted Names - Initial Resolution - The first part of a dotted name should resolve as any other name.: success!
Running Dotted Names - Context Precedence - Dotted names should be resolved against former resolutions.: success!
Running Interpolation - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Surrounding Whitespace - Interpolation should not alter surrounding whitespace.: success!
Running Interpolation - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Triple Mustache - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Ampersand - Standalone - Standalone interpolation should not alter surrounding whitespace.: success!
Running Interpolation With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Triple Mustache With Padding - Superfluous in-tag whitespace should be ignored.: success!
Running Ampersand With Padding - Superfluous in-tag whitespace should be ignored.: success!
Success: 31 Whitespace: 0 Fail: 0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_add7172_add7266_remove8350_withlog0,interpolations_add7172_add7266_remove8350_withlog1,interpolations_add7172_add7266_remove8350_withlog2,interpolations_add7172_add7243_add8034_withlog0,interpolations_add7172_add7243_add8034_withlog1,interpolations_add7172_add7243_add8034_withlog2,interpolations_add7172_add7243_add8032_withlog0,interpolations_add7172_add7243_add8032_withlog1,interpolations_add7172_add7243_add8032_withlog2,interpolations_add7172_add7243_remove8349_withlog0,interpolations_add7172_add7243_remove8349_withlog1,interpolations_add7172_add7243_remove8349_withlog2
[INFO] Generating assertions...
[INFO] 96 test fail, generating try/catch/fail blocks...
[INFO] 96 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/SpecTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396_failAssert0:interpolations_add7172null7311_failAssert0null8357_failAssert0:interpolations_add7172null7310_failAssert0null8358_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385_failAssert0:interpolations_add7172_add7243null8352_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7586_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7593_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738_failAssert0:interpolations_add7172_add7243_literalMutationString7550_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238_failAssert0:interpolations_add7172null7311_failAssert0_add8124_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8274_failAssert0:interpolations_add7172null7310_failAssert0_add8128_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386_failAssert0:interpolations_add7172_add7243null8351_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7590_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7591_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239_failAssert0:interpolations_add7172null7311_failAssert0_add8123_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8273_failAssert0:interpolations_add7172null7310_failAssert0_add8126_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137_failAssert0:interpolations_add7172_add7243null8353_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396_failAssert0:interpolations_add7172null7311_failAssert0null8357_failAssert0:interpolations_add7172null7310_failAssert0null8358_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385_failAssert0:interpolations_add7172_add7243null8352_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7586_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7593_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738_failAssert0:interpolations_add7172_add7243_literalMutationString7550_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238_failAssert0:interpolations_add7172null7311_failAssert0_add8124_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8274_failAssert0:interpolations_add7172null7310_failAssert0_add8128_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386_failAssert0:interpolations_add7172_add7243null8351_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7590_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7591_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239_failAssert0:interpolations_add7172null7311_failAssert0_add8123_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8273_failAssert0:interpolations_add7172null7310_failAssert0_add8126_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137_failAssert0:interpolations_add7172_add7243null8353_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605_failAssert0,interpolations_add7172null7310_failAssert0null8358_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360_failAssert0,interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395_failAssert0,interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136_failAssert0,interpolations_add7172null7311_failAssert0_add8124_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394_failAssert0,interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379_failAssert0,interpolations_add7172null7311_failAssert0_add8123_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805_failAssert0,interpolations_add7172null7310_failAssert0_literalMutationString7593_failAssert0,interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787_failAssert0,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339_failAssert0,interpolations_add7172null7310_failAssert0_literalMutationString7591_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193_failAssert0,interpolations_add7172null7310_failAssert0_add8128_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786_failAssert0,interpolations_add7172null7311_failAssert0_literalMutationString7586_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397_failAssert0,interpolations_add7172null7310_failAssert0_add8126_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396_failAssert0,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387_failAssert0,interpolations_add7172_add7243_literalMutationString7550_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228_failAssert0,interpolations_add7172null7311_failAssert0null8357_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685_failAssert0,interpolations_add7172_add7243null8353_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211_failAssert0,interpolationsnull7174_failAssert0_add7290_failAssert0_add8274_failAssert0,interpolations_add7172null7311_failAssert0_literalMutationString7590_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261_failAssert0,interpolations_add7172_add7243null8352_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404_failAssert0,interpolationsnull7174_failAssert0_add7290_failAssert0_add8273_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378_failAssert0,interpolations_add7172_add7243null8351_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230_failAssert0
[INFO] Assertion amplification: 96 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:36 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:36 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:36 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396_failAssert0:interpolations_add7172null7311_failAssert0null8357_failAssert0:interpolations_add7172null7310_failAssert0null8358_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385_failAssert0:interpolations_add7172_add7243null8352_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7586_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7593_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738_failAssert0:interpolations_add7172_add7243_literalMutationString7550_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238_failAssert0:interpolations_add7172null7311_failAssert0_add8124_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8274_failAssert0:interpolations_add7172null7310_failAssert0_add8128_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386_failAssert0:interpolations_add7172_add7243null8351_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7590_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7591_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239_failAssert0:interpolations_add7172null7311_failAssert0_add8123_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8273_failAssert0:interpolations_add7172null7310_failAssert0_add8126_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137_failAssert0:interpolations_add7172_add7243null8353_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019_failAssert0 
Parsing --class com.github.mustachejava.SpecTest --tests interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396_failAssert0:interpolations_add7172null7311_failAssert0null8357_failAssert0:interpolations_add7172null7310_failAssert0null8358_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385_failAssert0:interpolations_add7172_add7243null8352_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7586_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7593_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738_failAssert0:interpolations_add7172_add7243_literalMutationString7550_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238_failAssert0:interpolations_add7172null7311_failAssert0_add8124_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8274_failAssert0:interpolations_add7172null7310_failAssert0_add8128_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136_failAssert0:interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207_failAssert0:interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211_failAssert0:interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254_failAssert0:interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397_failAssert0:interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383_failAssert0:interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386_failAssert0:interpolations_add7172_add7243null8351_failAssert0:interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406_failAssert0:interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804_failAssert0:interpolations_add7172null7311_failAssert0_literalMutationString7590_failAssert0:interpolations_add7172null7310_failAssert0_literalMutationString7591_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703_failAssert0:interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230_failAssert0:interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239_failAssert0:interpolations_add7172null7311_failAssert0_add8123_failAssert0:interpolationsnull7174_failAssert0_add7290_failAssert0_add8273_failAssert0:interpolations_add7172null7310_failAssert0_add8126_failAssert0:interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137_failAssert0:interpolations_add7172_add7243null8353_failAssert0:interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783_failAssert0:interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231_failAssert0:interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229_failAssert0:interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_add8213_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_literalMutationString7605_failAssert0,interpolations_add7172null7310_failAssert0null8358_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0null8360_failAssert0,interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8137_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7795_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8406_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_literalMutationString7978_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0null8374_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0null8415_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0null8377_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_add8254_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8395_failAssert0,interpolations_literalMutationString7166_failAssert0null7315_failAssert0_add8136_failAssert0,interpolations_add7172null7311_failAssert0_add8124_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8386_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0null8405_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7220_failAssert0_add8141_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0null8394_failAssert0,interpolations_literalMutationString7169_failAssert0null7316_failAssert0_add8129_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0null8429_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0null8379_failAssert0,interpolations_add7172null7311_failAssert0_add8123_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0null8385_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7805_failAssert0,interpolations_add7172null7310_failAssert0_literalMutationString7593_failAssert0,interpolations_add7172_literalMutationString7206_failAssert0_literalMutationString8019_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_add8294_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8234_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0null8428_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_literalMutationString7804_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7787_failAssert0,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0_literalMutationString7752_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_add8339_failAssert0,interpolations_add7172null7310_failAssert0_literalMutationString7591_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_add8193_failAssert0,interpolations_add7172null7310_failAssert0_add8128_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8232_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7786_failAssert0,interpolations_add7172null7311_failAssert0_literalMutationString7586_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8239_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7790_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_add8231_failAssert0,interpolations_literalMutationString7167_failAssert0_literalMutationString7221_failAssert0_literalMutationString7903_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0_add8238_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0null8432_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_add8256_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8397_failAssert0,interpolations_add7172null7310_failAssert0_add8126_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8229_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_literalMutationString7683_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString7998_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7234_failAssert0_add8329_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0null8375_failAssert0,interpolations_literalMutationString7168_failAssert0_add7297_failAssert0null8396_failAssert0,interpolations_literalMutationString7167_failAssert0_add7296_failAssert0null8387_failAssert0,interpolations_add7172_add7243_literalMutationString7550_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7237_failAssert0_literalMutationString7705_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8228_failAssert0,interpolations_add7172null7311_failAssert0null8357_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_literalMutationString7783_failAssert0,interpolations_literalMutationString7165_failAssert0_add7306_failAssert0_literalMutationString7864_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_literalMutationString7685_failAssert0,interpolations_add7172_add7243null8353_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7232_failAssert0_add8182_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_literalMutationString7986_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_add8211_failAssert0,interpolationsnull7174_failAssert0_add7290_failAssert0_add8274_failAssert0,interpolations_add7172null7311_failAssert0_literalMutationString7590_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_add8261_failAssert0,interpolations_add7172_add7243null8352_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8404_failAssert0,interpolationsnull7174_failAssert0_add7290_failAssert0_add8273_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_literalMutationString7728_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0null8393_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0null8378_failAssert0,interpolations_add7172_add7243null8351_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0null8403_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8384_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7239_failAssert0_literalMutationString8001_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_literalMutationString7698_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7235_failAssert0_add8178_failAssert0,interpolations_literalMutationString7168_failAssert0_add7298_failAssert0_literalMutationString7800_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0null8383_failAssert0,interpolations_literalMutationString7167_failAssert0_add7294_failAssert0_add8207_failAssert0,interpolations_literalMutationString7167_failAssert0_add7295_failAssert0_literalMutationString7738_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7236_failAssert0_add8332_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7704_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0_literalMutationString7867_failAssert0,interpolations_literalMutationString7165_failAssert0_add7307_failAssert0_literalMutationString7846_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_literalMutationString7703_failAssert0,interpolations_literalMutationString7169_failAssert0_literalMutationString7233_failAssert0null8376_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7242_failAssert0_add8187_failAssert0,interpolations_literalMutationString7165_failAssert0_literalMutationString7238_failAssert0_add8191_failAssert0,interpolations_literalMutationString7165_failAssert0_add7308_failAssert0null8407_failAssert0,interpolations_literalMutationString7168_failAssert0_add7299_failAssert0_add8230_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] elapsedTime 91941
[DEBUG] OPTIMIZATION: GC invoked
[WARNING] DSpot could not obtain any amplified test method.
[WARNING] You can customize the following options: --amplifiers, --test-criterion, --iteration, --budgetizer etc, and retry with a new configuration.
[INFO] Amplification of com.github.mustachejava.ConvertMethodsToFunctionsTest (1 test(s))
[INFO] Assertion amplification of com.github.mustachejava.ConvertMethodsToFunctionsTest (1 test(s))
[INFO] Using /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/pom.xml to run maven.
[INFO] Using /usr/share/maven/ for maven home
[INFO] run maven: /usr/share/maven//bin/mvn clean test -DskipTests
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building compiler 0.9.5-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ compiler ---
[INFO] Deleting /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ compiler ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default-compile) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:compile (default) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 60 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ compiler ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 112 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.2:testCompile (default-testCompile) @ compiler ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 42 source files to /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/ConcurrencyTest.java: Some input files use or override a deprecated API.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/ConcurrencyTest.java: Recompile with -Xlint:deprecation for details.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java: Some input files use unchecked or unsafe operations.
[INFO] /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/src/test/java/com/github/mustachejava/functions/CommentTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ compiler ---
[INFO] Tests are skipped.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.902 s
[INFO] Finished at: 2019-05-23T22:19:41+02:00
[INFO] Final Memory: 28M/2167M
[INFO] ------------------------------------------------------------------------
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert
[INFO] Run tests. (1)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert
[INFO] 1 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
100% |================================================== ]/
[INFO] Run instrumented tests. (3)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_withlog0:testConvert_withlog1:testConvert_withlog2 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_withlog0:testConvert_withlog1:testConvert_withlog2
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_withlog0,testConvert_withlog1,testConvert_withlog2
[INFO] Generating assertions...
[INFO] 1 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert
[INFO] Assertion amplification: 1 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:43 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:43 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:43 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] Applying Input-amplification and Assertion-amplification test by test.
[INFO] Amplification of testConvert, (1/1)
[INFO] iteration 0 / 3
[INFO] 1 tests selected to be amplified over 1 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 94ms
  1% | ]/ 49% |======================== ]/[INFO] 65 new tests generated
[INFO] Run tests. (65)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61:testConvertnull63:testConvertnull62:testConvertnull64:testConvertnull65:testConvert_literalMutationString15:testConvert_literalMutationString18:testConvert_literalMutationString12:testConvert_literalMutationString29:testConvert_literalMutationString17:testConvert_literalMutationString23:testConvert_literalMutationString13:testConvert_literalMutationString20:testConvert_literalMutationString32:testConvert_literalMutationString35:testConvert_literalMutationString31:testConvert_literalMutationString25:testConvert_literalMutationString9:testConvert_literalMutationString7:testConvert_literalMutationString11:testConvert_literalMutationString16:testConvert_literalMutationString6:testConvert_literalMutationString3:testConvert_literalMutationString37:testConvert_literalMutationString1:testConvert_literalMutationString2:testConvert_literalMutationString34:testConvert_literalMutationString10:testConvert_literalMutationString8:testConvert_literalMutationString38:testConvert_add53:testConvert_add52:testConvert_add46:testConvert_add43:testConvert_add47:testConvert_add50:testConvert_add44:testConvert_add45:testConvert_add49:testConvert_add51:testConvert_add48:testConvert_remove56:testConvert_remove54:testConvert_remove57:testConvert_remove60:testConvert_remove59:testConvert_remove58:testConvert_remove55:testConvert_literalMutationString41:testConvert_literalMutationString24:testConvert_literalMutationString40:testConvert_literalMutationString27:testConvert_literalMutationString19:testConvert_literalMutationString5:testConvert_literalMutationString39:testConvert_literalMutationString14:testConvert_literalMutationString22:testConvert_literalMutationString28:testConvert_literalMutationString21:testConvert_literalMutationString26:testConvert_literalMutationString4:testConvert_literalMutationString36:testConvert_literalMutationString30:testConvert_literalMutationString33:testConvert_literalMutationString42 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61:testConvertnull63:testConvertnull62:testConvertnull64:testConvertnull65:testConvert_literalMutationString15:testConvert_literalMutationString18:testConvert_literalMutationString12:testConvert_literalMutationString29:testConvert_literalMutationString17:testConvert_literalMutationString23:testConvert_literalMutationString13:testConvert_literalMutationString20:testConvert_literalMutationString32:testConvert_literalMutationString35:testConvert_literalMutationString31:testConvert_literalMutationString25:testConvert_literalMutationString9:testConvert_literalMutationString7:testConvert_literalMutationString11:testConvert_literalMutationString16:testConvert_literalMutationString6:testConvert_literalMutationString3:testConvert_literalMutationString37:testConvert_literalMutationString1:testConvert_literalMutationString2:testConvert_literalMutationString34:testConvert_literalMutationString10:testConvert_literalMutationString8:testConvert_literalMutationString38:testConvert_add53:testConvert_add52:testConvert_add46:testConvert_add43:testConvert_add47:testConvert_add50:testConvert_add44:testConvert_add45:testConvert_add49:testConvert_add51:testConvert_add48:testConvert_remove56:testConvert_remove54:testConvert_remove57:testConvert_remove60:testConvert_remove59:testConvert_remove58:testConvert_remove55:testConvert_literalMutationString41:testConvert_literalMutationString24:testConvert_literalMutationString40:testConvert_literalMutationString27:testConvert_literalMutationString19:testConvert_literalMutationString5:testConvert_literalMutationString39:testConvert_literalMutationString14:testConvert_literalMutationString22:testConvert_literalMutationString28:testConvert_literalMutationString21:testConvert_literalMutationString26:testConvert_literalMutationString4:testConvert_literalMutationString36:testConvert_literalMutationString30:testConvert_literalMutationString33:testConvert_literalMutationString42
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_remove56,testConvert_remove57,testConvert_remove59,testConvert_remove60,testConvert_add43,testConvert_add44,testConvert_add47,testConvert_add48,testConvert_add49,testConvert_add52,testConvert_add53,testConvertnull61,testConvert_literalMutationString10,testConvert_literalMutationString11,testConvert_literalMutationString12,testConvert_literalMutationString7,testConvert_literalMutationString8,testConvert_literalMutationString9,testConvert_remove54(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_remove55(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_remove58(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_add45(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TEST[]> but was:<TEST[TEST]>,testConvert_add46(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TEST[]> but was:<TEST[TEST]>,testConvert_add50(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<test[]> but was:<test[test]>,testConvert_add51(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<test[]> but was:<test[test]>,testConvertnull62(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvertnull63(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvertnull64(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[uppertest:1],testConvertnull65(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvert_literalMutationString13(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_literalMutationString14(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TE[S]T> but was:<TE[]T>,testConvert_literalMutationString15(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TES]T> but was:<[PAGE1.TX]T>,testConvert_literalMutationString16(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[T]EST> but was:<[V]EST>,testConvert_literalMutationString17(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<T[]EST> but was:<T[B]EST>,testConvert_literalMutationString18(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[J/X2]>,testConvert_literalMutationString19(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[]> but was:<[TEST]>,testConvert_literalMutationString20(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[page1.txt]> but was:<[TEST]>,testConvert_literalMutationString21(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<T[]ST> but was:<T[E]ST>,testConvert_literalMutationString22(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TE[E]ST> but was:<TE[]ST>,testConvert_literalMutationString23(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<T[q]ST> but was:<T[E]ST>,testConvert_literalMutationString24(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[/Hp2]> but was:<[TEST]>,testConvert_literalMutationString25(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_literalMutationString26(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<te[s]t> but was:<te[]t>,testConvert_literalMutationString27(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[tes]t> but was:<[page1.tx]t>,testConvert_literalMutationString28(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<te[]st> but was:<te[5]st>,testConvert_literalMutationString29(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[qS*I]>,testConvert_literalMutationString30(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[t]est> but was:<[2]est>,testConvert_literalMutationString31(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_literalMutationString32(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_literalMutationString33(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[][@&Vv$7h]>,testConvert_literalMutationString34(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[tes]t> but was:<[page1.tx]t>,testConvert_literalMutationString35(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[&{test2}}]>,testConvert_literalMutationString36(com.github.mustachejava.ConvertMethodsToFunctionsTest): Improperly closed variable @[uppertest:1],testConvert_literalMutationString37(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[]> but was:<[test]>,testConvert_literalMutationString38(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[C{U/]> but was:<[test]>,testConvert_literalMutationString39(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[page1.tx]t> but was:<[tes]t>,testConvert_literalMutationString40(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<t[_]est> but was:<t[]est>,testConvert_literalMutationString41(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<t[]st> but was:<t[e]st>,testConvert_literalMutationString42(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<t[}]st> but was:<t[e]st>,testConvert_literalMutationString1(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_literalMutationString2(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_literalMutationString3(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[page1.txt]>,testConvert_literalMutationString4(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[#,GA4F?C-?k=<05=1#tQDS0N$(!:]>,testConvert_literalMutationString5(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_literalMutationString6(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[{={TEST}}]>
[INFO] 18 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  5% |======================== ]/ 11% |======================== ]- 16% |======================== ]\ 22% |======================== ]| 27% |======================== ]/ 33% |======================== ]- 38% |======================== ]\ 44% |======================== ]| 50% |========================= ]/ 55% |=========================== ]- 61% |============================== ]\ 66% |================================= ]| 72% |==================================== ]/ 77% |====================================== ]- 83% |========================================= ]\ 88% |============================================ ]| 94% |=============================================== ]/100% |================================================== ]-
[INFO] Run instrumented tests. (54)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[ERROR] Error(s) during compilation:
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61_withlog0:testConvert_literalMutationString12_withlog0:testConvert_literalMutationString9_withlog0:testConvert_literalMutationString7_withlog0:testConvert_literalMutationString11_withlog0:testConvert_literalMutationString10_withlog0:testConvert_literalMutationString8_withlog0:testConvert_add53_withlog0:testConvert_add52_withlog0:testConvert_add43_withlog0:testConvert_add44_withlog0:testConvert_add49_withlog0:testConvert_add48_withlog0:testConvert_remove56_withlog0:testConvert_remove57_withlog0:testConvert_remove60_withlog0:testConvert_remove59_withlog0:testConvertnull61_withlog1:testConvert_literalMutationString12_withlog1:testConvert_literalMutationString9_withlog1:testConvert_literalMutationString7_withlog1:testConvert_literalMutationString11_withlog1:testConvert_literalMutationString10_withlog1:testConvert_literalMutationString8_withlog1:testConvert_add53_withlog1:testConvert_add52_withlog1:testConvert_add43_withlog1:testConvert_add44_withlog1:testConvert_add49_withlog1:testConvert_add48_withlog1:testConvert_remove56_withlog1:testConvert_remove57_withlog1:testConvert_remove60_withlog1:testConvert_remove59_withlog1:testConvertnull61_withlog2:testConvert_literalMutationString12_withlog2:testConvert_literalMutationString9_withlog2:testConvert_literalMutationString7_withlog2:testConvert_literalMutationString11_withlog2:testConvert_literalMutationString10_withlog2:testConvert_literalMutationString8_withlog2:testConvert_add53_withlog2:testConvert_add52_withlog2:testConvert_add43_withlog2:testConvert_add44_withlog2:testConvert_add49_withlog2:testConvert_add48_withlog2:testConvert_remove56_withlog2:testConvert_remove57_withlog2:testConvert_remove60_withlog2:testConvert_remove59_withlog2 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61_withlog0:testConvert_literalMutationString12_withlog0:testConvert_literalMutationString9_withlog0:testConvert_literalMutationString7_withlog0:testConvert_literalMutationString11_withlog0:testConvert_literalMutationString10_withlog0:testConvert_literalMutationString8_withlog0:testConvert_add53_withlog0:testConvert_add52_withlog0:testConvert_add43_withlog0:testConvert_add44_withlog0:testConvert_add49_withlog0:testConvert_add48_withlog0:testConvert_remove56_withlog0:testConvert_remove57_withlog0:testConvert_remove60_withlog0:testConvert_remove59_withlog0:testConvertnull61_withlog1:testConvert_literalMutationString12_withlog1:testConvert_literalMutationString9_withlog1:testConvert_literalMutationString7_withlog1:testConvert_literalMutationString11_withlog1:testConvert_literalMutationString10_withlog1:testConvert_literalMutationString8_withlog1:testConvert_add53_withlog1:testConvert_add52_withlog1:testConvert_add43_withlog1:testConvert_add44_withlog1:testConvert_add49_withlog1:testConvert_add48_withlog1:testConvert_remove56_withlog1:testConvert_remove57_withlog1:testConvert_remove60_withlog1:testConvert_remove59_withlog1:testConvertnull61_withlog2:testConvert_literalMutationString12_withlog2:testConvert_literalMutationString9_withlog2:testConvert_literalMutationString7_withlog2:testConvert_literalMutationString11_withlog2:testConvert_literalMutationString10_withlog2:testConvert_literalMutationString8_withlog2:testConvert_add53_withlog2:testConvert_add52_withlog2:testConvert_add43_withlog2:testConvert_add44_withlog2:testConvert_add49_withlog2:testConvert_add48_withlog2:testConvert_remove56_withlog2:testConvert_remove57_withlog2:testConvert_remove60_withlog2:testConvert_remove59_withlog2
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_remove57_withlog0,testConvert_remove57_withlog1,testConvert_remove57_withlog2,testConvert_remove56_withlog0,testConvert_remove56_withlog1,testConvert_remove56_withlog2,testConvert_literalMutationString12_withlog0,testConvert_literalMutationString12_withlog1,testConvert_literalMutationString12_withlog2,testConvert_literalMutationString11_withlog0,testConvert_literalMutationString11_withlog1,testConvert_literalMutationString11_withlog2,testConvert_literalMutationString10_withlog0,testConvert_literalMutationString10_withlog1,testConvert_literalMutationString10_withlog2,testConvert_literalMutationString9_withlog0,testConvert_literalMutationString9_withlog1,testConvert_literalMutationString9_withlog2,testConvert_literalMutationString8_withlog0,testConvert_literalMutationString8_withlog1,testConvert_literalMutationString8_withlog2,testConvert_literalMutationString7_withlog0,testConvert_literalMutationString7_withlog1,testConvert_literalMutationString7_withlog2,testConvert_add53_withlog0,testConvert_add53_withlog1,testConvert_add53_withlog2,testConvert_add52_withlog0,testConvert_add52_withlog1,testConvert_add52_withlog2,testConvert_add49_withlog0,testConvert_add49_withlog1,testConvert_add49_withlog2,testConvert_add48_withlog0,testConvert_add48_withlog1,testConvert_add48_withlog2,testConvertnull61_withlog0,testConvertnull61_withlog1,testConvertnull61_withlog2,testConvert_add44_withlog0,testConvert_add44_withlog1,testConvert_add44_withlog2,testConvert_add43_withlog0,testConvert_add43_withlog1,testConvert_add43_withlog2,testConvert_remove60_withlog0,testConvert_remove60_withlog1,testConvert_remove60_withlog2,testConvert_remove59_withlog0,testConvert_remove59_withlog1,testConvert_remove59_withlog2
[INFO] Generating assertions...
[INFO] 47 test fail, generating try/catch/fail blocks...
[INFO] 22 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61:testConvert_literalMutationString12:testConvert_literalMutationString9:testConvert_literalMutationString7:testConvert_literalMutationString11:testConvert_literalMutationString10:testConvert_literalMutationString8:testConvert_add53:testConvert_add52:testConvert_add43:testConvert_add44:testConvert_add49:testConvert_add48:testConvert_remove56:testConvert_remove57:testConvert_remove60:testConvert_remove59:testConvertnull62_failAssert0:testConvertnull64_failAssert0:testConvert_literalMutationString1_failAssert0:testConvert_literalMutationString5_failAssert0:testConvert_literalMutationString36_failAssert0 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61:testConvert_literalMutationString12:testConvert_literalMutationString9:testConvert_literalMutationString7:testConvert_literalMutationString11:testConvert_literalMutationString10:testConvert_literalMutationString8:testConvert_add53:testConvert_add52:testConvert_add43:testConvert_add44:testConvert_add49:testConvert_add48:testConvert_remove56:testConvert_remove57:testConvert_remove60:testConvert_remove59:testConvertnull62_failAssert0:testConvertnull64_failAssert0:testConvert_literalMutationString1_failAssert0:testConvert_literalMutationString5_failAssert0:testConvert_literalMutationString36_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_literalMutationString1_failAssert0,testConvertnull62_failAssert0,testConvert_literalMutationString36_failAssert0,testConvert_remove56,testConvert_remove57,testConvert_remove59,testConvert_remove60,testConvert_add43,testConvert_add44,testConvert_add48,testConvert_add49,testConvert_add52,testConvert_add53,testConvertnull61,testConvert_literalMutationString10,testConvert_literalMutationString11,testConvert_literalMutationString12,testConvert_literalMutationString5_failAssert0,testConvert_literalMutationString7,testConvert_literalMutationString8,testConvert_literalMutationString9,testConvertnull64_failAssert0
[INFO] Assertion amplification: 22 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:47 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:47 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:47 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61:testConvert_literalMutationString12:testConvert_literalMutationString9:testConvert_literalMutationString7:testConvert_literalMutationString11:testConvert_literalMutationString10:testConvert_literalMutationString8:testConvert_add53:testConvert_add52:testConvert_add43:testConvert_add44:testConvert_add49:testConvert_add48:testConvert_remove56:testConvert_remove57:testConvert_remove60:testConvert_remove59:testConvertnull62_failAssert0:testConvertnull64_failAssert0:testConvert_literalMutationString1_failAssert0:testConvert_literalMutationString5_failAssert0:testConvert_literalMutationString36_failAssert0 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvertnull61:testConvert_literalMutationString12:testConvert_literalMutationString9:testConvert_literalMutationString7:testConvert_literalMutationString11:testConvert_literalMutationString10:testConvert_literalMutationString8:testConvert_add53:testConvert_add52:testConvert_add43:testConvert_add44:testConvert_add49:testConvert_add48:testConvert_remove56:testConvert_remove57:testConvert_remove60:testConvert_remove59:testConvertnull62_failAssert0:testConvertnull64_failAssert0:testConvert_literalMutationString1_failAssert0:testConvert_literalMutationString5_failAssert0:testConvert_literalMutationString36_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_literalMutationString1_failAssert0,testConvertnull62_failAssert0,testConvert_literalMutationString36_failAssert0,testConvert_remove56,testConvert_remove57,testConvert_remove59,testConvert_remove60,testConvert_add43,testConvert_add44,testConvert_add48,testConvert_add49,testConvert_add52,testConvert_add53,testConvertnull61,testConvert_literalMutationString10,testConvert_literalMutationString11,testConvert_literalMutationString12,testConvert_literalMutationString5_failAssert0,testConvert_literalMutationString7,testConvert_literalMutationString8,testConvert_literalMutationString9,testConvertnull64_failAssert0
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 1 / 3
[INFO] 22 tests selected to be amplified over 22 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 2441ms
  1% | ]/ 84% |========================================== ]|100% |================================================== ]|
[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[ERROR] Error(s) during compilation:
[ERROR] Pb(100) The method isRecursive() is undefined for the type Mustache
[ERROR] Pb(100) The method isRecursive() is undefined for the type Mustache
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add52null1695:testConvert_add53null1685:testConvert_add43null1696:testConvert_add44null1702:testConvert_remove60null1730:testConvert_add48null1712:testConvert_literalMutationString7null1668:testConvert_add49null1708:testConvert_literalMutationString11null1674:testConvert_literalMutationString8null1683:testConvert_literalMutationString12null1656:testConvert_literalMutationString9null1664:testConvert_literalMutationString1_failAssert0null1746:testConvert_literalMutationString10null1679:testConvertnull61null1653:testConvert_literalMutationString36_failAssert0null1755:testConvertnull62_failAssert0null1738:testConvert_remove57null1723:testConvert_literalMutationString5_failAssert0null1751:testConvert_remove56null1720:testConvert_remove59null1732:testConvertnull64_failAssert0null1740:testConvert_add52_literalMutationString573:testConvert_add53_literalMutationString506:testConvert_add43_literalMutationString608:testConvert_add44_literalMutationString676:testConvert_remove60_literalMutationString858:testConvert_add48_literalMutationString764:testConvert_literalMutationString7_literalMutationString367:testConvert_add49_literalMutationString704:testConvert_literalMutationString11_literalMutationString411:testConvert_literalMutationString8_literalMutationString475:testConvert_literalMutationString12_literalMutationString279:testConvert_literalMutationString9_literalMutationString327:testConvert_literalMutationString1_failAssert0_literalMutationString1029:testConvert_literalMutationString10_literalMutationString432:testConvertnull61_literalMutationString239:testConvert_literalMutationString36_failAssert0_literalMutationString1121:testConvertnull62_failAssert0_literalMutationString940:testConvert_remove57_literalMutationString847:testConvert_literalMutationString5_failAssert0_literalMutationString1094:testConvert_remove56_literalMutationString808:testConvert_remove59_literalMutationString921:testConvertnull64_failAssert0_literalMutationString1005:testConvert_add52_add1296:testConvert_add53_add1286:testConvert_add43_add1319:testConvert_add44_add1358:testConvert_remove60_add1442:testConvert_add48_add1395:testConvert_literalMutationString7_add1214:testConvert_add49_add1367:testConvert_literalMutationString11_add1230:testConvert_literalMutationString8_add1268:testConvert_literalMutationString12_add1168:testConvert_literalMutationString9_add1181:testConvert_literalMutationString1_failAssert0_add1497:testConvert_literalMutationString10_add1244:testConvertnull61_add1142:testConvert_literalMutationString36_failAssert0_add1528:testConvertnull62_failAssert0_add1482:testConvert_remove57_add1430:testConvert_literalMutationString5_failAssert0_add1514:testConvert_remove56_add1409:testConvertnull64_failAssert0_add1484:testConvert_add52_remove1588:testConvert_add53_remove1582:testConvert_add43_remove1603:testConvert_add44_remove1609:testConvert_remove60_remove1644:testConvert_add48_remove1622:testConvert_literalMutationString7_remove1556:testConvert_add49_remove1613:testConvert_literalMutationString11_remove1565:testConvert_literalMutationString8_remove1579:testConvert_literalMutationString12_remove1540:testConvert_literalMutationString9_remove1545:testConvert_literalMutationString10_remove1568:testConvertnull61_remove1533:testConvert_remove57_remove1638:testConvert_remove56_remove1627:testConvert_remove59_remove1645:testConvert_add52null1690:testConvert_add53null1689:testConvert_add43null1699:testConvert_add44null1704:testConvert_add52_literalMutationString570:testConvert_add53_literalMutationString518:testConvert_add43_literalMutationString627:testConvert_add44_literalMutationString635:testConvert_add52_add1312:testConvert_add53_add1280:testConvert_add43_add1332:testConvert_add52_remove1589:testConvert_add53_remove1585:testConvert_add43_remove1597:testConvert_add44_remove1604:testConvert_remove56_add1418 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add52null1695:testConvert_add53null1685:testConvert_add43null1696:testConvert_add44null1702:testConvert_remove60null1730:testConvert_add48null1712:testConvert_literalMutationString7null1668:testConvert_add49null1708:testConvert_literalMutationString11null1674:testConvert_literalMutationString8null1683:testConvert_literalMutationString12null1656:testConvert_literalMutationString9null1664:testConvert_literalMutationString1_failAssert0null1746:testConvert_literalMutationString10null1679:testConvertnull61null1653:testConvert_literalMutationString36_failAssert0null1755:testConvertnull62_failAssert0null1738:testConvert_remove57null1723:testConvert_literalMutationString5_failAssert0null1751:testConvert_remove56null1720:testConvert_remove59null1732:testConvertnull64_failAssert0null1740:testConvert_add52_literalMutationString573:testConvert_add53_literalMutationString506:testConvert_add43_literalMutationString608:testConvert_add44_literalMutationString676:testConvert_remove60_literalMutationString858:testConvert_add48_literalMutationString764:testConvert_literalMutationString7_literalMutationString367:testConvert_add49_literalMutationString704:testConvert_literalMutationString11_literalMutationString411:testConvert_literalMutationString8_literalMutationString475:testConvert_literalMutationString12_literalMutationString279:testConvert_literalMutationString9_literalMutationString327:testConvert_literalMutationString1_failAssert0_literalMutationString1029:testConvert_literalMutationString10_literalMutationString432:testConvertnull61_literalMutationString239:testConvert_literalMutationString36_failAssert0_literalMutationString1121:testConvertnull62_failAssert0_literalMutationString940:testConvert_remove57_literalMutationString847:testConvert_literalMutationString5_failAssert0_literalMutationString1094:testConvert_remove56_literalMutationString808:testConvert_remove59_literalMutationString921:testConvertnull64_failAssert0_literalMutationString1005:testConvert_add52_add1296:testConvert_add53_add1286:testConvert_add43_add1319:testConvert_add44_add1358:testConvert_remove60_add1442:testConvert_add48_add1395:testConvert_literalMutationString7_add1214:testConvert_add49_add1367:testConvert_literalMutationString11_add1230:testConvert_literalMutationString8_add1268:testConvert_literalMutationString12_add1168:testConvert_literalMutationString9_add1181:testConvert_literalMutationString1_failAssert0_add1497:testConvert_literalMutationString10_add1244:testConvertnull61_add1142:testConvert_literalMutationString36_failAssert0_add1528:testConvertnull62_failAssert0_add1482:testConvert_remove57_add1430:testConvert_literalMutationString5_failAssert0_add1514:testConvert_remove56_add1409:testConvertnull64_failAssert0_add1484:testConvert_add52_remove1588:testConvert_add53_remove1582:testConvert_add43_remove1603:testConvert_add44_remove1609:testConvert_remove60_remove1644:testConvert_add48_remove1622:testConvert_literalMutationString7_remove1556:testConvert_add49_remove1613:testConvert_literalMutationString11_remove1565:testConvert_literalMutationString8_remove1579:testConvert_literalMutationString12_remove1540:testConvert_literalMutationString9_remove1545:testConvert_literalMutationString10_remove1568:testConvertnull61_remove1533:testConvert_remove57_remove1638:testConvert_remove56_remove1627:testConvert_remove59_remove1645:testConvert_add52null1690:testConvert_add53null1689:testConvert_add43null1699:testConvert_add44null1704:testConvert_add52_literalMutationString570:testConvert_add53_literalMutationString518:testConvert_add43_literalMutationString627:testConvert_add44_literalMutationString635:testConvert_add52_add1312:testConvert_add53_add1280:testConvert_add43_add1332:testConvert_add52_remove1589:testConvert_add53_remove1585:testConvert_add43_remove1597:testConvert_add44_remove1604:testConvert_remove56_add1418
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_literalMutationString12_add1168,testConvert_add49_add1367,testConvert_literalMutationString9_add1181,testConvert_add48_remove1622,testConvertnull61_add1142,testConvert_add49_remove1613,testConvert_remove57_add1430,testConvert_add44_add1358,testConvert_add52null1690,testConvert_literalMutationString10_remove1568,testConvert_remove57null1723,testConvert_literalMutationString11_remove1565,testConvert_add44null1702,testConvert_literalMutationString12_remove1540,testConvert_literalMutationString11_add1230,testConvert_add48_add1395,testConvert_literalMutationString8_add1268,testConvert_add44_literalMutationString635,testConvert_remove56_add1409,testConvert_remove56_add1418,testConvert_remove60_remove1644,testConvert_add43_add1319,testConvert_add43_add1332,testConvert_add48null1712,testConvert_add53_literalMutationString506,testConvert_add53null1685,testConvert_add43null1696,testConvert_remove57_remove1638,testConvert_add53_remove1582,testConvert_add53_remove1585,testConvert_literalMutationString10_add1244,testConvert_literalMutationString8_remove1579,testConvert_literalMutationString7_add1214,testConvert_add43_remove1597,testConvert_add43_remove1603,testConvertnull61_remove1533,testConvert_add52_add1296,testConvert_add52_add1312,testConvert_add44_remove1609,testConvert_literalMutationString36_failAssert0_add1528(com.github.mustachejava.ConvertMethodsToFunctionsTest): Improperly closed variable @[uppertest:1],testConvertnull62_failAssert0null1738(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_remove60_add1442(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TEST[]> but was:<TEST[TEST]>,testConvertnull61_literalMutationString239(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[tes]t> but was:<[page1.tx]t>,testConvertnull64_failAssert0null1740(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[null:1],testConvert_literalMutationString5_failAssert0_add1514(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_literalMutationString10null1679(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvert_literalMutationString36_failAssert0_literalMutationString1121(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<T[m]EST> but was:<T[]EST>,testConvert_literalMutationString7null1668(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[:1],testConvert_literalMutationString1_failAssert0null1746(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_add52null1695(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvert_remove56_literalMutationString808(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_remove57_literalMutationString847(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[]> but was:<[test]>,testConvert_remove59_literalMutationString921(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[tes]t> but was:<[page1.tx]t>,testConvert_literalMutationString36_failAssert0null1755(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_remove60null1730(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[uppertest:1],testConvertnull64_failAssert0_literalMutationString1005(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString12null1656(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add49null1708(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString9null1664(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvertnull61null1653(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[null:1],testConvert_remove60_literalMutationString858(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvertnull62_failAssert0_literalMutationString940(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString5_failAssert0null1751(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_add44null1704(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_literalMutationString1_failAssert0_literalMutationString1029(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_add43_literalMutationString608(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TE[]T> but was:<TE[S]T>,testConvert_add43_literalMutationString627(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[page1.tx]t> but was:<[tes]t>,testConvert_add53_add1280(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TEST[]> but was:<TEST[TEST]>,testConvert_add53_add1286(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<test[]> but was:<test[test]>,testConvert_add44_literalMutationString676(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_remove59null1732(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add48_literalMutationString764(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_add49_literalMutationString704(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[]> but was:<[TEST]>,testConvert_literalMutationString5_failAssert0_literalMutationString1094(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_literalMutationString10_literalMutationString432(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<T[]EST> but was:<T[T]EST>,testConvert_literalMutationString11_literalMutationString411(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[page1.tx]t> but was:<[tes]t>,testConvert_literalMutationString12_literalMutationString279(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[SHK#]>,testConvert_literalMutationString11null1674(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvert_add52_literalMutationString570(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[tes]t> but was:<[page1.tx]t>,testConvert_add52_literalMutationString573(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[{ztest2}}]>,testConvert_add53_literalMutationString518(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[page1.txt]> but was:<[TEST]>,testConvertnull62_failAssert0_add1482(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString7_literalMutationString367(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[]> but was:<[test]>,testConvert_literalMutationString8null1683(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[page1.txt:1],testConvert_literalMutationString8_literalMutationString475(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[]> but was:<[TEST]>,testConvert_literalMutationString9_literalMutationString327(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[9[%bz*ZR ]>,testConvert_add53null1689(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvert_remove56_remove1627(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_remove56null1720(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_add52_remove1588(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_add52_remove1589(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_add43null1699(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[uppertest:1],testConvertnull64_failAssert0_add1484(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[uppertest:1],testConvert_literalMutationString7_remove1556(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_remove59_remove1645(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_literalMutationString9_remove1545(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_literalMutationString1_failAssert0_add1497(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_add44_remove1604(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>
[INFO] 39 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  2% |= ]/  5% |== ]-  7% |=== ]\ 10% |===== ]| 12% |====== ]/ 15% |======= ]- 17% |======== ]\ 20% |========== ]| 23% |=========== ]/ 25% |============ ]- 28% |============== ]\ 30% |=============== ]| 33% |================ ]/ 35% |================= ]- 38% |=================== ]\ 41% |==================== ]| 43% |===================== ]/ 46% |======================= ]- 48% |======================== ]\ 51% |========================= ]| 53% |========================== ]/ 56% |============================ ]- 58% |============================= ]\ 61% |============================== ]| 64% |================================ ]/ 66% |================================= ]- 69% |================================== ]\ 71% |=================================== ]| 74% |===================================== ]/ 76% |====================================== ]- 79% |======================================= ]\ 82% |========================================= ]| 84% |========================================== ]/ 87% |=========================================== ]- 89% |============================================ ]\ 92% |============================================== ]| 94% |=============================================== ]/ 97% |================================================ ]-100% |================================================== ]\
[INFO] Run instrumented tests. (117)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[ERROR] Error(s) during compilation:
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add53null1685_withlog0:testConvert_add43null1696_withlog0:testConvert_add44null1702_withlog0:testConvert_add48null1712_withlog0:testConvert_remove57null1723_withlog0:testConvert_add53_literalMutationString506_withlog0:testConvert_add52_add1296_withlog0:testConvert_add43_add1319_withlog0:testConvert_add44_add1358_withlog0:testConvert_add48_add1395_withlog0:testConvert_literalMutationString7_add1214_withlog0:testConvert_literalMutationString11_add1230_withlog0:testConvert_literalMutationString8_add1268_withlog0:testConvert_literalMutationString9_add1181_withlog0:testConvertnull61_add1142_withlog0:testConvert_remove57_add1430_withlog0:testConvert_remove56_add1409_withlog0:testConvert_add53_remove1582_withlog0:testConvert_add43_remove1603_withlog0:testConvert_add44_remove1609_withlog0:testConvert_remove60_remove1644_withlog0:testConvert_add48_remove1622_withlog0:testConvert_add49_remove1613_withlog0:testConvert_literalMutationString11_remove1565_withlog0:testConvert_literalMutationString8_remove1579_withlog0:testConvert_literalMutationString12_remove1540_withlog0:testConvert_literalMutationString10_remove1568_withlog0:testConvertnull61_remove1533_withlog0:testConvert_remove57_remove1638_withlog0:testConvert_add52null1690_withlog0:testConvert_add44_literalMutationString635_withlog0:testConvert_add52_add1312_withlog0:testConvert_add43_add1332_withlog0:testConvert_add53_remove1585_withlog0:testConvert_add43_remove1597_withlog0:testConvert_remove56_add1418_withlog0:testConvert_add53null1685_withlog1:testConvert_add43null1696_withlog1:testConvert_add44null1702_withlog1:testConvert_add48null1712_withlog1:testConvert_remove57null1723_withlog1:testConvert_add53_literalMutationString506_withlog1:testConvert_add52_add1296_withlog1:testConvert_add43_add1319_withlog1:testConvert_add44_add1358_withlog1:testConvert_add48_add1395_withlog1:testConvert_literalMutationString7_add1214_withlog1:testConvert_literalMutationString11_add1230_withlog1:testConvert_literalMutationString8_add1268_withlog1:testConvert_literalMutationString9_add1181_withlog1:testConvertnull61_add1142_withlog1:testConvert_remove57_add1430_withlog1:testConvert_remove56_add1409_withlog1:testConvert_add53_remove1582_withlog1:testConvert_add43_remove1603_withlog1:testConvert_add44_remove1609_withlog1:testConvert_remove60_remove1644_withlog1:testConvert_add48_remove1622_withlog1:testConvert_add49_remove1613_withlog1:testConvert_literalMutationString11_remove1565_withlog1:testConvert_literalMutationString8_remove1579_withlog1:testConvert_literalMutationString12_remove1540_withlog1:testConvert_literalMutationString10_remove1568_withlog1:testConvertnull61_remove1533_withlog1:testConvert_remove57_remove1638_withlog1:testConvert_add52null1690_withlog1:testConvert_add44_literalMutationString635_withlog1:testConvert_add52_add1312_withlog1:testConvert_add43_add1332_withlog1:testConvert_add53_remove1585_withlog1:testConvert_add43_remove1597_withlog1:testConvert_remove56_add1418_withlog1:testConvert_add53null1685_withlog2:testConvert_add43null1696_withlog2:testConvert_add44null1702_withlog2:testConvert_add48null1712_withlog2:testConvert_remove57null1723_withlog2:testConvert_add53_literalMutationString506_withlog2:testConvert_add52_add1296_withlog2:testConvert_add43_add1319_withlog2:testConvert_add44_add1358_withlog2:testConvert_add48_add1395_withlog2:testConvert_literalMutationString7_add1214_withlog2:testConvert_literalMutationString11_add1230_withlog2:testConvert_literalMutationString8_add1268_withlog2:testConvert_literalMutationString9_add1181_withlog2:testConvertnull61_add1142_withlog2:testConvert_remove57_add1430_withlog2:testConvert_remove56_add1409_withlog2:testConvert_add53_remove1582_withlog2:testConvert_add43_remove1603_withlog2:testConvert_add44_remove1609_withlog2:testConvert_remove60_remove1644_withlog2:testConvert_add48_remove1622_withlog2:testConvert_add49_remove1613_withlog2:testConvert_literalMutationString11_remove1565_withlog2:testConvert_literalMutationString8_remove1579_withlog2:testConvert_literalMutationString12_remove1540_withlog2:testConvert_literalMutationString10_remove1568_withlog2:testConvertnull61_remove1533_withlog2:testConvert_remove57_remove1638_withlog2:testConvert_add52null1690_withlog2:testConvert_add44_literalMutationString635_withlog2:testConvert_add52_add1312_withlog2:testConvert_add43_add1332_withlog2:testConvert_add53_remove1585_withlog2:testConvert_add43_remove1597_withlog2:testConvert_remove56_add1418_withlog2 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add53null1685_withlog0:testConvert_add43null1696_withlog0:testConvert_add44null1702_withlog0:testConvert_add48null1712_withlog0:testConvert_remove57null1723_withlog0:testConvert_add53_literalMutationString506_withlog0:testConvert_add52_add1296_withlog0:testConvert_add43_add1319_withlog0:testConvert_add44_add1358_withlog0:testConvert_add48_add1395_withlog0:testConvert_literalMutationString7_add1214_withlog0:testConvert_literalMutationString11_add1230_withlog0:testConvert_literalMutationString8_add1268_withlog0:testConvert_literalMutationString9_add1181_withlog0:testConvertnull61_add1142_withlog0:testConvert_remove57_add1430_withlog0:testConvert_remove56_add1409_withlog0:testConvert_add53_remove1582_withlog0:testConvert_add43_remove1603_withlog0:testConvert_add44_remove1609_withlog0:testConvert_remove60_remove1644_withlog0:testConvert_add48_remove1622_withlog0:testConvert_add49_remove1613_withlog0:testConvert_literalMutationString11_remove1565_withlog0:testConvert_literalMutationString8_remove1579_withlog0:testConvert_literalMutationString12_remove1540_withlog0:testConvert_literalMutationString10_remove1568_withlog0:testConvertnull61_remove1533_withlog0:testConvert_remove57_remove1638_withlog0:testConvert_add52null1690_withlog0:testConvert_add44_literalMutationString635_withlog0:testConvert_add52_add1312_withlog0:testConvert_add43_add1332_withlog0:testConvert_add53_remove1585_withlog0:testConvert_add43_remove1597_withlog0:testConvert_remove56_add1418_withlog0:testConvert_add53null1685_withlog1:testConvert_add43null1696_withlog1:testConvert_add44null1702_withlog1:testConvert_add48null1712_withlog1:testConvert_remove57null1723_withlog1:testConvert_add53_literalMutationString506_withlog1:testConvert_add52_add1296_withlog1:testConvert_add43_add1319_withlog1:testConvert_add44_add1358_withlog1:testConvert_add48_add1395_withlog1:testConvert_literalMutationString7_add1214_withlog1:testConvert_literalMutationString11_add1230_withlog1:testConvert_literalMutationString8_add1268_withlog1:testConvert_literalMutationString9_add1181_withlog1:testConvertnull61_add1142_withlog1:testConvert_remove57_add1430_withlog1:testConvert_remove56_add1409_withlog1:testConvert_add53_remove1582_withlog1:testConvert_add43_remove1603_withlog1:testConvert_add44_remove1609_withlog1:testConvert_remove60_remove1644_withlog1:testConvert_add48_remove1622_withlog1:testConvert_add49_remove1613_withlog1:testConvert_literalMutationString11_remove1565_withlog1:testConvert_literalMutationString8_remove1579_withlog1:testConvert_literalMutationString12_remove1540_withlog1:testConvert_literalMutationString10_remove1568_withlog1:testConvertnull61_remove1533_withlog1:testConvert_remove57_remove1638_withlog1:testConvert_add52null1690_withlog1:testConvert_add44_literalMutationString635_withlog1:testConvert_add52_add1312_withlog1:testConvert_add43_add1332_withlog1:testConvert_add53_remove1585_withlog1:testConvert_add43_remove1597_withlog1:testConvert_remove56_add1418_withlog1:testConvert_add53null1685_withlog2:testConvert_add43null1696_withlog2:testConvert_add44null1702_withlog2:testConvert_add48null1712_withlog2:testConvert_remove57null1723_withlog2:testConvert_add53_literalMutationString506_withlog2:testConvert_add52_add1296_withlog2:testConvert_add43_add1319_withlog2:testConvert_add44_add1358_withlog2:testConvert_add48_add1395_withlog2:testConvert_literalMutationString7_add1214_withlog2:testConvert_literalMutationString11_add1230_withlog2:testConvert_literalMutationString8_add1268_withlog2:testConvert_literalMutationString9_add1181_withlog2:testConvertnull61_add1142_withlog2:testConvert_remove57_add1430_withlog2:testConvert_remove56_add1409_withlog2:testConvert_add53_remove1582_withlog2:testConvert_add43_remove1603_withlog2:testConvert_add44_remove1609_withlog2:testConvert_remove60_remove1644_withlog2:testConvert_add48_remove1622_withlog2:testConvert_add49_remove1613_withlog2:testConvert_literalMutationString11_remove1565_withlog2:testConvert_literalMutationString8_remove1579_withlog2:testConvert_literalMutationString12_remove1540_withlog2:testConvert_literalMutationString10_remove1568_withlog2:testConvertnull61_remove1533_withlog2:testConvert_remove57_remove1638_withlog2:testConvert_add52null1690_withlog2:testConvert_add44_literalMutationString635_withlog2:testConvert_add52_add1312_withlog2:testConvert_add43_add1332_withlog2:testConvert_add53_remove1585_withlog2:testConvert_add43_remove1597_withlog2:testConvert_remove56_add1418_withlog2
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_remove57_add1430_withlog0,testConvert_remove57_add1430_withlog1,testConvert_remove57_add1430_withlog2,testConvert_add52_add1312_withlog0,testConvert_add52_add1312_withlog1,testConvert_add52_add1312_withlog2,testConvert_add53null1685_withlog0,testConvert_add53null1685_withlog1,testConvert_add53null1685_withlog2,testConvert_literalMutationString8_add1268_withlog0,testConvert_literalMutationString8_add1268_withlog1,testConvert_literalMutationString8_add1268_withlog2,testConvert_add52null1690_withlog0,testConvert_add52null1690_withlog1,testConvert_add52null1690_withlog2,testConvert_remove56_add1409_withlog0,testConvert_remove56_add1409_withlog1,testConvert_remove56_add1409_withlog2,testConvert_literalMutationString10_remove1568_withlog0,testConvert_literalMutationString10_remove1568_withlog1,testConvert_literalMutationString10_remove1568_withlog2,testConvert_add44_remove1609_withlog0,testConvert_add44_remove1609_withlog1,testConvert_add44_remove1609_withlog2,testConvert_add43_add1332_withlog0,testConvert_add43_add1332_withlog1,testConvert_add43_add1332_withlog2,testConvert_add48null1712_withlog0,testConvert_add48null1712_withlog1,testConvert_add48null1712_withlog2,testConvertnull61_add1142_withlog0,testConvertnull61_add1142_withlog1,testConvertnull61_add1142_withlog2,testConvert_add49_remove1613_withlog0,testConvert_add49_remove1613_withlog1,testConvert_add49_remove1613_withlog2,testConvert_literalMutationString9_add1181_withlog0,testConvert_literalMutationString9_add1181_withlog1,testConvert_literalMutationString9_add1181_withlog2,testConvert_literalMutationString8_remove1579_withlog0,testConvert_literalMutationString8_remove1579_withlog1,testConvert_literalMutationString8_remove1579_withlog2,testConvert_literalMutationString11_remove1565_withlog0,testConvert_literalMutationString11_remove1565_withlog1,testConvert_literalMutationString11_remove1565_withlog2,testConvert_literalMutationString11_add1230_withlog0,testConvert_literalMutationString11_add1230_withlog1,testConvert_literalMutationString11_add1230_withlog2,testConvert_add48_add1395_withlog0,testConvert_add48_add1395_withlog1,testConvert_add48_add1395_withlog2,testConvert_add43_remove1603_withlog0,testConvert_add43_remove1603_withlog1,testConvert_add43_remove1603_withlog2,testConvert_add43_remove1597_withlog0,testConvert_add43_remove1597_withlog1,testConvert_add43_remove1597_withlog2,testConvert_add53_remove1585_withlog0,testConvert_add53_remove1585_withlog1,testConvert_add53_remove1585_withlog2,testConvert_literalMutationString12_remove1540_withlog0,testConvert_literalMutationString12_remove1540_withlog1,testConvert_literalMutationString12_remove1540_withlog2,testConvert_add52_add1296_withlog0,testConvert_add52_add1296_withlog1,testConvert_add52_add1296_withlog2,testConvert_add44null1702_withlog0,testConvert_add44null1702_withlog1,testConvert_add44null1702_withlog2,testConvert_add53_remove1582_withlog0,testConvert_add53_remove1582_withlog1,testConvert_add53_remove1582_withlog2,testConvert_literalMutationString7_add1214_withlog0,testConvert_literalMutationString7_add1214_withlog1,testConvert_literalMutationString7_add1214_withlog2,testConvert_remove57null1723_withlog0,testConvert_remove57null1723_withlog1,testConvert_remove57null1723_withlog2,testConvert_add44_literalMutationString635_withlog0,testConvert_add44_literalMutationString635_withlog1,testConvert_add44_literalMutationString635_withlog2,testConvert_remove60_remove1644_withlog0,testConvert_remove60_remove1644_withlog1,testConvert_remove60_remove1644_withlog2,testConvertnull61_remove1533_withlog0,testConvertnull61_remove1533_withlog1,testConvertnull61_remove1533_withlog2,testConvert_add43_add1319_withlog0,testConvert_add43_add1319_withlog1,testConvert_add43_add1319_withlog2,testConvert_remove57_remove1638_withlog0,testConvert_remove57_remove1638_withlog1,testConvert_remove57_remove1638_withlog2,testConvert_remove56_add1418_withlog0,testConvert_remove56_add1418_withlog1,testConvert_remove56_add1418_withlog2,testConvert_add43null1696_withlog0,testConvert_add43null1696_withlog1,testConvert_add43null1696_withlog2,testConvert_add44_add1358_withlog0,testConvert_add44_add1358_withlog1,testConvert_add44_add1358_withlog2,testConvert_add48_remove1622_withlog0,testConvert_add48_remove1622_withlog1,testConvert_add48_remove1622_withlog2,testConvert_add53_literalMutationString506_withlog0,testConvert_add53_literalMutationString506_withlog1,testConvert_add53_literalMutationString506_withlog2
[INFO] Generating assertions...
[INFO] 59 test fail, generating try/catch/fail blocks...
[INFO] 59 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add53null1685:testConvert_add43null1696:testConvert_add44null1702:testConvert_add48null1712:testConvert_remove57null1723:testConvert_add53_literalMutationString506:testConvert_add52_add1296:testConvert_add43_add1319:testConvert_add44_add1358:testConvert_add48_add1395:testConvert_literalMutationString7_add1214:testConvert_literalMutationString11_add1230:testConvert_literalMutationString8_add1268:testConvert_literalMutationString9_add1181:testConvertnull61_add1142:testConvert_remove57_add1430:testConvert_remove56_add1409:testConvert_add53_remove1582:testConvert_add43_remove1603:testConvert_add44_remove1609:testConvert_remove60_remove1644:testConvert_add48_remove1622:testConvert_add49_remove1613:testConvert_literalMutationString11_remove1565:testConvert_literalMutationString8_remove1579:testConvert_literalMutationString12_remove1540:testConvert_literalMutationString10_remove1568:testConvertnull61_remove1533:testConvert_remove57_remove1638:testConvert_add52null1690:testConvert_add44_literalMutationString635:testConvert_add52_add1312:testConvert_add43_add1332:testConvert_add53_remove1585:testConvert_add43_remove1597:testConvert_remove56_add1418:testConvert_remove60null1730_failAssert0:testConvert_literalMutationString7null1668_failAssert0:testConvert_add49null1708_failAssert0:testConvert_literalMutationString8null1683_failAssert0:testConvert_literalMutationString12null1656_failAssert0:testConvert_literalMutationString1_failAssert0null1746_failAssert0:testConvertnull61null1653_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0:testConvertnull62_failAssert0null1738_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0:testConvert_remove59null1732_failAssert0:testConvertnull64_failAssert0null1740_failAssert0:testConvert_remove60_literalMutationString858_failAssert0:testConvert_literalMutationString1_failAssert0_literalMutationString1029_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0:testConvert_literalMutationString5_failAssert0_literalMutationString1094_failAssert0:testConvertnull64_failAssert0_literalMutationString1005_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0:testConvertnull62_failAssert0_add1482_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0:testConvertnull64_failAssert0_add1484_failAssert0:testConvert_add43null1699_failAssert0 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add53null1685:testConvert_add43null1696:testConvert_add44null1702:testConvert_add48null1712:testConvert_remove57null1723:testConvert_add53_literalMutationString506:testConvert_add52_add1296:testConvert_add43_add1319:testConvert_add44_add1358:testConvert_add48_add1395:testConvert_literalMutationString7_add1214:testConvert_literalMutationString11_add1230:testConvert_literalMutationString8_add1268:testConvert_literalMutationString9_add1181:testConvertnull61_add1142:testConvert_remove57_add1430:testConvert_remove56_add1409:testConvert_add53_remove1582:testConvert_add43_remove1603:testConvert_add44_remove1609:testConvert_remove60_remove1644:testConvert_add48_remove1622:testConvert_add49_remove1613:testConvert_literalMutationString11_remove1565:testConvert_literalMutationString8_remove1579:testConvert_literalMutationString12_remove1540:testConvert_literalMutationString10_remove1568:testConvertnull61_remove1533:testConvert_remove57_remove1638:testConvert_add52null1690:testConvert_add44_literalMutationString635:testConvert_add52_add1312:testConvert_add43_add1332:testConvert_add53_remove1585:testConvert_add43_remove1597:testConvert_remove56_add1418:testConvert_remove60null1730_failAssert0:testConvert_literalMutationString7null1668_failAssert0:testConvert_add49null1708_failAssert0:testConvert_literalMutationString8null1683_failAssert0:testConvert_literalMutationString12null1656_failAssert0:testConvert_literalMutationString1_failAssert0null1746_failAssert0:testConvertnull61null1653_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0:testConvertnull62_failAssert0null1738_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0:testConvert_remove59null1732_failAssert0:testConvertnull64_failAssert0null1740_failAssert0:testConvert_remove60_literalMutationString858_failAssert0:testConvert_literalMutationString1_failAssert0_literalMutationString1029_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0:testConvert_literalMutationString5_failAssert0_literalMutationString1094_failAssert0:testConvertnull64_failAssert0_literalMutationString1005_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0:testConvertnull62_failAssert0_add1482_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0:testConvertnull64_failAssert0_add1484_failAssert0:testConvert_add43null1699_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_remove59null1732_failAssert0,testConvertnull61null1653_failAssert0,testConvert_literalMutationString5_failAssert0_add1514_failAssert0,testConvert_literalMutationString9_add1181,testConvert_literalMutationString36_failAssert0_add1528_failAssert0,testConvert_add48_remove1622,testConvertnull61_add1142,testConvertnull64_failAssert0_add1484_failAssert0,testConvert_literalMutationString7null1668_failAssert0,testConvert_add49_remove1613,testConvert_remove57_add1430,testConvert_add44_add1358,testConvert_literalMutationString5_failAssert0_literalMutationString1094_failAssert0,testConvertnull64_failAssert0null1740_failAssert0,testConvert_add52null1690,testConvert_remove60null1730_failAssert0,testConvertnull62_failAssert0_add1482_failAssert0,testConvert_literalMutationString8null1683_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0,testConvert_add49null1708_failAssert0,testConvert_literalMutationString10_remove1568,testConvert_remove57null1723,testConvert_literalMutationString11_remove1565,testConvert_add44null1702,testConvert_literalMutationString12_remove1540,testConvert_literalMutationString11_add1230,testConvert_add48_add1395,testConvert_literalMutationString8_add1268,testConvert_add44_literalMutationString635,testConvert_remove56_add1409,testConvert_remove56_add1418,testConvert_add43null1699_failAssert0,testConvert_remove60_remove1644,testConvert_add43_add1319,testConvert_add43_add1332,testConvert_literalMutationString1_failAssert0_add1497_failAssert0,testConvert_literalMutationString1_failAssert0_literalMutationString1029_failAssert0,testConvert_literalMutationString1_failAssert0null1746_failAssert0,testConvert_remove60_literalMutationString858_failAssert0,testConvertnull64_failAssert0_literalMutationString1005_failAssert0,testConvert_add48null1712,testConvert_add53_literalMutationString506,testConvertnull62_failAssert0null1738_failAssert0,testConvert_add53null1685,testConvert_literalMutationString5_failAssert0null1751_failAssert0,testConvert_add43null1696,testConvert_remove57_remove1638,testConvert_add53_remove1582,testConvert_add53_remove1585,testConvert_literalMutationString12null1656_failAssert0,testConvert_literalMutationString8_remove1579,testConvert_literalMutationString7_add1214,testConvert_add43_remove1597,testConvert_add43_remove1603,testConvert_literalMutationString36_failAssert0null1755_failAssert0,testConvertnull61_remove1533,testConvert_add52_add1296,testConvert_add52_add1312,testConvert_add44_remove1609
[INFO] Assertion amplification: 59 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:19:55 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:55 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:19:55 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add53null1685:testConvert_add43null1696:testConvert_add44null1702:testConvert_add48null1712:testConvert_remove57null1723:testConvert_add53_literalMutationString506:testConvert_add52_add1296:testConvert_add43_add1319:testConvert_add44_add1358:testConvert_add48_add1395:testConvert_literalMutationString7_add1214:testConvert_literalMutationString11_add1230:testConvert_literalMutationString8_add1268:testConvert_literalMutationString9_add1181:testConvertnull61_add1142:testConvert_remove57_add1430:testConvert_remove56_add1409:testConvert_add53_remove1582:testConvert_add43_remove1603:testConvert_add44_remove1609:testConvert_remove60_remove1644:testConvert_add48_remove1622:testConvert_add49_remove1613:testConvert_literalMutationString11_remove1565:testConvert_literalMutationString8_remove1579:testConvert_literalMutationString12_remove1540:testConvert_literalMutationString10_remove1568:testConvertnull61_remove1533:testConvert_remove57_remove1638:testConvert_add52null1690:testConvert_add44_literalMutationString635:testConvert_add52_add1312:testConvert_add43_add1332:testConvert_add53_remove1585:testConvert_add43_remove1597:testConvert_remove56_add1418:testConvert_remove60null1730_failAssert0:testConvert_literalMutationString7null1668_failAssert0:testConvert_add49null1708_failAssert0:testConvert_literalMutationString8null1683_failAssert0:testConvert_literalMutationString12null1656_failAssert0:testConvert_literalMutationString1_failAssert0null1746_failAssert0:testConvertnull61null1653_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0:testConvertnull62_failAssert0null1738_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0:testConvert_remove59null1732_failAssert0:testConvertnull64_failAssert0null1740_failAssert0:testConvert_remove60_literalMutationString858_failAssert0:testConvert_literalMutationString1_failAssert0_literalMutationString1029_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0:testConvert_literalMutationString5_failAssert0_literalMutationString1094_failAssert0:testConvertnull64_failAssert0_literalMutationString1005_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0:testConvertnull62_failAssert0_add1482_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0:testConvertnull64_failAssert0_add1484_failAssert0:testConvert_add43null1699_failAssert0 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add53null1685:testConvert_add43null1696:testConvert_add44null1702:testConvert_add48null1712:testConvert_remove57null1723:testConvert_add53_literalMutationString506:testConvert_add52_add1296:testConvert_add43_add1319:testConvert_add44_add1358:testConvert_add48_add1395:testConvert_literalMutationString7_add1214:testConvert_literalMutationString11_add1230:testConvert_literalMutationString8_add1268:testConvert_literalMutationString9_add1181:testConvertnull61_add1142:testConvert_remove57_add1430:testConvert_remove56_add1409:testConvert_add53_remove1582:testConvert_add43_remove1603:testConvert_add44_remove1609:testConvert_remove60_remove1644:testConvert_add48_remove1622:testConvert_add49_remove1613:testConvert_literalMutationString11_remove1565:testConvert_literalMutationString8_remove1579:testConvert_literalMutationString12_remove1540:testConvert_literalMutationString10_remove1568:testConvertnull61_remove1533:testConvert_remove57_remove1638:testConvert_add52null1690:testConvert_add44_literalMutationString635:testConvert_add52_add1312:testConvert_add43_add1332:testConvert_add53_remove1585:testConvert_add43_remove1597:testConvert_remove56_add1418:testConvert_remove60null1730_failAssert0:testConvert_literalMutationString7null1668_failAssert0:testConvert_add49null1708_failAssert0:testConvert_literalMutationString8null1683_failAssert0:testConvert_literalMutationString12null1656_failAssert0:testConvert_literalMutationString1_failAssert0null1746_failAssert0:testConvertnull61null1653_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0:testConvertnull62_failAssert0null1738_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0:testConvert_remove59null1732_failAssert0:testConvertnull64_failAssert0null1740_failAssert0:testConvert_remove60_literalMutationString858_failAssert0:testConvert_literalMutationString1_failAssert0_literalMutationString1029_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0:testConvert_literalMutationString5_failAssert0_literalMutationString1094_failAssert0:testConvertnull64_failAssert0_literalMutationString1005_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0:testConvertnull62_failAssert0_add1482_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0:testConvertnull64_failAssert0_add1484_failAssert0:testConvert_add43null1699_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_remove59null1732_failAssert0,testConvertnull61null1653_failAssert0,testConvert_literalMutationString5_failAssert0_add1514_failAssert0,testConvert_literalMutationString9_add1181,testConvert_literalMutationString36_failAssert0_add1528_failAssert0,testConvert_add48_remove1622,testConvertnull61_add1142,testConvertnull64_failAssert0_add1484_failAssert0,testConvert_literalMutationString7null1668_failAssert0,testConvert_add49_remove1613,testConvert_remove57_add1430,testConvert_add44_add1358,testConvert_literalMutationString5_failAssert0_literalMutationString1094_failAssert0,testConvertnull64_failAssert0null1740_failAssert0,testConvert_add52null1690,testConvert_remove60null1730_failAssert0,testConvertnull62_failAssert0_add1482_failAssert0,testConvert_literalMutationString8null1683_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0,testConvert_add49null1708_failAssert0,testConvert_literalMutationString10_remove1568,testConvert_remove57null1723,testConvert_literalMutationString11_remove1565,testConvert_add44null1702,testConvert_literalMutationString12_remove1540,testConvert_literalMutationString11_add1230,testConvert_add48_add1395,testConvert_literalMutationString8_add1268,testConvert_add44_literalMutationString635,testConvert_remove56_add1409,testConvert_remove56_add1418,testConvert_add43null1699_failAssert0,testConvert_remove60_remove1644,testConvert_add43_add1319,testConvert_add43_add1332,testConvert_literalMutationString1_failAssert0_add1497_failAssert0,testConvert_literalMutationString1_failAssert0_literalMutationString1029_failAssert0,testConvert_literalMutationString1_failAssert0null1746_failAssert0,testConvert_remove60_literalMutationString858_failAssert0,testConvertnull64_failAssert0_literalMutationString1005_failAssert0,testConvert_add48null1712,testConvert_add53_literalMutationString506,testConvertnull62_failAssert0null1738_failAssert0,testConvert_add53null1685,testConvert_literalMutationString5_failAssert0null1751_failAssert0,testConvert_add43null1696,testConvert_remove57_remove1638,testConvert_add53_remove1582,testConvert_add53_remove1585,testConvert_literalMutationString12null1656_failAssert0,testConvert_literalMutationString8_remove1579,testConvert_literalMutationString7_add1214,testConvert_add43_remove1597,testConvert_add43_remove1603,testConvert_literalMutationString36_failAssert0null1755_failAssert0,testConvertnull61_remove1533,testConvert_add52_add1296,testConvert_add52_add1312,testConvert_add44_remove1609
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] iteration 2 / 3
[INFO] 59 tests selected to be amplified over 59 available tests
[INFO] Amplification of inputs...
[INFO] Time to amplify: 6248ms
  1% | ]/ 91% |============================================= ]\ 99% |================================================= ]\[INFO] 100 new tests generated
[INFO] Run tests. (100)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[ERROR] Error(s) during compilation:
[ERROR] Pb(100) The method isRecursive() is undefined for the type Mustache
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add48_add1395null5797:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996:testConvert_literalMutationString11_remove1565null5865:testConvert_literalMutationString11_add1230null5806:testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013:testConvert_literalMutationString8_remove1579null5869:testConvert_add52_add1312null5903:testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999:testConvertnull62_failAssert0null1738_failAssert0null5956:testConvert_add43null1696null5753:testConvert_literalMutationString12null1656_failAssert0null5944:testConvert_remove59null1732_failAssert0null5965:testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982:testConvert_add43_remove1597null5920:testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952:testConvert_add44_literalMutationString635null5898:testConvert_literalMutationString10_remove1568null5877:testConvert_add53null1685null5749:testConvertnull61_add1142null5821:testConvert_add44null1702null5758:testConvert_literalMutationString9_add1181null5816:testConvert_remove56_add1409null5832:testConvert_add43_remove1603null5840:testConvert_literalMutationString7null1668_failAssert0null5930:testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962:testConvert_add48_add1395_literalMutationString2422:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238:testConvert_literalMutationString11_remove1565_literalMutationString3018:testConvert_literalMutationString11_add1230_literalMutationString2520:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385:testConvert_literalMutationString8_remove1579_literalMutationString3048:testConvert_add52_add1312_literalMutationString3308:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261:testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864:testConvert_add43null1696_literalMutationString2054:testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690:testConvert_remove59null1732_failAssert0_literalMutationString3931:testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103:testConvert_add43_remove1597_literalMutationString3456:testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830:testConvert_add44_literalMutationString635_literalMutationString3303:testConvert_literalMutationString10_remove1568_literalMutationString3131:testConvert_add53null1685_literalMutationString2029:testConvertnull61_add1142_literalMutationString2625:testConvert_add44null1702_literalMutationString2076:testConvert_literalMutationString9_add1181_literalMutationString2589:testConvert_remove56_add1409_literalMutationString2724:testConvert_add43_remove1603_literalMutationString2805:testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587:testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894:testConvert_add48_add1395_add4682:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410:testConvert_literalMutationString11_remove1565_add4968:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459:testConvert_literalMutationString8_remove1579_add4982:testConvert_add52_add1312_add5124:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429:testConvertnull62_failAssert0null1738_failAssert0_add5305:testConvert_add43null1696_add4519:testConvert_literalMutationString12null1656_failAssert0_add5258:testConvert_remove59null1732_failAssert0_add5335:testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375:testConvert_add43_remove1597_add5170:testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297:testConvert_add44_literalMutationString635_add5093:testConvert_literalMutationString10_remove1568_add5025:testConvert_add53null1685_add4485:testConvertnull61_add1142_add4790:testConvert_add44null1702_add4532:testConvert_literalMutationString9_add1181_add4775:testConvert_remove56_add1409_add4834:testConvert_add43_remove1603_add4862:testConvert_literalMutationString7null1668_failAssert0_add5230:testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319:testConvert_add48_add1395_remove5560:testConvert_literalMutationString11_remove1565_remove5661:testConvert_literalMutationString11_add1230_remove5574:testConvert_literalMutationString8_remove1579_remove5667:testConvert_add52_add1312_remove5715:testConvert_add43null1696_remove5498:testConvert_add43_remove1597_remove5738:testConvert_add44_literalMutationString635_remove5703:testConvert_literalMutationString10_remove1568_remove5682:testConvert_add53null1685_remove5488:testConvertnull61_add1142_remove5603:testConvert_add44null1702_remove5508:testConvert_literalMutationString9_add1181_remove5593:testConvert_remove56_add1409_remove5614:testConvert_add43_remove1603_remove5633:testConvert_add48_add1395null5793:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992:testConvert_add48_add1395_literalMutationString2389:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222:testConvert_add48_add1395_add4681:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413:testConvert_add48_add1395_remove5563:testConvert_literalMutationString11_remove1565_remove5660:testConvertnull62_failAssert0null1738_failAssert0_add5304:testConvert_add44null1702_literalMutationString2112 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_add48_add1395null5797:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996:testConvert_literalMutationString11_remove1565null5865:testConvert_literalMutationString11_add1230null5806:testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013:testConvert_literalMutationString8_remove1579null5869:testConvert_add52_add1312null5903:testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999:testConvertnull62_failAssert0null1738_failAssert0null5956:testConvert_add43null1696null5753:testConvert_literalMutationString12null1656_failAssert0null5944:testConvert_remove59null1732_failAssert0null5965:testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982:testConvert_add43_remove1597null5920:testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952:testConvert_add44_literalMutationString635null5898:testConvert_literalMutationString10_remove1568null5877:testConvert_add53null1685null5749:testConvertnull61_add1142null5821:testConvert_add44null1702null5758:testConvert_literalMutationString9_add1181null5816:testConvert_remove56_add1409null5832:testConvert_add43_remove1603null5840:testConvert_literalMutationString7null1668_failAssert0null5930:testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962:testConvert_add48_add1395_literalMutationString2422:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238:testConvert_literalMutationString11_remove1565_literalMutationString3018:testConvert_literalMutationString11_add1230_literalMutationString2520:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385:testConvert_literalMutationString8_remove1579_literalMutationString3048:testConvert_add52_add1312_literalMutationString3308:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261:testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864:testConvert_add43null1696_literalMutationString2054:testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690:testConvert_remove59null1732_failAssert0_literalMutationString3931:testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103:testConvert_add43_remove1597_literalMutationString3456:testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830:testConvert_add44_literalMutationString635_literalMutationString3303:testConvert_literalMutationString10_remove1568_literalMutationString3131:testConvert_add53null1685_literalMutationString2029:testConvertnull61_add1142_literalMutationString2625:testConvert_add44null1702_literalMutationString2076:testConvert_literalMutationString9_add1181_literalMutationString2589:testConvert_remove56_add1409_literalMutationString2724:testConvert_add43_remove1603_literalMutationString2805:testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587:testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894:testConvert_add48_add1395_add4682:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410:testConvert_literalMutationString11_remove1565_add4968:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459:testConvert_literalMutationString8_remove1579_add4982:testConvert_add52_add1312_add5124:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429:testConvertnull62_failAssert0null1738_failAssert0_add5305:testConvert_add43null1696_add4519:testConvert_literalMutationString12null1656_failAssert0_add5258:testConvert_remove59null1732_failAssert0_add5335:testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375:testConvert_add43_remove1597_add5170:testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297:testConvert_add44_literalMutationString635_add5093:testConvert_literalMutationString10_remove1568_add5025:testConvert_add53null1685_add4485:testConvertnull61_add1142_add4790:testConvert_add44null1702_add4532:testConvert_literalMutationString9_add1181_add4775:testConvert_remove56_add1409_add4834:testConvert_add43_remove1603_add4862:testConvert_literalMutationString7null1668_failAssert0_add5230:testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319:testConvert_add48_add1395_remove5560:testConvert_literalMutationString11_remove1565_remove5661:testConvert_literalMutationString11_add1230_remove5574:testConvert_literalMutationString8_remove1579_remove5667:testConvert_add52_add1312_remove5715:testConvert_add43null1696_remove5498:testConvert_add43_remove1597_remove5738:testConvert_add44_literalMutationString635_remove5703:testConvert_literalMutationString10_remove1568_remove5682:testConvert_add53null1685_remove5488:testConvertnull61_add1142_remove5603:testConvert_add44null1702_remove5508:testConvert_literalMutationString9_add1181_remove5593:testConvert_remove56_add1409_remove5614:testConvert_add43_remove1603_remove5633:testConvert_add48_add1395null5793:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992:testConvert_add48_add1395_literalMutationString2389:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222:testConvert_add48_add1395_add4681:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413:testConvert_add48_add1395_remove5563:testConvert_literalMutationString11_remove1565_remove5660:testConvertnull62_failAssert0null1738_failAssert0_add5304:testConvert_add44null1702_literalMutationString2112
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_add43_remove1603null5840,testConvert_literalMutationString10_remove1568_remove5682,testConvert_add53null1685_add4485,testConvert_add43_remove1597_add5170,testConvert_add44null1702_remove5508,testConvert_literalMutationString8_remove1579_remove5667,testConvert_literalMutationString11_remove1565_remove5661,testConvert_add48_add1395_add4682,testConvert_remove56_add1409_add4834,testConvert_literalMutationString9_add1181_add4775,testConvert_literalMutationString10_remove1568_add5025,testConvert_literalMutationString11_remove1565_literalMutationString3018,testConvert_add48_add1395_remove5560,testConvert_add48_add1395_remove5563,testConvert_add43_remove1603_add4862,testConvert_add43_remove1603_literalMutationString2805,testConvert_literalMutationString11_remove1565_add4968,testConvert_add52_add1312_remove5715,testConvert_add44null1702_add4532,testConvert_add43null1696_add4519,testConvert_add43null1696_remove5498,testConvert_add52_add1312_add5124,testConvert_add44null1702_literalMutationString2076,testConvert_literalMutationString9_add1181_remove5593,testConvert_add43_remove1603_remove5633,testConvert_literalMutationString10_remove1568null5877,testConvert_literalMutationString8_remove1579_add4982,testConvert_add53null1685_literalMutationString2029(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[pr>^]> but was:<[test]>,testConvert_literalMutationString7null1668_failAssert0_add5230(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[:1],testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_add43_remove1597_literalMutationString3456(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TE[]ST> but was:<TE[I]ST>,testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_remove59null1732_failAssert0_literalMutationString3931(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString11_remove1565null5865(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add44null1702null5758(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_add43null1696null5753(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_add52_add1312null5903(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[uppertest:1],testConvert_literalMutationString8_remove1579_literalMutationString3048(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<T[5]EST> but was:<T[]EST>,testConvert_remove59null1732_failAssert0_add5335(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_literalMutationString8_remove1579null5869(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString7null1668_failAssert0null5930(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString11_remove1565_remove5660(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_add44_literalMutationString635_literalMutationString3303(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[j$h/]> but was:<[test]>,testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString11_add1230_remove5574(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_remove56_add1409_remove5614(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in null:1 @[null:1],testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper != upper} in uppertest:1 @[uppertest:1],testConvert_literalMutationString11_add1230null5806(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[upperxest:1],testConvert_add48_add1395_add4681(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TEST[]> but was:<TEST[TEST]>,testConvert_add53null1685null5749(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_add43_remove1597null5920(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvertnull62_failAssert0null1738_failAssert0_add5304(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvertnull62_failAssert0null1738_failAssert0_add5305(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_remove59null1732_failAssert0null5965(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add44_literalMutationString635_add5093(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TEST[]> but was:<TEST[TEST]>,testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429(com.github.mustachejava.ConvertMethodsToFunctionsTest): Improperly closed variable @[uppertest:1],testConvert_add52_add1312_literalMutationString3308(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: null != upper in uppertest:1 @[uppertest:1],testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvert_add43_remove1597_remove5738(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvertnull61_add1142_literalMutationString2625(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TE[]T> but was:<TE[S]T>,testConvertnull61_add1142_add4790(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<test[]> but was:<test[test]>,testConvert_literalMutationString11_add1230_literalMutationString2520(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[o`Ro]> but was:<[test]>,testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString12null1656_failAssert0_add5258(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add48_add1395null5793(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add48_add1395null5797(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<test>,testConvert_add48_add1395_literalMutationString2389(com.github.mustachejava.ConvertMethodsToFunctionsTest): Mismatched start/end tags: upper}[}{{test != upper in uppertest:1 @[uppertest:1],testConvert_add48_add1395_literalMutationString2422(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[!6gDFjC`[]>,testConvert_add43null1696_literalMutationString2054(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[R,4#]>,testConvert_remove56_add1409_literalMutationString2724(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<te[]st> but was:<te[m]st>,testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvertnull62_failAssert0null1738_failAssert0null5956(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add44_literalMutationString635null5898(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to get value for test2 @[uppertest:1],testConvert_remove56_add1409null5832(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_literalMutationString9_add1181null5816(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString9_add1181_literalMutationString2589(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<TE[]T> but was:<TE[S]T>,testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962(com.github.mustachejava.ConvertMethodsToFunctionsTest): Failed to close 'upper' tag @[uppertest:1],testConvertnull61_add1142null5821(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<null> but was:<TEST>,testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add44_literalMutationString635_remove5703(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString12null1656_failAssert0null5944(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_add44null1702_literalMutationString2112(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<te[]t> but was:<te[s]t>,testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587(com.github.mustachejava.ConvertMethodsToFunctionsTest): null,testConvertnull61_add1142_remove5603(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[]>,testConvert_literalMutationString10_remove1568_literalMutationString3131(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[test]> but was:<[E ;T]>,testConvert_add53null1685_remove5488(com.github.mustachejava.ConvertMethodsToFunctionsTest): expected:<[TEST]> but was:<[]>,testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261(com.github.mustachejava.ConvertMethodsToFunctionsTest): Improperly closed variable @[page1.txt:1]
[INFO] 27 test pass, generating assertion...
[INFO] Add observations points in passing tests.
[INFO] Instrumentation...
  3% |================================================= ]/  7% |================================================= ]- 11% |================================================= ]\ 14% |================================================= ]| 18% |================================================= ]/ 22% |================================================= ]- 25% |================================================= ]\ 29% |================================================= ]| 33% |================================================= ]/ 37% |================================================= ]- 40% |================================================= ]\ 44% |================================================= ]| 48% |================================================= ]/ 51% |================================================= ]- 55% |================================================= ]\ 59% |================================================= ]| 62% |================================================= ]/ 66% |================================================= ]- 70% |================================================= ]\ 74% |================================================= ]| 77% |================================================= ]/ 81% |================================================= ]- 85% |================================================= ]\ 88% |================================================= ]| 92% |================================================= ]/ 96% |================================================= ]-100% |================================================== ]\
[INFO] Run instrumented tests. (81)
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[ERROR] Error(s) during compilation:
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[ERROR] Pb(161) Unreachable code
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_literalMutationString10_remove1568null5877_withlog0:testConvert_add43_remove1603null5840_withlog0:testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog0:testConvert_add44null1702_literalMutationString2076_withlog0:testConvert_add43_remove1603_literalMutationString2805_withlog0:testConvert_literalMutationString11_remove1565_add4968_withlog0:testConvert_literalMutationString8_remove1579_add4982_withlog0:testConvert_add52_add1312_add5124_withlog0:testConvert_add43null1696_add4519_withlog0:testConvert_add43_remove1597_add5170_withlog0:testConvert_literalMutationString10_remove1568_add5025_withlog0:testConvert_add53null1685_add4485_withlog0:testConvert_add44null1702_add4532_withlog0:testConvert_literalMutationString9_add1181_add4775_withlog0:testConvert_remove56_add1409_add4834_withlog0:testConvert_add43_remove1603_add4862_withlog0:testConvert_add48_add1395_remove5560_withlog0:testConvert_literalMutationString11_remove1565_remove5661_withlog0:testConvert_literalMutationString8_remove1579_remove5667_withlog0:testConvert_add52_add1312_remove5715_withlog0:testConvert_add43null1696_remove5498_withlog0:testConvert_literalMutationString10_remove1568_remove5682_withlog0:testConvert_add44null1702_remove5508_withlog0:testConvert_literalMutationString9_add1181_remove5593_withlog0:testConvert_add43_remove1603_remove5633_withlog0:testConvert_add48_add1395_remove5563_withlog0:testConvert_literalMutationString10_remove1568null5877_withlog1:testConvert_add43_remove1603null5840_withlog1:testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog1:testConvert_add44null1702_literalMutationString2076_withlog1:testConvert_add43_remove1603_literalMutationString2805_withlog1:testConvert_literalMutationString11_remove1565_add4968_withlog1:testConvert_literalMutationString8_remove1579_add4982_withlog1:testConvert_add52_add1312_add5124_withlog1:testConvert_add43null1696_add4519_withlog1:testConvert_add43_remove1597_add5170_withlog1:testConvert_literalMutationString10_remove1568_add5025_withlog1:testConvert_add53null1685_add4485_withlog1:testConvert_add44null1702_add4532_withlog1:testConvert_literalMutationString9_add1181_add4775_withlog1:testConvert_remove56_add1409_add4834_withlog1:testConvert_add43_remove1603_add4862_withlog1:testConvert_add48_add1395_remove5560_withlog1:testConvert_literalMutationString11_remove1565_remove5661_withlog1:testConvert_literalMutationString8_remove1579_remove5667_withlog1:testConvert_add52_add1312_remove5715_withlog1:testConvert_add43null1696_remove5498_withlog1:testConvert_literalMutationString10_remove1568_remove5682_withlog1:testConvert_add44null1702_remove5508_withlog1:testConvert_literalMutationString9_add1181_remove5593_withlog1:testConvert_add43_remove1603_remove5633_withlog1:testConvert_add48_add1395_remove5563_withlog1:testConvert_literalMutationString10_remove1568null5877_withlog2:testConvert_add43_remove1603null5840_withlog2:testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog2:testConvert_add44null1702_literalMutationString2076_withlog2:testConvert_add43_remove1603_literalMutationString2805_withlog2:testConvert_literalMutationString11_remove1565_add4968_withlog2:testConvert_literalMutationString8_remove1579_add4982_withlog2:testConvert_add52_add1312_add5124_withlog2:testConvert_add43null1696_add4519_withlog2:testConvert_add43_remove1597_add5170_withlog2:testConvert_literalMutationString10_remove1568_add5025_withlog2:testConvert_add53null1685_add4485_withlog2:testConvert_add44null1702_add4532_withlog2:testConvert_literalMutationString9_add1181_add4775_withlog2:testConvert_remove56_add1409_add4834_withlog2:testConvert_add43_remove1603_add4862_withlog2:testConvert_add48_add1395_remove5560_withlog2:testConvert_literalMutationString11_remove1565_remove5661_withlog2:testConvert_literalMutationString8_remove1579_remove5667_withlog2:testConvert_add52_add1312_remove5715_withlog2:testConvert_add43null1696_remove5498_withlog2:testConvert_literalMutationString10_remove1568_remove5682_withlog2:testConvert_add44null1702_remove5508_withlog2:testConvert_literalMutationString9_add1181_remove5593_withlog2:testConvert_add43_remove1603_remove5633_withlog2:testConvert_add48_add1395_remove5563_withlog2 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_literalMutationString10_remove1568null5877_withlog0:testConvert_add43_remove1603null5840_withlog0:testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog0:testConvert_add44null1702_literalMutationString2076_withlog0:testConvert_add43_remove1603_literalMutationString2805_withlog0:testConvert_literalMutationString11_remove1565_add4968_withlog0:testConvert_literalMutationString8_remove1579_add4982_withlog0:testConvert_add52_add1312_add5124_withlog0:testConvert_add43null1696_add4519_withlog0:testConvert_add43_remove1597_add5170_withlog0:testConvert_literalMutationString10_remove1568_add5025_withlog0:testConvert_add53null1685_add4485_withlog0:testConvert_add44null1702_add4532_withlog0:testConvert_literalMutationString9_add1181_add4775_withlog0:testConvert_remove56_add1409_add4834_withlog0:testConvert_add43_remove1603_add4862_withlog0:testConvert_add48_add1395_remove5560_withlog0:testConvert_literalMutationString11_remove1565_remove5661_withlog0:testConvert_literalMutationString8_remove1579_remove5667_withlog0:testConvert_add52_add1312_remove5715_withlog0:testConvert_add43null1696_remove5498_withlog0:testConvert_literalMutationString10_remove1568_remove5682_withlog0:testConvert_add44null1702_remove5508_withlog0:testConvert_literalMutationString9_add1181_remove5593_withlog0:testConvert_add43_remove1603_remove5633_withlog0:testConvert_add48_add1395_remove5563_withlog0:testConvert_literalMutationString10_remove1568null5877_withlog1:testConvert_add43_remove1603null5840_withlog1:testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog1:testConvert_add44null1702_literalMutationString2076_withlog1:testConvert_add43_remove1603_literalMutationString2805_withlog1:testConvert_literalMutationString11_remove1565_add4968_withlog1:testConvert_literalMutationString8_remove1579_add4982_withlog1:testConvert_add52_add1312_add5124_withlog1:testConvert_add43null1696_add4519_withlog1:testConvert_add43_remove1597_add5170_withlog1:testConvert_literalMutationString10_remove1568_add5025_withlog1:testConvert_add53null1685_add4485_withlog1:testConvert_add44null1702_add4532_withlog1:testConvert_literalMutationString9_add1181_add4775_withlog1:testConvert_remove56_add1409_add4834_withlog1:testConvert_add43_remove1603_add4862_withlog1:testConvert_add48_add1395_remove5560_withlog1:testConvert_literalMutationString11_remove1565_remove5661_withlog1:testConvert_literalMutationString8_remove1579_remove5667_withlog1:testConvert_add52_add1312_remove5715_withlog1:testConvert_add43null1696_remove5498_withlog1:testConvert_literalMutationString10_remove1568_remove5682_withlog1:testConvert_add44null1702_remove5508_withlog1:testConvert_literalMutationString9_add1181_remove5593_withlog1:testConvert_add43_remove1603_remove5633_withlog1:testConvert_add48_add1395_remove5563_withlog1:testConvert_literalMutationString10_remove1568null5877_withlog2:testConvert_add43_remove1603null5840_withlog2:testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog2:testConvert_add44null1702_literalMutationString2076_withlog2:testConvert_add43_remove1603_literalMutationString2805_withlog2:testConvert_literalMutationString11_remove1565_add4968_withlog2:testConvert_literalMutationString8_remove1579_add4982_withlog2:testConvert_add52_add1312_add5124_withlog2:testConvert_add43null1696_add4519_withlog2:testConvert_add43_remove1597_add5170_withlog2:testConvert_literalMutationString10_remove1568_add5025_withlog2:testConvert_add53null1685_add4485_withlog2:testConvert_add44null1702_add4532_withlog2:testConvert_literalMutationString9_add1181_add4775_withlog2:testConvert_remove56_add1409_add4834_withlog2:testConvert_add43_remove1603_add4862_withlog2:testConvert_add48_add1395_remove5560_withlog2:testConvert_literalMutationString11_remove1565_remove5661_withlog2:testConvert_literalMutationString8_remove1579_remove5667_withlog2:testConvert_add52_add1312_remove5715_withlog2:testConvert_add43null1696_remove5498_withlog2:testConvert_literalMutationString10_remove1568_remove5682_withlog2:testConvert_add44null1702_remove5508_withlog2:testConvert_literalMutationString9_add1181_remove5593_withlog2:testConvert_add43_remove1603_remove5633_withlog2:testConvert_add48_add1395_remove5563_withlog2
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/observations.ser
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_literalMutationString10_remove1568null5877_withlog0,testConvert_literalMutationString10_remove1568null5877_withlog1,testConvert_literalMutationString10_remove1568null5877_withlog2,testConvert_literalMutationString9_add1181_remove5593_withlog0,testConvert_literalMutationString9_add1181_remove5593_withlog1,testConvert_literalMutationString9_add1181_remove5593_withlog2,testConvert_add43null1696_add4519_withlog0,testConvert_add43null1696_add4519_withlog1,testConvert_add43null1696_add4519_withlog2,testConvert_add52_add1312_remove5715_withlog0,testConvert_add52_add1312_remove5715_withlog1,testConvert_add52_add1312_remove5715_withlog2,testConvert_add43_remove1603_add4862_withlog0,testConvert_add43_remove1603_add4862_withlog1,testConvert_add43_remove1603_add4862_withlog2,testConvert_add44null1702_add4532_withlog0,testConvert_add44null1702_add4532_withlog1,testConvert_add44null1702_add4532_withlog2,testConvert_literalMutationString11_remove1565_add4968_withlog0,testConvert_literalMutationString11_remove1565_add4968_withlog1,testConvert_literalMutationString11_remove1565_add4968_withlog2,testConvert_add43_remove1603null5840_withlog0,testConvert_add43_remove1603null5840_withlog1,testConvert_add43_remove1603null5840_withlog2,testConvert_add43_remove1603_remove5633_withlog0,testConvert_add43_remove1603_remove5633_withlog1,testConvert_add43_remove1603_remove5633_withlog2,testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog0,testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog1,testConvert_literalMutationString11_remove1565_literalMutationString3018_withlog2,testConvert_add48_add1395_remove5563_withlog0,testConvert_add48_add1395_remove5563_withlog1,testConvert_add48_add1395_remove5563_withlog2,testConvert_add48_add1395_remove5560_withlog0,testConvert_add48_add1395_remove5560_withlog1,testConvert_add48_add1395_remove5560_withlog2,testConvert_remove56_add1409_add4834_withlog0,testConvert_remove56_add1409_add4834_withlog1,testConvert_remove56_add1409_add4834_withlog2,testConvert_literalMutationString8_remove1579_add4982_withlog0,testConvert_literalMutationString8_remove1579_add4982_withlog1,testConvert_literalMutationString8_remove1579_add4982_withlog2,testConvert_literalMutationString8_remove1579_remove5667_withlog0,testConvert_literalMutationString8_remove1579_remove5667_withlog1,testConvert_literalMutationString8_remove1579_remove5667_withlog2,testConvert_add44null1702_literalMutationString2076_withlog0,testConvert_add44null1702_literalMutationString2076_withlog1,testConvert_add44null1702_literalMutationString2076_withlog2,testConvert_literalMutationString10_remove1568_remove5682_withlog0,testConvert_literalMutationString10_remove1568_remove5682_withlog1,testConvert_literalMutationString10_remove1568_remove5682_withlog2,testConvert_add43null1696_remove5498_withlog0,testConvert_add43null1696_remove5498_withlog1,testConvert_add43null1696_remove5498_withlog2,testConvert_add52_add1312_add5124_withlog0,testConvert_add52_add1312_add5124_withlog1,testConvert_add52_add1312_add5124_withlog2,testConvert_literalMutationString10_remove1568_add5025_withlog0,testConvert_literalMutationString10_remove1568_add5025_withlog1,testConvert_literalMutationString10_remove1568_add5025_withlog2,testConvert_literalMutationString11_remove1565_remove5661_withlog0,testConvert_literalMutationString11_remove1565_remove5661_withlog1,testConvert_literalMutationString11_remove1565_remove5661_withlog2,testConvert_add43_remove1597_add5170_withlog0,testConvert_add43_remove1597_add5170_withlog1,testConvert_add43_remove1597_add5170_withlog2,testConvert_literalMutationString9_add1181_add4775_withlog0,testConvert_literalMutationString9_add1181_add4775_withlog1,testConvert_literalMutationString9_add1181_add4775_withlog2,testConvert_add53null1685_add4485_withlog0,testConvert_add53null1685_add4485_withlog1,testConvert_add53null1685_add4485_withlog2,testConvert_add43_remove1603_literalMutationString2805_withlog0,testConvert_add43_remove1603_literalMutationString2805_withlog1,testConvert_add43_remove1603_literalMutationString2805_withlog2,testConvert_add44null1702_remove5508_withlog0,testConvert_add44null1702_remove5508_withlog1,testConvert_add44null1702_remove5508_withlog2
[INFO] Generating assertions...
[INFO] 72 test fail, generating try/catch/fail blocks...
[INFO] 69 new tests with assertions generated
[INFO] Compiling with -proceedOnError -encoding UTF-8 -cp /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/: -d /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes -1.8 -preserveAllLocals -noExit -enableJavadoc -proc:none /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/tmp_test_sources/com/github/mustachejava/ConvertMethodsToFunctionsTest.java
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/test-classes:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_literalMutationString10_remove1568null5877:testConvert_add43_remove1603null5840:testConvert_literalMutationString11_remove1565_literalMutationString3018:testConvert_add44null1702_literalMutationString2076:testConvert_add43_remove1603_literalMutationString2805:testConvert_literalMutationString11_remove1565_add4968:testConvert_literalMutationString8_remove1579_add4982:testConvert_add52_add1312_add5124:testConvert_add43null1696_add4519:testConvert_add43_remove1597_add5170:testConvert_literalMutationString10_remove1568_add5025:testConvert_add53null1685_add4485:testConvert_add44null1702_add4532:testConvert_literalMutationString9_add1181_add4775:testConvert_remove56_add1409_add4834:testConvert_add43_remove1603_add4862:testConvert_add48_add1395_remove5560:testConvert_literalMutationString11_remove1565_remove5661:testConvert_literalMutationString8_remove1579_remove5667:testConvert_add52_add1312_remove5715:testConvert_add43null1696_remove5498:testConvert_literalMutationString10_remove1568_remove5682:testConvert_add44null1702_remove5508:testConvert_literalMutationString9_add1181_remove5593:testConvert_add43_remove1603_remove5633:testConvert_add48_add1395_remove5563:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996_failAssert0:testConvert_literalMutationString11_remove1565null5865_failAssert0:testConvert_literalMutationString11_add1230null5806_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013_failAssert0:testConvert_literalMutationString8_remove1579null5869_failAssert0:testConvert_add52_add1312null5903_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999_failAssert0:testConvertnull62_failAssert0null1738_failAssert0null5956_failAssert0:testConvert_literalMutationString12null1656_failAssert0null5944_failAssert0:testConvert_remove59null1732_failAssert0null5965_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952_failAssert0:testConvert_add44_literalMutationString635null5898_failAssert0:testConvert_literalMutationString9_add1181null5816_failAssert0:testConvert_literalMutationString7null1668_failAssert0null5930_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385_failAssert0:testConvert_add52_add1312_literalMutationString3308_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864_failAssert0:testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690_failAssert0:testConvert_remove59null1732_failAssert0_literalMutationString3931_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830_failAssert0:testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5305_failAssert0:testConvert_literalMutationString12null1656_failAssert0_add5258_failAssert0:testConvert_remove59null1732_failAssert0_add5335_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297_failAssert0:testConvert_literalMutationString7null1668_failAssert0_add5230_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319_failAssert0:testConvert_add48_add1395null5793_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992_failAssert0:testConvert_add48_add1395_literalMutationString2389_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5304_failAssert0 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_literalMutationString10_remove1568null5877:testConvert_add43_remove1603null5840:testConvert_literalMutationString11_remove1565_literalMutationString3018:testConvert_add44null1702_literalMutationString2076:testConvert_add43_remove1603_literalMutationString2805:testConvert_literalMutationString11_remove1565_add4968:testConvert_literalMutationString8_remove1579_add4982:testConvert_add52_add1312_add5124:testConvert_add43null1696_add4519:testConvert_add43_remove1597_add5170:testConvert_literalMutationString10_remove1568_add5025:testConvert_add53null1685_add4485:testConvert_add44null1702_add4532:testConvert_literalMutationString9_add1181_add4775:testConvert_remove56_add1409_add4834:testConvert_add43_remove1603_add4862:testConvert_add48_add1395_remove5560:testConvert_literalMutationString11_remove1565_remove5661:testConvert_literalMutationString8_remove1579_remove5667:testConvert_add52_add1312_remove5715:testConvert_add43null1696_remove5498:testConvert_literalMutationString10_remove1568_remove5682:testConvert_add44null1702_remove5508:testConvert_literalMutationString9_add1181_remove5593:testConvert_add43_remove1603_remove5633:testConvert_add48_add1395_remove5563:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996_failAssert0:testConvert_literalMutationString11_remove1565null5865_failAssert0:testConvert_literalMutationString11_add1230null5806_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013_failAssert0:testConvert_literalMutationString8_remove1579null5869_failAssert0:testConvert_add52_add1312null5903_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999_failAssert0:testConvertnull62_failAssert0null1738_failAssert0null5956_failAssert0:testConvert_literalMutationString12null1656_failAssert0null5944_failAssert0:testConvert_remove59null1732_failAssert0null5965_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952_failAssert0:testConvert_add44_literalMutationString635null5898_failAssert0:testConvert_literalMutationString9_add1181null5816_failAssert0:testConvert_literalMutationString7null1668_failAssert0null5930_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385_failAssert0:testConvert_add52_add1312_literalMutationString3308_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864_failAssert0:testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690_failAssert0:testConvert_remove59null1732_failAssert0_literalMutationString3931_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830_failAssert0:testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5305_failAssert0:testConvert_literalMutationString12null1656_failAssert0_add5258_failAssert0:testConvert_remove59null1732_failAssert0_add5335_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297_failAssert0:testConvert_literalMutationString7null1668_failAssert0_add5230_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319_failAssert0:testConvert_add48_add1395null5793_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992_failAssert0:testConvert_add48_add1395_literalMutationString2389_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5304_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_add52_add1312null5903_failAssert0,testConvert_add43_remove1603null5840,testConvert_literalMutationString10_remove1568_remove5682,testConvert_literalMutationString11_add1230null5806_failAssert0,testConvert_add53null1685_add4485,testConvertnull62_failAssert0null1738_failAssert0_add5305_failAssert0,testConvert_add43_remove1597_add5170,testConvert_remove59null1732_failAssert0_add5335_failAssert0,testConvert_add44null1702_remove5508,testConvertnull62_failAssert0null1738_failAssert0_add5304_failAssert0,testConvert_literalMutationString7null1668_failAssert0_add5230_failAssert0,testConvert_literalMutationString8_remove1579_remove5667,testConvert_remove59null1732_failAssert0null5965_failAssert0,testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982_failAssert0,testConvert_literalMutationString8_remove1579null5869_failAssert0,testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952_failAssert0,testConvert_add52_add1312_literalMutationString3308_failAssert0,testConvert_add44_literalMutationString635null5898_failAssert0,testConvert_literalMutationString11_remove1565_remove5661,testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238_failAssert0,testConvert_literalMutationString12null1656_failAssert0_add5258_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413_failAssert0,testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013_failAssert0,testConvert_remove56_add1409_add4834,testConvert_literalMutationString9_add1181_add4775,testConvert_literalMutationString11_remove1565null5865_failAssert0,testConvert_add48_add1395null5793_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103_failAssert0,testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429_failAssert0,testConvert_literalMutationString12null1656_failAssert0null5944_failAssert0,testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587_failAssert0,testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894_failAssert0,testConvert_literalMutationString9_add1181null5816_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410_failAssert0,testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319_failAssert0,testConvert_literalMutationString10_remove1568_add5025,testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297_failAssert0,testConvert_literalMutationString11_remove1565_literalMutationString3018,testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375_failAssert0,testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830_failAssert0,testConvert_remove59null1732_failAssert0_literalMutationString3931_failAssert0,testConvert_add48_add1395_remove5560,testConvert_add48_add1395_remove5563,testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459_failAssert0,testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999_failAssert0,testConvert_add43_remove1603_add4862,testConvert_add43_remove1603_literalMutationString2805,testConvert_literalMutationString11_remove1565_add4968,testConvert_add52_add1312_remove5715,testConvertnull62_failAssert0null1738_failAssert0null5956_failAssert0,testConvert_add44null1702_add4532,testConvert_add43null1696_add4519,testConvert_add43null1696_remove5498,testConvert_add52_add1312_add5124,testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690_failAssert0,testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222_failAssert0,testConvert_add44null1702_literalMutationString2076,testConvert_literalMutationString9_add1181_remove5593,testConvert_add43_remove1603_remove5633,testConvert_literalMutationString10_remove1568null5877,testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962_failAssert0,testConvert_literalMutationString7null1668_failAssert0null5930_failAssert0,testConvert_add48_add1395_literalMutationString2389_failAssert0,testConvert_literalMutationString8_remove1579_add4982
[INFO] Assertion amplification: 69 test method(s) has been successfully amplified.
[WARN] 2019-05-23 22:20:07 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:20:07 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[WARN] 2019-05-23 22:20:07 Launcher - You specified the directory /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies in source classpath, please note that only class files will be considered. Jars and subdirectories will be ignored.
[INFO] Run: java -classpath /tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/classes/:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/test-classes/:/home/bedanglot/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/bedanglot/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.7.4/jackson-databind-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.7.0/jackson-annotations-2.7.0.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.7.4/jackson-core-2.7.4.jar:/home/bedanglot/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.7.4/jackson-dataformat-yaml-2.7.4.jar:/home/bedanglot/.m2/repository/org/yaml/snakeyaml/1.15/snakeyaml-1.15.jar:/tmp/dspot-experiments/dataset/april-2019/mustache.java/compiler/target/dspot/dependencies/:/home/bedanglot/.m2/repository/eu/stamp-project/test-runner/2.0.7/test-runner-2.0.7-jar-with-dependencies.jar eu.stamp_project.testrunner.runner.JUnit4Runner --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_literalMutationString10_remove1568null5877:testConvert_add43_remove1603null5840:testConvert_literalMutationString11_remove1565_literalMutationString3018:testConvert_add44null1702_literalMutationString2076:testConvert_add43_remove1603_literalMutationString2805:testConvert_literalMutationString11_remove1565_add4968:testConvert_literalMutationString8_remove1579_add4982:testConvert_add52_add1312_add5124:testConvert_add43null1696_add4519:testConvert_add43_remove1597_add5170:testConvert_literalMutationString10_remove1568_add5025:testConvert_add53null1685_add4485:testConvert_add44null1702_add4532:testConvert_literalMutationString9_add1181_add4775:testConvert_remove56_add1409_add4834:testConvert_add43_remove1603_add4862:testConvert_add48_add1395_remove5560:testConvert_literalMutationString11_remove1565_remove5661:testConvert_literalMutationString8_remove1579_remove5667:testConvert_add52_add1312_remove5715:testConvert_add43null1696_remove5498:testConvert_literalMutationString10_remove1568_remove5682:testConvert_add44null1702_remove5508:testConvert_literalMutationString9_add1181_remove5593:testConvert_add43_remove1603_remove5633:testConvert_add48_add1395_remove5563:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996_failAssert0:testConvert_literalMutationString11_remove1565null5865_failAssert0:testConvert_literalMutationString11_add1230null5806_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013_failAssert0:testConvert_literalMutationString8_remove1579null5869_failAssert0:testConvert_add52_add1312null5903_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999_failAssert0:testConvertnull62_failAssert0null1738_failAssert0null5956_failAssert0:testConvert_literalMutationString12null1656_failAssert0null5944_failAssert0:testConvert_remove59null1732_failAssert0null5965_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952_failAssert0:testConvert_add44_literalMutationString635null5898_failAssert0:testConvert_literalMutationString9_add1181null5816_failAssert0:testConvert_literalMutationString7null1668_failAssert0null5930_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385_failAssert0:testConvert_add52_add1312_literalMutationString3308_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864_failAssert0:testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690_failAssert0:testConvert_remove59null1732_failAssert0_literalMutationString3931_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830_failAssert0:testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5305_failAssert0:testConvert_literalMutationString12null1656_failAssert0_add5258_failAssert0:testConvert_remove59null1732_failAssert0_add5335_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297_failAssert0:testConvert_literalMutationString7null1668_failAssert0_add5230_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319_failAssert0:testConvert_add48_add1395null5793_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992_failAssert0:testConvert_add48_add1395_literalMutationString2389_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5304_failAssert0 
Parsing --class com.github.mustachejava.ConvertMethodsToFunctionsTest --tests testConvert_literalMutationString10_remove1568null5877:testConvert_add43_remove1603null5840:testConvert_literalMutationString11_remove1565_literalMutationString3018:testConvert_add44null1702_literalMutationString2076:testConvert_add43_remove1603_literalMutationString2805:testConvert_literalMutationString11_remove1565_add4968:testConvert_literalMutationString8_remove1579_add4982:testConvert_add52_add1312_add5124:testConvert_add43null1696_add4519:testConvert_add43_remove1597_add5170:testConvert_literalMutationString10_remove1568_add5025:testConvert_add53null1685_add4485:testConvert_add44null1702_add4532:testConvert_literalMutationString9_add1181_add4775:testConvert_remove56_add1409_add4834:testConvert_add43_remove1603_add4862:testConvert_add48_add1395_remove5560:testConvert_literalMutationString11_remove1565_remove5661:testConvert_literalMutationString8_remove1579_remove5667:testConvert_add52_add1312_remove5715:testConvert_add43null1696_remove5498:testConvert_literalMutationString10_remove1568_remove5682:testConvert_add44null1702_remove5508:testConvert_literalMutationString9_add1181_remove5593:testConvert_add43_remove1603_remove5633:testConvert_add48_add1395_remove5563:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996_failAssert0:testConvert_literalMutationString11_remove1565null5865_failAssert0:testConvert_literalMutationString11_add1230null5806_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013_failAssert0:testConvert_literalMutationString8_remove1579null5869_failAssert0:testConvert_add52_add1312null5903_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999_failAssert0:testConvertnull62_failAssert0null1738_failAssert0null5956_failAssert0:testConvert_literalMutationString12null1656_failAssert0null5944_failAssert0:testConvert_remove59null1732_failAssert0null5965_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952_failAssert0:testConvert_add44_literalMutationString635null5898_failAssert0:testConvert_literalMutationString9_add1181null5816_failAssert0:testConvert_literalMutationString7null1668_failAssert0null5930_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385_failAssert0:testConvert_add52_add1312_literalMutationString3308_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864_failAssert0:testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690_failAssert0:testConvert_remove59null1732_failAssert0_literalMutationString3931_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830_failAssert0:testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410_failAssert0:testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459_failAssert0:testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5305_failAssert0:testConvert_literalMutationString12null1656_failAssert0_add5258_failAssert0:testConvert_remove59null1732_failAssert0_add5335_failAssert0:testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375_failAssert0:testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297_failAssert0:testConvert_literalMutationString7null1668_failAssert0_add5230_failAssert0:testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319_failAssert0:testConvert_add48_add1395null5793_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992_failAssert0:testConvert_add48_add1395_literalMutationString2389_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222_failAssert0:testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413_failAssert0:testConvertnull62_failAssert0null1738_failAssert0_add5304_failAssert0
File saved to the following path: /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
Loading /tmp/dspot-experiments/dataset/april-2019/mustache.java_parent/compiler/target/dspot/TestResult.ser
[INFO] Test has been run: testConvert_add52_add1312null5903_failAssert0,testConvert_add43_remove1603null5840,testConvert_literalMutationString10_remove1568_remove5682,testConvert_literalMutationString11_add1230null5806_failAssert0,testConvert_add53null1685_add4485,testConvertnull62_failAssert0null1738_failAssert0_add5305_failAssert0,testConvert_add43_remove1597_add5170,testConvert_remove59null1732_failAssert0_add5335_failAssert0,testConvert_add44null1702_remove5508,testConvertnull62_failAssert0null1738_failAssert0_add5304_failAssert0,testConvert_literalMutationString7null1668_failAssert0_add5230_failAssert0,testConvert_literalMutationString8_remove1579_remove5667,testConvert_remove59null1732_failAssert0null5965_failAssert0,testConvert_literalMutationString5_failAssert0_add1514_failAssert0_literalMutationString4385_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0null5982_failAssert0,testConvert_literalMutationString8_remove1579null5869_failAssert0,testConvert_literalMutationString36_failAssert0null1755_failAssert0null5952_failAssert0,testConvert_add52_add1312_literalMutationString3308_failAssert0,testConvert_add44_literalMutationString635null5898_failAssert0,testConvert_literalMutationString11_remove1565_remove5661,testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5996_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4238_failAssert0,testConvert_literalMutationString12null1656_failAssert0_add5258_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5413_failAssert0,testConvert_literalMutationString5_failAssert0_add1514_failAssert0null6013_failAssert0,testConvert_remove56_add1409_add4834,testConvert_literalMutationString9_add1181_add4775,testConvert_literalMutationString11_remove1565null5865_failAssert0,testConvert_add48_add1395null5793_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0_literalMutationString4103_failAssert0,testConvert_literalMutationString36_failAssert0_add1528_failAssert0_add5429_failAssert0,testConvert_literalMutationString12null1656_failAssert0null5944_failAssert0,testConvert_literalMutationString7null1668_failAssert0_literalMutationString3587_failAssert0,testConvert_literalMutationString5_failAssert0null1751_failAssert0_literalMutationString3894_failAssert0,testConvert_literalMutationString9_add1181null5816_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0null5992_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_add5410_failAssert0,testConvert_literalMutationString5_failAssert0null1751_failAssert0_add5319_failAssert0,testConvert_literalMutationString10_remove1568_add5025,testConvert_literalMutationString36_failAssert0null1755_failAssert0_add5297_failAssert0,testConvert_literalMutationString11_remove1565_literalMutationString3018,testConvert_literalMutationString36_failAssert0_add1528_failAssert0_literalMutationString4261_failAssert0,testConvertnull62_failAssert0_literalMutationString940_failAssert0_add5375_failAssert0,testConvert_literalMutationString36_failAssert0null1755_failAssert0_literalMutationString3830_failAssert0,testConvert_remove59null1732_failAssert0_literalMutationString3931_failAssert0,testConvert_add48_add1395_remove5560,testConvert_add48_add1395_remove5563,testConvert_literalMutationString5_failAssert0_add1514_failAssert0_add5459_failAssert0,testConvert_literalMutationString36_failAssert0_add1528_failAssert0null5999_failAssert0,testConvert_add43_remove1603_add4862,testConvert_add43_remove1603_literalMutationString2805,testConvert_literalMutationString11_remove1565_add4968,testConvert_add52_add1312_remove5715,testConvertnull62_failAssert0null1738_failAssert0null5956_failAssert0,testConvert_add44null1702_add4532,testConvert_add43null1696_add4519,testConvert_add43null1696_remove5498,testConvert_add52_add1312_add5124,testConvert_literalMutationString12null1656_failAssert0_literalMutationString3690_failAssert0,testConvertnull62_failAssert0null1738_failAssert0_literalMutationString3864_failAssert0,testConvert_literalMutationString1_failAssert0_add1497_failAssert0_literalMutationString4222_failAssert0,testConvert_add44null1702_literalMutationString2076,testConvert_literalMutationString9_add1181_remove5593,testConvert_add43_remove1603_remove5633,testConvert_literalMutationString10_remove1568null5877,testConvert_literalMutationString5_failAssert0null1751_failAssert0null5962_failAssert0,testConvert_literalMutationString7null1668_failAssert0null5930_failAssert0,testConvert_add48_add1395_literalMutationString2389_failAssert0,testConvert_literalMutationString8_remove1579_add4982
[INFO] 0 amplified test methods has been selected to be kept.
[INFO] 0 amplified test methods has been selected to be kept. (global: 0)
[INFO] elapsedTime 30202
[DEBUG] OPTIMIZATION: GC invoked
[WARNING] DSpot could not obtain any amplified test method.
[WARNING] You can customize the following options: --amplifiers, --test-criterion, --iteration, --budgetizer etc, and retry with a new configuration.
[INFO] Amplification succeed.
[INFO] Elapsed time 123087 ms
[INFO] 
0 amplified test fails on the new versions.
0 amplified test fails on the new versions.
[INFO] Writing report in /tmp/dspot-experiments/results/april-2019/mustache.java/commit_2_d8936b4/input_amplification/3/report.txt
[INFO] DSpot amplified your test suite without errors. (no errors report will be outputted)
[INFO] The amplification ends up with 0 amplified test methods over 0 test classes.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 02:11 min
[INFO] Finished at: 2019-05-23T22:20:08+02:00
[INFO] Final Memory: 79M/3131M
[INFO] ------------------------------------------------------------------------
