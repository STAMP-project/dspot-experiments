package org.xwiki.xml.internal.html;


import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.xerces.dom.DocumentImpl;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.DOMStringList;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.TypeInfo;
import org.xwiki.component.manager.ComponentManager;
import org.xwiki.test.annotation.ComponentList;
import org.xwiki.test.junit5.mockito.ComponentTest;
import org.xwiki.test.junit5.mockito.InjectMockComponents;
import org.xwiki.xml.html.HTMLCleanerConfiguration;
import org.xwiki.xml.html.HTMLUtils;
import org.xwiki.xml.html.filter.HTMLFilter;
import org.xwiki.xml.internal.html.filter.AttributeFilter;
import org.xwiki.xml.internal.html.filter.BodyFilter;
import org.xwiki.xml.internal.html.filter.FontFilter;
import org.xwiki.xml.internal.html.filter.LinkFilter;
import org.xwiki.xml.internal.html.filter.ListFilter;
import org.xwiki.xml.internal.html.filter.ListItemFilter;
import org.xwiki.xml.internal.html.filter.UniqueIdFilter;


@ComponentTest
@ComponentList({ ListFilter.class, ListItemFilter.class, FontFilter.class, BodyFilter.class, AttributeFilter.class, UniqueIdFilter.class, DefaultHTMLCleaner.class, LinkFilter.class })
public class AmplDefaultHTMLCleanerTest {
    public static final String HEADER = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + ("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" " + "\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n");

    private static final String HEADER_FULL = (AmplDefaultHTMLCleanerTest.HEADER) + "<html><head></head><body>";

    private static final String FOOTER = "</body></html>\n";

    @InjectMockComponents
    private DefaultHTMLCleaner cleaner;

    @Test
    public void restrictedHtml_add140() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add140__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add140__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_104 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_104);
        String o_restrictedHtml_add140__14 = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", o_restrictedHtml_add140__14);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_105 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_105);
        Assertions.assertNull(o_restrictedHtml_add140__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_104);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", o_restrictedHtml_add140__14);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add141() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add141__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add141__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_98 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_98);
        Document o_restrictedHtml_add141__14 = this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration);
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getInternalSubset());
        Assertions.assertEquals("-//W3C//DTD XHTML 1.0 Strict//EN", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getPublicId());
        Assertions.assertEquals("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getSystemId());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNotations())).getLength())));
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getEntities())).getLength())));
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getLastChild());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getPreviousSibling());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).hasChildNodes());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).hasAttributes());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getBaseURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getTextContent());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getFirstChild());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNodeType())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getChildNodes())).getLength())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getLocalName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNamespaceURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getPrefix());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getInputEncoding());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getXmlEncoding());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getXmlStandalone());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add141__14)).getXmlVersion());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add141__14)).getStrictErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentURI());
        Assertions.assertEquals(24, ((int) (((DOMStringList) (((DOMConfiguration) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDomConfig())).getParameterNames())).getLength())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getAsync());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getBaseURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getTextContent());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add141__14)).getVersion());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getSchemaTypeInfo())).getTypeNamespace());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getSchemaTypeInfo())).getTypeName());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getTagName());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).hasChildNodes());
        Assertions.assertFalse(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).hasAttributes());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNextSibling());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNodeType())));
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLocalName());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNamespaceURI());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getAttributes())).getLength())));
        Assertions.assertEquals("#document", ((DocumentImpl) (o_restrictedHtml_add141__14)).getNodeName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((DocumentImpl) (o_restrictedHtml_add141__14)).getNodeType())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getStandalone());
        Assertions.assertFalse(((Enumeration) (((DocumentImpl) (o_restrictedHtml_add141__14)).getIdentifiers())).hasMoreElements());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add141__14)).getErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getEncoding());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getAttributes())).getLength())));
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add141__14)).hasChildNodes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getFirstChild());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getChildNodes())).getLength())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((DocumentImpl) (o_restrictedHtml_add141__14)).getChildNodes())).getLength())));
        Assertions.assertEquals(2, ((int) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLength())));
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getPreviousSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getNextSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getParentNode());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).hasAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getNodeValue());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getLocalName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getNamespaceURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getPrefix());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getReadOnly());
        Assertions.assertEquals("[#document: null]", ((DocumentImpl) (o_restrictedHtml_add141__14)).toString());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getAttributes());
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_99 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_99);
        Assertions.assertNull(o_restrictedHtml_add141__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_98);
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getInternalSubset());
        Assertions.assertEquals("-//W3C//DTD XHTML 1.0 Strict//EN", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getPublicId());
        Assertions.assertEquals("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getSystemId());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNotations())).getLength())));
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getEntities())).getLength())));
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getLastChild());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getPreviousSibling());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).hasChildNodes());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).hasAttributes());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getBaseURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getTextContent());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getFirstChild());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNodeType())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getChildNodes())).getLength())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getLocalName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getNamespaceURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getPrefix());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDoctype())).getAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getInputEncoding());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getXmlEncoding());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getXmlStandalone());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add141__14)).getXmlVersion());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add141__14)).getStrictErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentURI());
        Assertions.assertEquals(24, ((int) (((DOMStringList) (((DOMConfiguration) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDomConfig())).getParameterNames())).getLength())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getAsync());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getBaseURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getTextContent());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add141__14)).getVersion());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getSchemaTypeInfo())).getTypeNamespace());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getSchemaTypeInfo())).getTypeName());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getTagName());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).hasChildNodes());
        Assertions.assertFalse(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).hasAttributes());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNextSibling());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNodeType())));
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getLocalName());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getNamespaceURI());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Element) (((DocumentImpl) (o_restrictedHtml_add141__14)).getDocumentElement())).getAttributes())).getLength())));
        Assertions.assertEquals("#document", ((DocumentImpl) (o_restrictedHtml_add141__14)).getNodeName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((DocumentImpl) (o_restrictedHtml_add141__14)).getNodeType())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getStandalone());
        Assertions.assertFalse(((Enumeration) (((DocumentImpl) (o_restrictedHtml_add141__14)).getIdentifiers())).hasMoreElements());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add141__14)).getErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getEncoding());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLastChild())).getAttributes())).getLength())));
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add141__14)).hasChildNodes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getFirstChild());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("p {color:white;}", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getChildNodes())).getLength())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add141__14)).getFirstChild())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((DocumentImpl) (o_restrictedHtml_add141__14)).getChildNodes())).getLength())));
        Assertions.assertEquals(2, ((int) (((DocumentImpl) (o_restrictedHtml_add141__14)).getLength())));
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getPreviousSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getNextSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getParentNode());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).hasAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getNodeValue());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getLocalName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getNamespaceURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getPrefix());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add141__14)).getReadOnly());
        Assertions.assertEquals("[#document: null]", ((DocumentImpl) (o_restrictedHtml_add141__14)).toString());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add141__14)).getAttributes());
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add135() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        configuration.getParameters();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add135__8 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add135__8);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_100 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_100);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_101 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_101);
        Assertions.assertNull(o_restrictedHtml_add135__8);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_100);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add136() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add136__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add136__7);
        String o_restrictedHtml_add136__8 = parameters.put("restricted", "true");
        Assertions.assertEquals("true", o_restrictedHtml_add136__8);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_94 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_94);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_95 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_95);
        Assertions.assertNull(o_restrictedHtml_add136__7);
        Assertions.assertEquals("true", o_restrictedHtml_add136__8);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_94);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_6 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_6);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_7 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_7);
        Assertions.assertNull(o_restrictedHtml__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_6);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add137() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add137__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add137__7);
        configuration.setParameters(parameters);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_106 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_106);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_107 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_107);
        Assertions.assertNull(o_restrictedHtml_add137__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_106);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add138() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add138__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add138__7);
        configuration.setParameters(parameters);
        String o_restrictedHtml_add138__9 = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", o_restrictedHtml_add138__9);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_96 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_96);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_97 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_97);
        Assertions.assertNull(o_restrictedHtml_add138__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", o_restrictedHtml_add138__9);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_96);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString130() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString130__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString130__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_52 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_52);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<a href=\"http://xwiki.org\" target=\"_blank\">label</a>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p><a href=\"http://xwiki.org\" rel=\" noopener noreferrer\" target=\"_blank\">label</a></p></body></html>\n", result);
        String String_53 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_53);
        Assertions.assertNull(o_restrictedHtml_literalMutationString130__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p><a href=\"http://xwiki.org\" rel=\" noopener noreferrer\" target=\"_blank\">label</a></p></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_52);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p><a href=\"http://xwiki.org\" rel=\" noopener noreferrer\" target=\"_blank\">label</a></p></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add133() throws Exception {
        this.cleaner.getDefaultConfiguration();
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add133__8 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add133__8);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_102 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_102);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_103 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_103);
        Assertions.assertNull(o_restrictedHtml_add133__8);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_102);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add134() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add134__9 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add134__9);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_108 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_108);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_109 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_109);
        Assertions.assertNull(o_restrictedHtml_add134__9);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_108);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString123() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString123__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString123__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<scrpt>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p>alert(\"foo\")</p></body></html>\n", result);
        String String_74 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_74);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_75 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_75);
        Assertions.assertNull(o_restrictedHtml_literalMutationString123__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_74);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString131() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString131__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString131__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_44 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_44);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p{color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p{color:white;}</pre></body></html>\n", result);
        String String_45 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_45);
        Assertions.assertNull(o_restrictedHtml_literalMutationString131__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p{color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_44);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p{color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString132() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString132__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString132__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_42 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_42);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("ZBob5_83OI`-k-a8(J8Bp[$XdYQ7-#s"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p>ZBob5_83OI`-k-a8(J8Bp[$XdYQ7-#s</p></body></html>\n", result);
        String String_43 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_43);
        Assertions.assertNull(o_restrictedHtml_literalMutationString132__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p>ZBob5_83OI`-k-a8(J8Bp[$XdYQ7-#s</p></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_42);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p>ZBob5_83OI`-k-a8(J8Bp[$XdYQ7-#s</p></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString126() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString126__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString126__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert (\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert (\"foo\")</pre></body></html>\n", result);
        String String_84 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_84);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_85 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_85);
        Assertions.assertNull(o_restrictedHtml_literalMutationString126__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_84);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_add139() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_add139__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_add139__7);
        configuration.setParameters(parameters);
        Document o_restrictedHtml_add139__9 = this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration);
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getInternalSubset());
        Assertions.assertEquals("-//W3C//DTD XHTML 1.0 Strict//EN", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getPublicId());
        Assertions.assertEquals("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getSystemId());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNotations())).getLength())));
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getEntities())).getLength())));
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getLastChild());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getPreviousSibling());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).hasChildNodes());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).hasAttributes());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getBaseURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getTextContent());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getFirstChild());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNodeType())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getChildNodes())).getLength())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getLocalName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNamespaceURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getPrefix());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getInputEncoding());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getXmlEncoding());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getXmlStandalone());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add139__9)).getXmlVersion());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add139__9)).getStrictErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentURI());
        Assertions.assertEquals(24, ((int) (((DOMStringList) (((DOMConfiguration) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDomConfig())).getParameterNames())).getLength())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getAsync());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getBaseURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getTextContent());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add139__9)).getVersion());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getSchemaTypeInfo())).getTypeNamespace());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getSchemaTypeInfo())).getTypeName());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getTagName());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).hasChildNodes());
        Assertions.assertFalse(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).hasAttributes());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNextSibling());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNodeType())));
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLocalName());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNamespaceURI());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getAttributes())).getLength())));
        Assertions.assertEquals("#document", ((DocumentImpl) (o_restrictedHtml_add139__9)).getNodeName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((DocumentImpl) (o_restrictedHtml_add139__9)).getNodeType())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getStandalone());
        Assertions.assertFalse(((Enumeration) (((DocumentImpl) (o_restrictedHtml_add139__9)).getIdentifiers())).hasMoreElements());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add139__9)).getErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getEncoding());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getAttributes())).getLength())));
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add139__9)).hasChildNodes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getFirstChild());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getChildNodes())).getLength())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((DocumentImpl) (o_restrictedHtml_add139__9)).getChildNodes())).getLength())));
        Assertions.assertEquals(2, ((int) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLength())));
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getPreviousSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getNextSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getParentNode());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).hasAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getNodeValue());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getLocalName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getNamespaceURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getPrefix());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getReadOnly());
        Assertions.assertEquals("[#document: null]", ((DocumentImpl) (o_restrictedHtml_add139__9)).toString());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getAttributes());
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_92 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_92);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_93 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_93);
        Assertions.assertNull(o_restrictedHtml_add139__7);
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getInternalSubset());
        Assertions.assertEquals("-//W3C//DTD XHTML 1.0 Strict//EN", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getPublicId());
        Assertions.assertEquals("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getSystemId());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNotations())).getLength())));
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getEntities())).getLength())));
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getLastChild());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getPreviousSibling());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).hasChildNodes());
        Assertions.assertFalse(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).hasAttributes());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getBaseURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getTextContent());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getFirstChild());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNodeType())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getChildNodes())).getLength())));
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getLocalName());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getNamespaceURI());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getPrefix());
        Assertions.assertNull(((DocumentType) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDoctype())).getAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getInputEncoding());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getXmlEncoding());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getXmlStandalone());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add139__9)).getXmlVersion());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add139__9)).getStrictErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentURI());
        Assertions.assertEquals(24, ((int) (((DOMStringList) (((DOMConfiguration) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDomConfig())).getParameterNames())).getLength())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getAsync());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getBaseURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getTextContent());
        Assertions.assertEquals("1.0", ((DocumentImpl) (o_restrictedHtml_add139__9)).getVersion());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getSchemaTypeInfo())).getTypeNamespace());
        Assertions.assertNull(((TypeInfo) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getSchemaTypeInfo())).getTypeName());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getTagName());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).hasChildNodes());
        Assertions.assertFalse(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).hasAttributes());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNextSibling());
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNodeType())));
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getLocalName());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getNamespaceURI());
        Assertions.assertNull(((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Element) (((DocumentImpl) (o_restrictedHtml_add139__9)).getDocumentElement())).getAttributes())).getLength())));
        Assertions.assertEquals("#document", ((DocumentImpl) (o_restrictedHtml_add139__9)).getNodeName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((DocumentImpl) (o_restrictedHtml_add139__9)).getNodeType())));
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getStandalone());
        Assertions.assertFalse(((Enumeration) (((DocumentImpl) (o_restrictedHtml_add139__9)).getIdentifiers())).hasMoreElements());
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add139__9)).getErrorChecking());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getEncoding());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNextSibling());
        Assertions.assertEquals("body", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLastChild())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getFirstChild());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNodeName());
        Assertions.assertEquals(10, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPreviousSibling())).getAttributes());
        Assertions.assertTrue(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getBaseURI());
        Assertions.assertEquals("", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getFirstChild());
        Assertions.assertEquals("head", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(1, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getChildNodes())).getLength())));
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getPrefix());
        Assertions.assertEquals(0, ((int) (((NamedNodeMap) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLastChild())).getAttributes())).getLength())));
        Assertions.assertTrue(((DocumentImpl) (o_restrictedHtml_add139__9)).hasChildNodes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getLastChild());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getPreviousSibling());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).hasChildNodes());
        Assertions.assertFalse(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).hasAttributes());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getBaseURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getTextContent());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getFirstChild());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getBaseURI());
        Assertions.assertEquals("alert(\"foo\")", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNextSibling());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNodeName());
        Assertions.assertEquals(1, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNodeValue());
        Assertions.assertEquals("html", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNextSibling())).getPrefix());
        Assertions.assertEquals("html", ((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getInputEncoding());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getXmlEncoding());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getXmlStandalone());
        Assertions.assertEquals("1.0", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getXmlVersion());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getStrictErrorChecking());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getDocumentURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getPreviousSibling());
        Assertions.assertTrue(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).hasChildNodes());
        Assertions.assertFalse(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).hasAttributes());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getBaseURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getTextContent());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNextSibling());
        Assertions.assertEquals("#document", ((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNodeName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNodeType())));
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNodeValue());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getParentNode());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getLocalName());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getNamespaceURI());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getPrefix());
        Assertions.assertNull(((Document) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getOwnerDocument())).getAttributes());
        Assertions.assertEquals(10, ((short) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNodeType())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getPreviousSibling());
        Assertions.assertTrue(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).hasChildNodes());
        Assertions.assertFalse(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).hasAttributes());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getBaseURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getTextContent());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNextSibling());
        Assertions.assertEquals("#document", ((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNodeName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getOwnerDocument());
        Assertions.assertEquals(9, ((short) (((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNodeType())));
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNodeValue());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getParentNode());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getLocalName());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getNamespaceURI());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getPrefix());
        Assertions.assertNull(((Node) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getParentNode())).getAttributes());
        Assertions.assertEquals(0, ((int) (((NodeList) (((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getChildNodes())).getLength())));
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getLocalName());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getNamespaceURI());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getPrefix());
        Assertions.assertNull(((Node) (((DocumentImpl) (o_restrictedHtml_add139__9)).getFirstChild())).getAttributes());
        Assertions.assertEquals(2, ((int) (((NodeList) (((DocumentImpl) (o_restrictedHtml_add139__9)).getChildNodes())).getLength())));
        Assertions.assertEquals(2, ((int) (((DocumentImpl) (o_restrictedHtml_add139__9)).getLength())));
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getPreviousSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getNextSibling());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getParentNode());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).hasAttributes());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getNodeValue());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getLocalName());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getNamespaceURI());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getPrefix());
        Assertions.assertFalse(((DocumentImpl) (o_restrictedHtml_add139__9)).getReadOnly());
        Assertions.assertEquals("[#document: null]", ((DocumentImpl) (o_restrictedHtml_add139__9)).toString());
        Assertions.assertNull(((DocumentImpl) (o_restrictedHtml_add139__9)).getAttributes());
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_92);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString127() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString127__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString127__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_64 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_64);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader(""), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body></body></html>\n", result);
        String String_65 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_65);
        Assertions.assertNull(o_restrictedHtml_literalMutationString127__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_64);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString124() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString124__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString124__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<sc`ipt>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p>alert(\"foo\")</p></body></html>\n", result);
        String String_48 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_48);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_49 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_49);
        Assertions.assertNull(o_restrictedHtml_literalMutationString124__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_48);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString125() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString125__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString125__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("!3a(!.#b{[Iz>YSe|%xHdm7#=ToX)"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><p>!3a(!.#b{[Iz>YSe|%xHdm7#=ToX)</p></body></html>\n", result);
        String String_46 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_46);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_47 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_47);
        Assertions.assertNull(o_restrictedHtml_literalMutationString125__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_46);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString128() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString128__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString128__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_78 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_78);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:whi>te;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:whi>te;}</pre></body></html>\n", result);
        String String_79 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_79);
        Assertions.assertNull(o_restrictedHtml_literalMutationString128__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:whi>te;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_78);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:whi>te;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtml_literalMutationString129() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtml_literalMutationString129__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_literalMutationString129__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_38 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_38);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p7{color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p7{color:white;}</pre></body></html>\n", result);
        String String_39 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_39);
        Assertions.assertNull(o_restrictedHtml_literalMutationString129__7);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p7{color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_38);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p7{color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void restrictedHtmlnull149() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        parameters.putAll(configuration.getParameters());
        String o_restrictedHtmlnull149__7 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtmlnull149__7);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_116 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_116);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), null));
        String String_117 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
    }

    @Test
    public void restrictedHtml_remove142() throws Exception {
        HTMLCleanerConfiguration configuration = this.cleaner.getDefaultConfiguration();
        Map<String, String> parameters = new HashMap<String, String>();
        String o_restrictedHtml_remove142__5 = parameters.put("restricted", "true");
        Assertions.assertNull(o_restrictedHtml_remove142__5);
        configuration.setParameters(parameters);
        String result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<script>alert(\"foo\")</script>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", result);
        String String_86 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>alert(\"foo\")</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_86);
        result = HTMLUtils.toString(this.cleaner.clean(new StringReader("<style>p {color:white;}</style>"), configuration));
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        String String_87 = ((AmplDefaultHTMLCleanerTest.HEADER_FULL) + "<pre>p {color:white;}</pre>") + (AmplDefaultHTMLCleanerTest.FOOTER);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", String_87);
        Assertions.assertNull(o_restrictedHtml_remove142__5);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>alert(\"foo\")</pre></body></html>\n", String_86);
        Assertions.assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html><head></head><body><pre>p {color:white;}</pre></body></html>\n", result);
    }

    @Test
    public void duplicateIds(ComponentManager componentManager) throws Exception {
        String actual = "<p id=\"x\">1</p><p id=\"xy\">2</p><p id=\"x\">3</p>";
        String expected = "<p id=\"x\">1</p><p id=\"xy\">2</p><p id=\"x0\">3</p>";
        HTMLCleanerConfiguration config = this.cleaner.getDefaultConfiguration();
        List<HTMLFilter> filters = new ArrayList<>(config.getFilters());
        filters.add(componentManager.getInstance(HTMLFilter.class, "uniqueId"));
        config.setFilters(filters);
        Assertions.assertEquals((((AmplDefaultHTMLCleanerTest.HEADER_FULL) + expected) + (AmplDefaultHTMLCleanerTest.FOOTER)), HTMLUtils.toString(this.cleaner.clean(new StringReader(actual), config)));
    }

    @Test
    @Disabled("See https://jira.xwiki.org/browse/XWIKI-9753")
    public void cleanTitleWithNamespace() {
        String input = "<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\n" + (((((((((((("  <head>\n" + "    <title>Title test</title>\n") + "  </head>\n") + "  <body>\n") + "    <p>before</p>\n") + "    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"300\" width=\"500\">\n") + "      <g>\n") + "        <title>SVG Title Demo example</title>\n") + "        <rect height=\"50\" style=\"fill:none; stroke:blue; stroke-width:1px\" width=\"200\" x=\"10\" ") + "y=\"10\"></rect>\n") + "      </g>\n") + "    </svg>\n") + "    <p>after</p>\n");
        Assertions.assertEquals((((AmplDefaultHTMLCleanerTest.HEADER) + input) + (AmplDefaultHTMLCleanerTest.FOOTER)), HTMLUtils.toString(this.cleaner.clean(new StringReader(input))));
    }

    @Test
    @Disabled("See https://sourceforge.net/p/htmlcleaner/bugs/168/")
    public void cleanHTMLTagWithNamespace() {
        String input = "<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>";
        Assertions.assertEquals((((AmplDefaultHTMLCleanerTest.HEADER) + input) + (AmplDefaultHTMLCleanerTest.FOOTER)), HTMLUtils.toString(this.cleaner.clean(new StringReader(input))));
        HTMLCleanerConfiguration config = this.cleaner.getDefaultConfiguration();
        config.setParameters(Collections.singletonMap(HTMLCleanerConfiguration.NAMESPACES_AWARE, "false"));
        Assertions.assertEquals((((AmplDefaultHTMLCleanerTest.HEADER) + "<html><head></head><body>") + (AmplDefaultHTMLCleanerTest.FOOTER)), HTMLUtils.toString(this.cleaner.clean(new StringReader(input), config)));
    }

    private void assertHTML(String expected, String actual) {
        Assertions.assertEquals((((AmplDefaultHTMLCleanerTest.HEADER_FULL) + expected) + (AmplDefaultHTMLCleanerTest.FOOTER)), HTMLUtils.toString(this.cleaner.clean(new StringReader(actual))));
    }

    private void assertHTMLWithHeadContent(String expected, String actual) {
        Assertions.assertEquals((((((AmplDefaultHTMLCleanerTest.HEADER) + "<html><head>") + expected) + "</head><body>") + (AmplDefaultHTMLCleanerTest.FOOTER)), HTMLUtils.toString(this.cleaner.clean(new StringReader(actual))));
    }
}

