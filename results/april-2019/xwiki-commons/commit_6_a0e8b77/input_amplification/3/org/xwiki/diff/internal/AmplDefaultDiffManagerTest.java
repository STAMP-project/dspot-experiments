package org.xwiki.diff.internal;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.apache.commons.lang3.StringUtils;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.xwiki.diff.DiffManager;
import org.xwiki.diff.MergeResult;
import org.xwiki.logging.LogLevel;
import org.xwiki.test.mockito.MockitoComponentMockingRule;


public class AmplDefaultDiffManagerTest {
    @Rule
    public final MockitoComponentMockingRule<DiffManager> mocker = new MockitoComponentMockingRule<DiffManager>(DefaultDiffManager.class);

    private static List<Character> toCharacters(String str) {
        List<Character> characters;
        if (str != null) {
            characters = new ArrayList<Character>(str.length());
            for (char c : str.toCharArray()) {
                characters.add(c);
            }
        } else {
            characters = Collections.emptyList();
        }
        return characters;
    }

    private static String toString(List<Character> characters) {
        return StringUtils.join(characters, null);
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add240() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add240__9 = Arrays.asList("some new content");
        Assert.assertTrue(o_testMergeStringList_add240__9.contains("some new content"));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add240__18 = Arrays.asList("some current content");
        Assert.assertTrue(o_testMergeStringList_add240__18.contains("some current content"));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add240__27 = Arrays.asList("some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("after"));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add240__36 = Arrays.asList("before", "some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("after"));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add240__45 = Arrays.asList("before", "some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("after"));
        result.getMerged();
        List<String> o_testMergeStringList_add240__47 = Arrays.asList("before", "some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("after"));
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add240__49 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getMerged().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add240__49)).getLog().isEmpty());
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCurrent().contains("some new content"));
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add240__61 = Arrays.asList("some new content");
        Assert.assertTrue(o_testMergeStringList_add240__61.contains("some new content"));
        result.getMerged();
        List<String> o_testMergeStringList_add240__63 = Arrays.asList("some new content");
        Assert.assertTrue(o_testMergeStringList_add240__63.contains("some new content"));
        result.getMerged();
        Assert.assertTrue(o_testMergeStringList_add240__9.contains("some new content"));
        Assert.assertTrue(o_testMergeStringList_add240__18.contains("some current content"));
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("after"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("after"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("after"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("after"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getMerged().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add240__49)).getLog().isEmpty());
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCurrent().contains("some new content"));
        Assert.assertTrue(o_testMergeStringList_add240__61.contains("some new content"));
        Assert.assertTrue(o_testMergeStringList_add240__63.contains("some new content"));
    }

    @Test(timeout = 10000)
    public void testMergeCharList() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("b"), null);
        int o_testMergeCharList__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__9)));
        List<Character> o_testMergeCharList__12 = AmplDefaultDiffManagerTest.toCharacters("b");
        Assert.assertTrue(o_testMergeCharList__12.contains('b'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__21)));
        List<Character> o_testMergeCharList__24 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__24.contains('a'));
        Assert.assertTrue(o_testMergeCharList__24.contains('b'));
        Assert.assertTrue(o_testMergeCharList__24.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__33 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__33)));
        int o_testMergeCharList__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__36)));
        List<Character> o_testMergeCharList__39 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__39.contains('a'));
        Assert.assertTrue(o_testMergeCharList__39.contains('b'));
        Assert.assertTrue(o_testMergeCharList__39.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__41 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__41.contains('a'));
        Assert.assertTrue(o_testMergeCharList__41.contains('b'));
        Assert.assertTrue(o_testMergeCharList__41.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ac"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ac"), null);
        int o_testMergeCharList__50 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__50)));
        int o_testMergeCharList__53 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__53)));
        int o_testMergeCharList__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__56)));
        List<Character> o_testMergeCharList__59 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__59.contains('a'));
        Assert.assertTrue(o_testMergeCharList__59.contains('b'));
        Assert.assertTrue(o_testMergeCharList__59.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__61 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__61.contains('a'));
        Assert.assertTrue(o_testMergeCharList__61.contains('b'));
        Assert.assertTrue(o_testMergeCharList__61.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__63 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__63.contains('a'));
        Assert.assertTrue(o_testMergeCharList__63.contains('b'));
        Assert.assertTrue(o_testMergeCharList__63.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__72 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__72)));
        int o_testMergeCharList__75 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__75)));
        int o_testMergeCharList__78 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__78)));
        int o_testMergeCharList__81 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__81)));
        List<Character> o_testMergeCharList__84 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__84.contains('a'));
        Assert.assertTrue(o_testMergeCharList__84.contains('b'));
        Assert.assertTrue(o_testMergeCharList__84.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__86 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__86.contains('a'));
        Assert.assertTrue(o_testMergeCharList__86.contains('b'));
        Assert.assertTrue(o_testMergeCharList__86.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__88 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__88.contains('a'));
        Assert.assertTrue(o_testMergeCharList__88.contains('b'));
        Assert.assertTrue(o_testMergeCharList__88.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__90 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__90.contains('a'));
        Assert.assertTrue(o_testMergeCharList__90.contains('b'));
        Assert.assertTrue(o_testMergeCharList__90.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__99 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__99)));
        int o_testMergeCharList__102 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__102)));
        int o_testMergeCharList__105 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__105)));
        int o_testMergeCharList__108 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__108)));
        int o_testMergeCharList__111 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__111)));
        List<Character> o_testMergeCharList__114 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__114.contains('a'));
        Assert.assertTrue(o_testMergeCharList__114.contains('b'));
        Assert.assertTrue(o_testMergeCharList__114.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__116 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__116.contains('a'));
        Assert.assertTrue(o_testMergeCharList__116.contains('b'));
        Assert.assertTrue(o_testMergeCharList__116.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__118 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__118.contains('a'));
        Assert.assertTrue(o_testMergeCharList__118.contains('b'));
        Assert.assertTrue(o_testMergeCharList__118.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__120 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__120.contains('a'));
        Assert.assertTrue(o_testMergeCharList__120.contains('b'));
        Assert.assertTrue(o_testMergeCharList__120.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__122 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__122.contains('a'));
        Assert.assertTrue(o_testMergeCharList__122.contains('b'));
        Assert.assertTrue(o_testMergeCharList__122.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("aibc"), AmplDefaultDiffManagerTest.toCharacters("abcj"), null);
        int o_testMergeCharList__131 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__131)));
        int o_testMergeCharList__134 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__134)));
        int o_testMergeCharList__137 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__137)));
        int o_testMergeCharList__140 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__140)));
        int o_testMergeCharList__143 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__143)));
        int o_testMergeCharList__146 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__146)));
        List<Character> o_testMergeCharList__149 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__149.contains('a'));
        Assert.assertTrue(o_testMergeCharList__149.contains('i'));
        Assert.assertTrue(o_testMergeCharList__149.contains('b'));
        Assert.assertTrue(o_testMergeCharList__149.contains('c'));
        Assert.assertTrue(o_testMergeCharList__149.contains('j'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("abcj"), AmplDefaultDiffManagerTest.toCharacters("aibc"), null);
        int o_testMergeCharList__157 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__157)));
        int o_testMergeCharList__160 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__160)));
        int o_testMergeCharList__163 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__163)));
        int o_testMergeCharList__166 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__166)));
        int o_testMergeCharList__169 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__169)));
        int o_testMergeCharList__172 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__172)));
        int o_testMergeCharList__175 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__175)));
        List<Character> o_testMergeCharList__178 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__178.contains('a'));
        Assert.assertTrue(o_testMergeCharList__178.contains('i'));
        Assert.assertTrue(o_testMergeCharList__178.contains('b'));
        Assert.assertTrue(o_testMergeCharList__178.contains('c'));
        Assert.assertTrue(o_testMergeCharList__178.contains('j'));
        result.getMerged();
        List<Character> o_testMergeCharList__180 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__180.contains('a'));
        Assert.assertTrue(o_testMergeCharList__180.contains('i'));
        Assert.assertTrue(o_testMergeCharList__180.contains('b'));
        Assert.assertTrue(o_testMergeCharList__180.contains('c'));
        Assert.assertTrue(o_testMergeCharList__180.contains('j'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ajbc"), AmplDefaultDiffManagerTest.toCharacters("aibc"), null);
        int o_testMergeCharList__188 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__188)));
        int o_testMergeCharList__191 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__191)));
        List<Character> o_testMergeCharList__194 = AmplDefaultDiffManagerTest.toCharacters("ajibc");
        Assert.assertTrue(o_testMergeCharList__194.contains('a'));
        Assert.assertTrue(o_testMergeCharList__194.contains('j'));
        Assert.assertTrue(o_testMergeCharList__194.contains('i'));
        Assert.assertTrue(o_testMergeCharList__194.contains('b'));
        Assert.assertTrue(o_testMergeCharList__194.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("aijb"), AmplDefaultDiffManagerTest.toCharacters("aib"), null);
        int o_testMergeCharList__202 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__202)));
        int o_testMergeCharList__205 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__205)));
        int o_testMergeCharList__208 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__208)));
        List<Character> o_testMergeCharList__211 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__211.contains('a'));
        Assert.assertTrue(o_testMergeCharList__211.contains('i'));
        Assert.assertTrue(o_testMergeCharList__211.contains('j'));
        Assert.assertTrue(o_testMergeCharList__211.contains('b'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("ajb"), AmplDefaultDiffManagerTest.toCharacters("aijb"), null);
        int o_testMergeCharList__219 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__219)));
        int o_testMergeCharList__222 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__222)));
        int o_testMergeCharList__225 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__225)));
        int o_testMergeCharList__228 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__228)));
        List<Character> o_testMergeCharList__231 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__231.contains('a'));
        Assert.assertTrue(o_testMergeCharList__231.contains('i'));
        Assert.assertTrue(o_testMergeCharList__231.contains('j'));
        Assert.assertTrue(o_testMergeCharList__231.contains('b'));
        result.getMerged();
        List<Character> o_testMergeCharList__233 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__233.contains('a'));
        Assert.assertTrue(o_testMergeCharList__233.contains('i'));
        Assert.assertTrue(o_testMergeCharList__233.contains('j'));
        Assert.assertTrue(o_testMergeCharList__233.contains('b'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("abc"), null);
        int o_testMergeCharList__241 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__241)));
        int o_testMergeCharList__244 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__244)));
        int o_testMergeCharList__247 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__247)));
        int o_testMergeCharList__250 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__250)));
        int o_testMergeCharList__253 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__253)));
        int o_testMergeCharList__256 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__256)));
        int o_testMergeCharList__259 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__259)));
        int o_testMergeCharList__262 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__262)));
        List<Character> o_testMergeCharList__265 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__265.contains('a'));
        Assert.assertTrue(o_testMergeCharList__265.contains('b'));
        Assert.assertTrue(o_testMergeCharList__265.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__267 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__267.contains('a'));
        Assert.assertTrue(o_testMergeCharList__267.contains('b'));
        Assert.assertTrue(o_testMergeCharList__267.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__269 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__269.contains('a'));
        Assert.assertTrue(o_testMergeCharList__269.contains('b'));
        Assert.assertTrue(o_testMergeCharList__269.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__271 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__271.contains('a'));
        Assert.assertTrue(o_testMergeCharList__271.contains('b'));
        Assert.assertTrue(o_testMergeCharList__271.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__273 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__273.contains('a'));
        Assert.assertTrue(o_testMergeCharList__273.contains('b'));
        Assert.assertTrue(o_testMergeCharList__273.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__275 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__275.contains('a'));
        Assert.assertTrue(o_testMergeCharList__275.contains('b'));
        Assert.assertTrue(o_testMergeCharList__275.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__283 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__283)));
        int o_testMergeCharList__286 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__286)));
        int o_testMergeCharList__289 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__289)));
        int o_testMergeCharList__292 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__292)));
        int o_testMergeCharList__295 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__295)));
        int o_testMergeCharList__298 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__298)));
        int o_testMergeCharList__301 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__301)));
        int o_testMergeCharList__304 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__304)));
        int o_testMergeCharList__307 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__307)));
        List<Character> o_testMergeCharList__310 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__310.contains('a'));
        Assert.assertTrue(o_testMergeCharList__310.contains('b'));
        Assert.assertTrue(o_testMergeCharList__310.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__312 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__312.contains('a'));
        Assert.assertTrue(o_testMergeCharList__312.contains('b'));
        Assert.assertTrue(o_testMergeCharList__312.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__314 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__314.contains('a'));
        Assert.assertTrue(o_testMergeCharList__314.contains('b'));
        Assert.assertTrue(o_testMergeCharList__314.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__316 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__316.contains('a'));
        Assert.assertTrue(o_testMergeCharList__316.contains('b'));
        Assert.assertTrue(o_testMergeCharList__316.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__318 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__318.contains('a'));
        Assert.assertTrue(o_testMergeCharList__318.contains('b'));
        Assert.assertTrue(o_testMergeCharList__318.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__320 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__320.contains('a'));
        Assert.assertTrue(o_testMergeCharList__320.contains('b'));
        Assert.assertTrue(o_testMergeCharList__320.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__322 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__322.contains('a'));
        Assert.assertTrue(o_testMergeCharList__322.contains('b'));
        Assert.assertTrue(o_testMergeCharList__322.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("abc"), null);
        int o_testMergeCharList__330 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__330)));
        int o_testMergeCharList__333 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__333)));
        int o_testMergeCharList__336 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__336)));
        int o_testMergeCharList__339 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__339)));
        int o_testMergeCharList__342 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__342)));
        int o_testMergeCharList__345 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__345)));
        int o_testMergeCharList__348 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__348)));
        int o_testMergeCharList__351 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__351)));
        int o_testMergeCharList__354 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__354)));
        int o_testMergeCharList__357 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__357)));
        List<Character> o_testMergeCharList__360 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__360.contains('a'));
        Assert.assertTrue(o_testMergeCharList__360.contains('b'));
        Assert.assertTrue(o_testMergeCharList__360.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__362 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__362.contains('a'));
        Assert.assertTrue(o_testMergeCharList__362.contains('b'));
        Assert.assertTrue(o_testMergeCharList__362.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__364 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__364.contains('a'));
        Assert.assertTrue(o_testMergeCharList__364.contains('b'));
        Assert.assertTrue(o_testMergeCharList__364.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__366 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__366.contains('a'));
        Assert.assertTrue(o_testMergeCharList__366.contains('b'));
        Assert.assertTrue(o_testMergeCharList__366.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__368 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__368.contains('a'));
        Assert.assertTrue(o_testMergeCharList__368.contains('b'));
        Assert.assertTrue(o_testMergeCharList__368.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__370 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__370.contains('a'));
        Assert.assertTrue(o_testMergeCharList__370.contains('b'));
        Assert.assertTrue(o_testMergeCharList__370.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__372 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__372.contains('a'));
        Assert.assertTrue(o_testMergeCharList__372.contains('b'));
        Assert.assertTrue(o_testMergeCharList__372.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__374 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__374.contains('a'));
        Assert.assertTrue(o_testMergeCharList__374.contains('b'));
        Assert.assertTrue(o_testMergeCharList__374.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__382 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__382)));
        int o_testMergeCharList__385 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__385)));
        int o_testMergeCharList__388 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__388)));
        int o_testMergeCharList__391 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__391)));
        int o_testMergeCharList__394 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__394)));
        int o_testMergeCharList__397 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__397)));
        int o_testMergeCharList__400 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__400)));
        int o_testMergeCharList__403 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__403)));
        int o_testMergeCharList__406 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__406)));
        int o_testMergeCharList__409 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__409)));
        int o_testMergeCharList__412 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__412)));
        List<Character> o_testMergeCharList__415 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__415.contains('a'));
        Assert.assertTrue(o_testMergeCharList__415.contains('b'));
        Assert.assertTrue(o_testMergeCharList__415.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__417 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__417.contains('a'));
        Assert.assertTrue(o_testMergeCharList__417.contains('b'));
        Assert.assertTrue(o_testMergeCharList__417.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__419 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__419.contains('a'));
        Assert.assertTrue(o_testMergeCharList__419.contains('b'));
        Assert.assertTrue(o_testMergeCharList__419.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__421 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__421.contains('a'));
        Assert.assertTrue(o_testMergeCharList__421.contains('b'));
        Assert.assertTrue(o_testMergeCharList__421.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__423 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__423.contains('a'));
        Assert.assertTrue(o_testMergeCharList__423.contains('b'));
        Assert.assertTrue(o_testMergeCharList__423.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__425 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__425.contains('a'));
        Assert.assertTrue(o_testMergeCharList__425.contains('b'));
        Assert.assertTrue(o_testMergeCharList__425.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__427 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__427.contains('a'));
        Assert.assertTrue(o_testMergeCharList__427.contains('b'));
        Assert.assertTrue(o_testMergeCharList__427.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__429 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__429.contains('a'));
        Assert.assertTrue(o_testMergeCharList__429.contains('b'));
        Assert.assertTrue(o_testMergeCharList__429.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__431 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__431.contains('a'));
        Assert.assertTrue(o_testMergeCharList__431.contains('b'));
        Assert.assertTrue(o_testMergeCharList__431.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("Alice Macro"), AmplDefaultDiffManagerTest.toCharacters("Alice Wiki Macro (upgraded)"), AmplDefaultDiffManagerTest.toCharacters("Alice Extension"), null);
        int o_testMergeCharList__440 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__440)));
        int o_testMergeCharList__443 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__443)));
        int o_testMergeCharList__446 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__446)));
        int o_testMergeCharList__449 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__449)));
        int o_testMergeCharList__452 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__452)));
        int o_testMergeCharList__455 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__455)));
        int o_testMergeCharList__458 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__458)));
        int o_testMergeCharList__461 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__461)));
        int o_testMergeCharList__464 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__464)));
        int o_testMergeCharList__467 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__467)));
        int o_testMergeCharList__470 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__470)));
        int o_testMergeCharList__473 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__473)));
        List<Character> o_testMergeCharList__476 = AmplDefaultDiffManagerTest.toCharacters("Alice Wiki Extension (upgraded)");
        Assert.assertTrue(o_testMergeCharList__476.contains('A'));
        Assert.assertTrue(o_testMergeCharList__476.contains('l'));
        Assert.assertTrue(o_testMergeCharList__476.contains('i'));
        Assert.assertTrue(o_testMergeCharList__476.contains('c'));
        Assert.assertTrue(o_testMergeCharList__476.contains('e'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("$a(b)"), AmplDefaultDiffManagerTest.toCharacters("$c(d)e"), AmplDefaultDiffManagerTest.toCharacters("$c(d)e"), null);
        int o_testMergeCharList__484 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__484)));
        int o_testMergeCharList__487 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__487)));
        int o_testMergeCharList__490 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__490)));
        int o_testMergeCharList__493 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__493)));
        int o_testMergeCharList__496 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__496)));
        int o_testMergeCharList__499 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__499)));
        int o_testMergeCharList__502 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__502)));
        int o_testMergeCharList__505 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__505)));
        int o_testMergeCharList__508 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__508)));
        int o_testMergeCharList__511 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__511)));
        int o_testMergeCharList__514 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__514)));
        int o_testMergeCharList__517 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__517)));
        int o_testMergeCharList__520 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__520)));
        String o_testMergeCharList__523 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("$c(d)e", o_testMergeCharList__523);
        Assert.assertEquals(1, ((int) (o_testMergeCharList__9)));
        Assert.assertTrue(o_testMergeCharList__12.contains('b'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__21)));
        Assert.assertTrue(o_testMergeCharList__24.contains('a'));
        Assert.assertTrue(o_testMergeCharList__24.contains('b'));
        Assert.assertTrue(o_testMergeCharList__24.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__33)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__36)));
        Assert.assertTrue(o_testMergeCharList__39.contains('a'));
        Assert.assertTrue(o_testMergeCharList__39.contains('b'));
        Assert.assertTrue(o_testMergeCharList__39.contains('c'));
        Assert.assertTrue(o_testMergeCharList__41.contains('a'));
        Assert.assertTrue(o_testMergeCharList__41.contains('b'));
        Assert.assertTrue(o_testMergeCharList__41.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__50)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__53)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__56)));
        Assert.assertTrue(o_testMergeCharList__59.contains('a'));
        Assert.assertTrue(o_testMergeCharList__59.contains('b'));
        Assert.assertTrue(o_testMergeCharList__59.contains('c'));
        Assert.assertTrue(o_testMergeCharList__61.contains('a'));
        Assert.assertTrue(o_testMergeCharList__61.contains('b'));
        Assert.assertTrue(o_testMergeCharList__61.contains('c'));
        Assert.assertTrue(o_testMergeCharList__63.contains('a'));
        Assert.assertTrue(o_testMergeCharList__63.contains('b'));
        Assert.assertTrue(o_testMergeCharList__63.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__72)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__75)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__78)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__81)));
        Assert.assertTrue(o_testMergeCharList__84.contains('a'));
        Assert.assertTrue(o_testMergeCharList__84.contains('b'));
        Assert.assertTrue(o_testMergeCharList__84.contains('c'));
        Assert.assertTrue(o_testMergeCharList__86.contains('a'));
        Assert.assertTrue(o_testMergeCharList__86.contains('b'));
        Assert.assertTrue(o_testMergeCharList__86.contains('c'));
        Assert.assertTrue(o_testMergeCharList__88.contains('a'));
        Assert.assertTrue(o_testMergeCharList__88.contains('b'));
        Assert.assertTrue(o_testMergeCharList__88.contains('c'));
        Assert.assertTrue(o_testMergeCharList__90.contains('a'));
        Assert.assertTrue(o_testMergeCharList__90.contains('b'));
        Assert.assertTrue(o_testMergeCharList__90.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__99)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__102)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__105)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__108)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__111)));
        Assert.assertTrue(o_testMergeCharList__114.contains('a'));
        Assert.assertTrue(o_testMergeCharList__114.contains('b'));
        Assert.assertTrue(o_testMergeCharList__114.contains('c'));
        Assert.assertTrue(o_testMergeCharList__116.contains('a'));
        Assert.assertTrue(o_testMergeCharList__116.contains('b'));
        Assert.assertTrue(o_testMergeCharList__116.contains('c'));
        Assert.assertTrue(o_testMergeCharList__118.contains('a'));
        Assert.assertTrue(o_testMergeCharList__118.contains('b'));
        Assert.assertTrue(o_testMergeCharList__118.contains('c'));
        Assert.assertTrue(o_testMergeCharList__120.contains('a'));
        Assert.assertTrue(o_testMergeCharList__120.contains('b'));
        Assert.assertTrue(o_testMergeCharList__120.contains('c'));
        Assert.assertTrue(o_testMergeCharList__122.contains('a'));
        Assert.assertTrue(o_testMergeCharList__122.contains('b'));
        Assert.assertTrue(o_testMergeCharList__122.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__131)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__134)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__137)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__140)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__143)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__146)));
        Assert.assertTrue(o_testMergeCharList__149.contains('a'));
        Assert.assertTrue(o_testMergeCharList__149.contains('i'));
        Assert.assertTrue(o_testMergeCharList__149.contains('b'));
        Assert.assertTrue(o_testMergeCharList__149.contains('c'));
        Assert.assertTrue(o_testMergeCharList__149.contains('j'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__157)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__160)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__163)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__166)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__169)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__172)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__175)));
        Assert.assertTrue(o_testMergeCharList__178.contains('a'));
        Assert.assertTrue(o_testMergeCharList__178.contains('i'));
        Assert.assertTrue(o_testMergeCharList__178.contains('b'));
        Assert.assertTrue(o_testMergeCharList__178.contains('c'));
        Assert.assertTrue(o_testMergeCharList__178.contains('j'));
        Assert.assertTrue(o_testMergeCharList__180.contains('a'));
        Assert.assertTrue(o_testMergeCharList__180.contains('i'));
        Assert.assertTrue(o_testMergeCharList__180.contains('b'));
        Assert.assertTrue(o_testMergeCharList__180.contains('c'));
        Assert.assertTrue(o_testMergeCharList__180.contains('j'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__188)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__191)));
        Assert.assertTrue(o_testMergeCharList__194.contains('a'));
        Assert.assertTrue(o_testMergeCharList__194.contains('j'));
        Assert.assertTrue(o_testMergeCharList__194.contains('i'));
        Assert.assertTrue(o_testMergeCharList__194.contains('b'));
        Assert.assertTrue(o_testMergeCharList__194.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__202)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__205)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__208)));
        Assert.assertTrue(o_testMergeCharList__211.contains('a'));
        Assert.assertTrue(o_testMergeCharList__211.contains('i'));
        Assert.assertTrue(o_testMergeCharList__211.contains('j'));
        Assert.assertTrue(o_testMergeCharList__211.contains('b'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__219)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__222)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__225)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__228)));
        Assert.assertTrue(o_testMergeCharList__231.contains('a'));
        Assert.assertTrue(o_testMergeCharList__231.contains('i'));
        Assert.assertTrue(o_testMergeCharList__231.contains('j'));
        Assert.assertTrue(o_testMergeCharList__231.contains('b'));
        Assert.assertTrue(o_testMergeCharList__233.contains('a'));
        Assert.assertTrue(o_testMergeCharList__233.contains('i'));
        Assert.assertTrue(o_testMergeCharList__233.contains('j'));
        Assert.assertTrue(o_testMergeCharList__233.contains('b'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__241)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__244)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__247)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__250)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__253)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__256)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__259)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__262)));
        Assert.assertTrue(o_testMergeCharList__265.contains('a'));
        Assert.assertTrue(o_testMergeCharList__265.contains('b'));
        Assert.assertTrue(o_testMergeCharList__265.contains('c'));
        Assert.assertTrue(o_testMergeCharList__267.contains('a'));
        Assert.assertTrue(o_testMergeCharList__267.contains('b'));
        Assert.assertTrue(o_testMergeCharList__267.contains('c'));
        Assert.assertTrue(o_testMergeCharList__269.contains('a'));
        Assert.assertTrue(o_testMergeCharList__269.contains('b'));
        Assert.assertTrue(o_testMergeCharList__269.contains('c'));
        Assert.assertTrue(o_testMergeCharList__271.contains('a'));
        Assert.assertTrue(o_testMergeCharList__271.contains('b'));
        Assert.assertTrue(o_testMergeCharList__271.contains('c'));
        Assert.assertTrue(o_testMergeCharList__273.contains('a'));
        Assert.assertTrue(o_testMergeCharList__273.contains('b'));
        Assert.assertTrue(o_testMergeCharList__273.contains('c'));
        Assert.assertTrue(o_testMergeCharList__275.contains('a'));
        Assert.assertTrue(o_testMergeCharList__275.contains('b'));
        Assert.assertTrue(o_testMergeCharList__275.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__283)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__286)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__289)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__292)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__295)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__298)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__301)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__304)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__307)));
        Assert.assertTrue(o_testMergeCharList__310.contains('a'));
        Assert.assertTrue(o_testMergeCharList__310.contains('b'));
        Assert.assertTrue(o_testMergeCharList__310.contains('c'));
        Assert.assertTrue(o_testMergeCharList__312.contains('a'));
        Assert.assertTrue(o_testMergeCharList__312.contains('b'));
        Assert.assertTrue(o_testMergeCharList__312.contains('c'));
        Assert.assertTrue(o_testMergeCharList__314.contains('a'));
        Assert.assertTrue(o_testMergeCharList__314.contains('b'));
        Assert.assertTrue(o_testMergeCharList__314.contains('c'));
        Assert.assertTrue(o_testMergeCharList__316.contains('a'));
        Assert.assertTrue(o_testMergeCharList__316.contains('b'));
        Assert.assertTrue(o_testMergeCharList__316.contains('c'));
        Assert.assertTrue(o_testMergeCharList__318.contains('a'));
        Assert.assertTrue(o_testMergeCharList__318.contains('b'));
        Assert.assertTrue(o_testMergeCharList__318.contains('c'));
        Assert.assertTrue(o_testMergeCharList__320.contains('a'));
        Assert.assertTrue(o_testMergeCharList__320.contains('b'));
        Assert.assertTrue(o_testMergeCharList__320.contains('c'));
        Assert.assertTrue(o_testMergeCharList__322.contains('a'));
        Assert.assertTrue(o_testMergeCharList__322.contains('b'));
        Assert.assertTrue(o_testMergeCharList__322.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__330)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__333)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__336)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__339)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__342)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__345)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__348)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__351)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__354)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__357)));
        Assert.assertTrue(o_testMergeCharList__360.contains('a'));
        Assert.assertTrue(o_testMergeCharList__360.contains('b'));
        Assert.assertTrue(o_testMergeCharList__360.contains('c'));
        Assert.assertTrue(o_testMergeCharList__362.contains('a'));
        Assert.assertTrue(o_testMergeCharList__362.contains('b'));
        Assert.assertTrue(o_testMergeCharList__362.contains('c'));
        Assert.assertTrue(o_testMergeCharList__364.contains('a'));
        Assert.assertTrue(o_testMergeCharList__364.contains('b'));
        Assert.assertTrue(o_testMergeCharList__364.contains('c'));
        Assert.assertTrue(o_testMergeCharList__366.contains('a'));
        Assert.assertTrue(o_testMergeCharList__366.contains('b'));
        Assert.assertTrue(o_testMergeCharList__366.contains('c'));
        Assert.assertTrue(o_testMergeCharList__368.contains('a'));
        Assert.assertTrue(o_testMergeCharList__368.contains('b'));
        Assert.assertTrue(o_testMergeCharList__368.contains('c'));
        Assert.assertTrue(o_testMergeCharList__370.contains('a'));
        Assert.assertTrue(o_testMergeCharList__370.contains('b'));
        Assert.assertTrue(o_testMergeCharList__370.contains('c'));
        Assert.assertTrue(o_testMergeCharList__372.contains('a'));
        Assert.assertTrue(o_testMergeCharList__372.contains('b'));
        Assert.assertTrue(o_testMergeCharList__372.contains('c'));
        Assert.assertTrue(o_testMergeCharList__374.contains('a'));
        Assert.assertTrue(o_testMergeCharList__374.contains('b'));
        Assert.assertTrue(o_testMergeCharList__374.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__382)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__385)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__388)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__391)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__394)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__397)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__400)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__403)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__406)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__409)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__412)));
        Assert.assertTrue(o_testMergeCharList__415.contains('a'));
        Assert.assertTrue(o_testMergeCharList__415.contains('b'));
        Assert.assertTrue(o_testMergeCharList__415.contains('c'));
        Assert.assertTrue(o_testMergeCharList__417.contains('a'));
        Assert.assertTrue(o_testMergeCharList__417.contains('b'));
        Assert.assertTrue(o_testMergeCharList__417.contains('c'));
        Assert.assertTrue(o_testMergeCharList__419.contains('a'));
        Assert.assertTrue(o_testMergeCharList__419.contains('b'));
        Assert.assertTrue(o_testMergeCharList__419.contains('c'));
        Assert.assertTrue(o_testMergeCharList__421.contains('a'));
        Assert.assertTrue(o_testMergeCharList__421.contains('b'));
        Assert.assertTrue(o_testMergeCharList__421.contains('c'));
        Assert.assertTrue(o_testMergeCharList__423.contains('a'));
        Assert.assertTrue(o_testMergeCharList__423.contains('b'));
        Assert.assertTrue(o_testMergeCharList__423.contains('c'));
        Assert.assertTrue(o_testMergeCharList__425.contains('a'));
        Assert.assertTrue(o_testMergeCharList__425.contains('b'));
        Assert.assertTrue(o_testMergeCharList__425.contains('c'));
        Assert.assertTrue(o_testMergeCharList__427.contains('a'));
        Assert.assertTrue(o_testMergeCharList__427.contains('b'));
        Assert.assertTrue(o_testMergeCharList__427.contains('c'));
        Assert.assertTrue(o_testMergeCharList__429.contains('a'));
        Assert.assertTrue(o_testMergeCharList__429.contains('b'));
        Assert.assertTrue(o_testMergeCharList__429.contains('c'));
        Assert.assertTrue(o_testMergeCharList__431.contains('a'));
        Assert.assertTrue(o_testMergeCharList__431.contains('b'));
        Assert.assertTrue(o_testMergeCharList__431.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__440)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__443)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__446)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__449)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__452)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__455)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__458)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__461)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__464)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__467)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__470)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__473)));
        Assert.assertTrue(o_testMergeCharList__476.contains('A'));
        Assert.assertTrue(o_testMergeCharList__476.contains('l'));
        Assert.assertTrue(o_testMergeCharList__476.contains('i'));
        Assert.assertTrue(o_testMergeCharList__476.contains('c'));
        Assert.assertTrue(o_testMergeCharList__476.contains('e'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__484)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__487)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__490)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__493)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__496)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__499)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__502)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__505)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__508)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__511)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__514)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__517)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__520)));
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull44350() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull44350__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44350__9)));
        List<Character> o_testMergeCharOnConflictsnull44350__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull44350__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull44350__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__21)));
        int o_testMergeCharOnConflictsnull44350__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__24)));
        String o_testMergeCharOnConflictsnull44350__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44350__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull44350__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__36)));
        int o_testMergeCharOnConflictsnull44350__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__39)));
        int o_testMergeCharOnConflictsnull44350__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__42)));
        String o_testMergeCharOnConflictsnull44350__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44350__45);
        String o_testMergeCharOnConflictsnull44350__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44350__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull44350__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__56)));
        int o_testMergeCharOnConflictsnull44350__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__59)));
        int o_testMergeCharOnConflictsnull44350__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__62)));
        int o_testMergeCharOnConflictsnull44350__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__65)));
        String o_testMergeCharOnConflictsnull44350__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44350__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull44350__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__77)));
        int o_testMergeCharOnConflictsnull44350__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__80)));
        int o_testMergeCharOnConflictsnull44350__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__83)));
        int o_testMergeCharOnConflictsnull44350__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__86)));
        int o_testMergeCharOnConflictsnull44350__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__89)));
        String o_testMergeCharOnConflictsnull44350__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44350__92);
        String o_testMergeCharOnConflictsnull44350__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44350__94);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44350__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull44350__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44350__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44350__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44350__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44350__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44350__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44350__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull44360() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull44360__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__9)));
        List<Character> o_testMergeCharOnConflictsnull44360__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull44360__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull44360__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__21)));
        int o_testMergeCharOnConflictsnull44360__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__24)));
        String o_testMergeCharOnConflictsnull44360__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44360__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull44360__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__36)));
        int o_testMergeCharOnConflictsnull44360__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__39)));
        int o_testMergeCharOnConflictsnull44360__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__42)));
        String o_testMergeCharOnConflictsnull44360__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44360__45);
        String o_testMergeCharOnConflictsnull44360__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44360__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull44360__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__56)));
        int o_testMergeCharOnConflictsnull44360__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__59)));
        int o_testMergeCharOnConflictsnull44360__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__62)));
        int o_testMergeCharOnConflictsnull44360__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__65)));
        String o_testMergeCharOnConflictsnull44360__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflictsnull44360__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull44360__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__77)));
        int o_testMergeCharOnConflictsnull44360__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__80)));
        int o_testMergeCharOnConflictsnull44360__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__83)));
        int o_testMergeCharOnConflictsnull44360__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__86)));
        int o_testMergeCharOnConflictsnull44360__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__89)));
        String o_testMergeCharOnConflictsnull44360__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44360__92);
        String o_testMergeCharOnConflictsnull44360__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44360__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull44360__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44360__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44360__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44360__47);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__56)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__59)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__62)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44360__65)));
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflictsnull44360__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44360__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44360__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString44217() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString44217__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString44217__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44217__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44217__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__21)));
        int o_testMergeCharOnConflicts_literalMutationString44217__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__24)));
        String o_testMergeCharOnConflicts_literalMutationString44217__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44217__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44217__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__36)));
        int o_testMergeCharOnConflicts_literalMutationString44217__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__39)));
        int o_testMergeCharOnConflicts_literalMutationString44217__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__42)));
        String o_testMergeCharOnConflicts_literalMutationString44217__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44217__45);
        String o_testMergeCharOnConflicts_literalMutationString44217__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44217__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44217__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__56)));
        int o_testMergeCharOnConflicts_literalMutationString44217__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__59)));
        int o_testMergeCharOnConflicts_literalMutationString44217__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__62)));
        int o_testMergeCharOnConflicts_literalMutationString44217__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__65)));
        String o_testMergeCharOnConflicts_literalMutationString44217__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44217__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44217__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__77)));
        int o_testMergeCharOnConflicts_literalMutationString44217__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__80)));
        int o_testMergeCharOnConflicts_literalMutationString44217__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__83)));
        int o_testMergeCharOnConflicts_literalMutationString44217__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__86)));
        int o_testMergeCharOnConflicts_literalMutationString44217__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__89)));
        String o_testMergeCharOnConflicts_literalMutationString44217__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44217__92);
        String o_testMergeCharOnConflicts_literalMutationString44217__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44217__94);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44217__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44217__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44217__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44217__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44217__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44217__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44217__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString44228() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString44228__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString44228__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44228__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44228__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__21)));
        int o_testMergeCharOnConflicts_literalMutationString44228__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__24)));
        String o_testMergeCharOnConflicts_literalMutationString44228__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflicts_literalMutationString44228__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44228__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__36)));
        int o_testMergeCharOnConflicts_literalMutationString44228__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__39)));
        int o_testMergeCharOnConflicts_literalMutationString44228__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__42)));
        String o_testMergeCharOnConflicts_literalMutationString44228__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44228__45);
        String o_testMergeCharOnConflicts_literalMutationString44228__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44228__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44228__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__56)));
        int o_testMergeCharOnConflicts_literalMutationString44228__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__59)));
        int o_testMergeCharOnConflicts_literalMutationString44228__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__62)));
        int o_testMergeCharOnConflicts_literalMutationString44228__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__65)));
        String o_testMergeCharOnConflicts_literalMutationString44228__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44228__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44228__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__77)));
        int o_testMergeCharOnConflicts_literalMutationString44228__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__80)));
        int o_testMergeCharOnConflicts_literalMutationString44228__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__83)));
        int o_testMergeCharOnConflicts_literalMutationString44228__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__86)));
        int o_testMergeCharOnConflicts_literalMutationString44228__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__89)));
        String o_testMergeCharOnConflicts_literalMutationString44228__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44228__92);
        String o_testMergeCharOnConflicts_literalMutationString44228__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44228__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44228__12.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__21)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__24)));
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflicts_literalMutationString44228__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44228__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44228__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44228__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44228__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44228__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull44354() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull44354__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__9)));
        List<Character> o_testMergeCharOnConflictsnull44354__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull44354__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull44354__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44354__21)));
        int o_testMergeCharOnConflictsnull44354__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44354__24)));
        String o_testMergeCharOnConflictsnull44354__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflictsnull44354__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull44354__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__36)));
        int o_testMergeCharOnConflictsnull44354__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__39)));
        int o_testMergeCharOnConflictsnull44354__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__42)));
        String o_testMergeCharOnConflictsnull44354__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44354__45);
        String o_testMergeCharOnConflictsnull44354__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44354__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull44354__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__56)));
        int o_testMergeCharOnConflictsnull44354__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__59)));
        int o_testMergeCharOnConflictsnull44354__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__62)));
        int o_testMergeCharOnConflictsnull44354__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__65)));
        String o_testMergeCharOnConflictsnull44354__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44354__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull44354__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__77)));
        int o_testMergeCharOnConflictsnull44354__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__80)));
        int o_testMergeCharOnConflictsnull44354__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__83)));
        int o_testMergeCharOnConflictsnull44354__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__86)));
        int o_testMergeCharOnConflictsnull44354__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__89)));
        String o_testMergeCharOnConflictsnull44354__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44354__92);
        String o_testMergeCharOnConflictsnull44354__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44354__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull44354__12.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44354__21)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44354__24)));
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflictsnull44354__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44354__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44354__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44354__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44354__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44354__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString44283() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString44283__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString44283__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44283__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44283__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__21)));
        int o_testMergeCharOnConflicts_literalMutationString44283__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__24)));
        String o_testMergeCharOnConflicts_literalMutationString44283__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44283__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44283__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__36)));
        int o_testMergeCharOnConflicts_literalMutationString44283__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__39)));
        int o_testMergeCharOnConflicts_literalMutationString44283__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__42)));
        String o_testMergeCharOnConflicts_literalMutationString44283__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44283__45);
        String o_testMergeCharOnConflicts_literalMutationString44283__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44283__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44283__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__56)));
        int o_testMergeCharOnConflicts_literalMutationString44283__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__59)));
        int o_testMergeCharOnConflicts_literalMutationString44283__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__62)));
        int o_testMergeCharOnConflicts_literalMutationString44283__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__65)));
        String o_testMergeCharOnConflicts_literalMutationString44283__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44283__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44283__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__77)));
        int o_testMergeCharOnConflicts_literalMutationString44283__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__80)));
        int o_testMergeCharOnConflicts_literalMutationString44283__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__83)));
        int o_testMergeCharOnConflicts_literalMutationString44283__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__86)));
        int o_testMergeCharOnConflicts_literalMutationString44283__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__89)));
        String o_testMergeCharOnConflicts_literalMutationString44283__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflicts_literalMutationString44283__92);
        String o_testMergeCharOnConflicts_literalMutationString44283__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflicts_literalMutationString44283__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44283__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44283__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44283__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44283__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44283__68);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__77)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__80)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__83)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__86)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44283__89)));
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflicts_literalMutationString44283__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull44363() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull44363__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__9)));
        List<Character> o_testMergeCharOnConflictsnull44363__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull44363__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull44363__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__21)));
        int o_testMergeCharOnConflictsnull44363__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__24)));
        String o_testMergeCharOnConflictsnull44363__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44363__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull44363__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__36)));
        int o_testMergeCharOnConflictsnull44363__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__39)));
        int o_testMergeCharOnConflictsnull44363__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__42)));
        String o_testMergeCharOnConflictsnull44363__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44363__45);
        String o_testMergeCharOnConflictsnull44363__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44363__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull44363__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__56)));
        int o_testMergeCharOnConflictsnull44363__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__59)));
        int o_testMergeCharOnConflictsnull44363__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__62)));
        int o_testMergeCharOnConflictsnull44363__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__65)));
        String o_testMergeCharOnConflictsnull44363__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44363__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull44363__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__77)));
        int o_testMergeCharOnConflictsnull44363__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__80)));
        int o_testMergeCharOnConflictsnull44363__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__83)));
        int o_testMergeCharOnConflictsnull44363__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__86)));
        int o_testMergeCharOnConflictsnull44363__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__89)));
        String o_testMergeCharOnConflictsnull44363__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflictsnull44363__92);
        String o_testMergeCharOnConflictsnull44363__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflictsnull44363__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull44363__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44363__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44363__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44363__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44363__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44363__68);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__77)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__80)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__83)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__86)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44363__89)));
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflictsnull44363__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull44357() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull44357__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__9)));
        List<Character> o_testMergeCharOnConflictsnull44357__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull44357__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull44357__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__21)));
        int o_testMergeCharOnConflictsnull44357__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__24)));
        String o_testMergeCharOnConflictsnull44357__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44357__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull44357__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44357__36)));
        int o_testMergeCharOnConflictsnull44357__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44357__39)));
        int o_testMergeCharOnConflictsnull44357__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44357__42)));
        String o_testMergeCharOnConflictsnull44357__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull44357__45);
        String o_testMergeCharOnConflictsnull44357__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull44357__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull44357__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__56)));
        int o_testMergeCharOnConflictsnull44357__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__59)));
        int o_testMergeCharOnConflictsnull44357__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__62)));
        int o_testMergeCharOnConflictsnull44357__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__65)));
        String o_testMergeCharOnConflictsnull44357__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44357__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull44357__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__77)));
        int o_testMergeCharOnConflictsnull44357__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__80)));
        int o_testMergeCharOnConflictsnull44357__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__83)));
        int o_testMergeCharOnConflictsnull44357__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__86)));
        int o_testMergeCharOnConflictsnull44357__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__89)));
        String o_testMergeCharOnConflictsnull44357__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44357__92);
        String o_testMergeCharOnConflictsnull44357__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44357__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull44357__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull44357__27);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44357__36)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44357__39)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull44357__42)));
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull44357__45);
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull44357__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44357__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull44357__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull44357__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString44264() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString44264__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString44264__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44264__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44264__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__21)));
        int o_testMergeCharOnConflicts_literalMutationString44264__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__24)));
        String o_testMergeCharOnConflicts_literalMutationString44264__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44264__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44264__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__36)));
        int o_testMergeCharOnConflicts_literalMutationString44264__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__39)));
        int o_testMergeCharOnConflicts_literalMutationString44264__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__42)));
        String o_testMergeCharOnConflicts_literalMutationString44264__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44264__45);
        String o_testMergeCharOnConflicts_literalMutationString44264__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44264__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44264__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__56)));
        int o_testMergeCharOnConflicts_literalMutationString44264__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__59)));
        int o_testMergeCharOnConflicts_literalMutationString44264__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__62)));
        int o_testMergeCharOnConflicts_literalMutationString44264__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__65)));
        String o_testMergeCharOnConflicts_literalMutationString44264__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflicts_literalMutationString44264__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44264__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__77)));
        int o_testMergeCharOnConflicts_literalMutationString44264__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__80)));
        int o_testMergeCharOnConflicts_literalMutationString44264__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__83)));
        int o_testMergeCharOnConflicts_literalMutationString44264__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__86)));
        int o_testMergeCharOnConflicts_literalMutationString44264__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__89)));
        String o_testMergeCharOnConflicts_literalMutationString44264__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44264__92);
        String o_testMergeCharOnConflicts_literalMutationString44264__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44264__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44264__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44264__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44264__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44264__47);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__56)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__59)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__62)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__65)));
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflicts_literalMutationString44264__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44264__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44264__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString44246() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString44246__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString44246__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44246__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44246__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__21)));
        int o_testMergeCharOnConflicts_literalMutationString44246__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__24)));
        String o_testMergeCharOnConflicts_literalMutationString44246__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44246__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString44246__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__36)));
        int o_testMergeCharOnConflicts_literalMutationString44246__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__39)));
        int o_testMergeCharOnConflicts_literalMutationString44246__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__42)));
        String o_testMergeCharOnConflicts_literalMutationString44246__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString44246__45);
        String o_testMergeCharOnConflicts_literalMutationString44246__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString44246__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44246__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__56)));
        int o_testMergeCharOnConflicts_literalMutationString44246__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__59)));
        int o_testMergeCharOnConflicts_literalMutationString44246__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__62)));
        int o_testMergeCharOnConflicts_literalMutationString44246__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__65)));
        String o_testMergeCharOnConflicts_literalMutationString44246__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44246__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString44246__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__77)));
        int o_testMergeCharOnConflicts_literalMutationString44246__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__80)));
        int o_testMergeCharOnConflicts_literalMutationString44246__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__83)));
        int o_testMergeCharOnConflicts_literalMutationString44246__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__86)));
        int o_testMergeCharOnConflicts_literalMutationString44246__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__89)));
        String o_testMergeCharOnConflicts_literalMutationString44246__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44246__92);
        String o_testMergeCharOnConflicts_literalMutationString44246__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44246__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString44246__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString44246__27);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__36)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__39)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__42)));
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString44246__45);
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString44246__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44246__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString44246__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString44246__92);
    }
}

