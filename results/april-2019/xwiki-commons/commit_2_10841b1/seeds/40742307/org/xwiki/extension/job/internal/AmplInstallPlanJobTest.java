package org.xwiki.extension.job.internal;


import java.util.Collection;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xwiki.extension.Extension;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.TestResources;
import org.xwiki.extension.job.plan.ExtensionPlan;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlan;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode;
import org.xwiki.extension.repository.CoreExtensionRepository;
import org.xwiki.extension.test.AbstractExtensionHandlerTest;
import org.xwiki.extension.test.ConfigurableDefaultCoreExtensionRepository;
import org.xwiki.extension.version.Version;
import org.xwiki.extension.version.VersionConstraint;
import org.xwiki.job.Request;
import org.xwiki.job.event.status.JobProgress;
import org.xwiki.job.event.status.JobProgressStep;


public class AmplInstallPlanJobTest extends AbstractExtensionHandlerTest {
    private ConfigurableDefaultCoreExtensionRepository coreRepository;

    @Override
    @Before
    public void setUp() throws Exception {
        super.setUp();
        this.coreRepository = this.mocker.getInstance(CoreExtensionRepository.class);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3728() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3728__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3728__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3728__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__14)));
        String o_testInstallRemoteWithMissingDependency_add3728__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__16);
        int o_testInstallRemoteWithMissingDependency_add3728__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__17)));
        int o_testInstallRemoteWithMissingDependency_add3728__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3728__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3728__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__30)));
        int o_testInstallRemoteWithMissingDependency_add3728__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__32)));
        String o_testInstallRemoteWithMissingDependency_add3728__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__34);
        String o_testInstallRemoteWithMissingDependency_add3728__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__35);
        int o_testInstallRemoteWithMissingDependency_add3728__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__36)));
        int o_testInstallRemoteWithMissingDependency_add3728__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3728__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3728__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__50)));
        int o_testInstallRemoteWithMissingDependency_add3728__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__52)));
        int o_testInstallRemoteWithMissingDependency_add3728__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__54)));
        String o_testInstallRemoteWithMissingDependency_add3728__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__56);
        String o_testInstallRemoteWithMissingDependency_add3728__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__57);
        String o_testInstallRemoteWithMissingDependency_add3728__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__58);
        int o_testInstallRemoteWithMissingDependency_add3728__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__17)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3727() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3727__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3727__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3727__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__14)));
        action.getNamespace();
        String o_testInstallRemoteWithMissingDependency_add3727__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__17);
        int o_testInstallRemoteWithMissingDependency_add3727__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3727__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3727__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__29)));
        int o_testInstallRemoteWithMissingDependency_add3727__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__31)));
        String o_testInstallRemoteWithMissingDependency_add3727__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__33);
        String o_testInstallRemoteWithMissingDependency_add3727__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__34);
        int o_testInstallRemoteWithMissingDependency_add3727__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__35)));
        int o_testInstallRemoteWithMissingDependency_add3727__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3727__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3727__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__49)));
        int o_testInstallRemoteWithMissingDependency_add3727__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__51)));
        int o_testInstallRemoteWithMissingDependency_add3727__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__53)));
        String o_testInstallRemoteWithMissingDependency_add3727__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__55);
        String o_testInstallRemoteWithMissingDependency_add3727__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__56);
        String o_testInstallRemoteWithMissingDependency_add3727__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__57);
        int o_testInstallRemoteWithMissingDependency_add3727__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3729() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3729__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3729__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3729__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__14)));
        String o_testInstallRemoteWithMissingDependency_add3729__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__16);
        node.getChildren();
        int o_testInstallRemoteWithMissingDependency_add3729__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3729__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3729__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__29)));
        int o_testInstallRemoteWithMissingDependency_add3729__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__31)));
        String o_testInstallRemoteWithMissingDependency_add3729__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__33);
        String o_testInstallRemoteWithMissingDependency_add3729__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__34);
        int o_testInstallRemoteWithMissingDependency_add3729__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__35)));
        int o_testInstallRemoteWithMissingDependency_add3729__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3729__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3729__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__49)));
        int o_testInstallRemoteWithMissingDependency_add3729__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__51)));
        int o_testInstallRemoteWithMissingDependency_add3729__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__53)));
        String o_testInstallRemoteWithMissingDependency_add3729__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__55);
        String o_testInstallRemoteWithMissingDependency_add3729__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__56);
        String o_testInstallRemoteWithMissingDependency_add3729__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__57);
        int o_testInstallRemoteWithMissingDependency_add3729__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3720() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3720__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__3)));
        plan.getTree();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3720__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3720__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__15)));
        String o_testInstallRemoteWithMissingDependency_add3720__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__17);
        int o_testInstallRemoteWithMissingDependency_add3720__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3720__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3720__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__29)));
        int o_testInstallRemoteWithMissingDependency_add3720__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__31)));
        String o_testInstallRemoteWithMissingDependency_add3720__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__33);
        String o_testInstallRemoteWithMissingDependency_add3720__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__34);
        int o_testInstallRemoteWithMissingDependency_add3720__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__35)));
        int o_testInstallRemoteWithMissingDependency_add3720__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3720__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3720__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__49)));
        int o_testInstallRemoteWithMissingDependency_add3720__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__51)));
        int o_testInstallRemoteWithMissingDependency_add3720__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__53)));
        String o_testInstallRemoteWithMissingDependency_add3720__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__55);
        String o_testInstallRemoteWithMissingDependency_add3720__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__56);
        String o_testInstallRemoteWithMissingDependency_add3720__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__57);
        int o_testInstallRemoteWithMissingDependency_add3720__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3722() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3722__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3722__13 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3722__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__16)));
        String o_testInstallRemoteWithMissingDependency_add3722__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__18);
        int o_testInstallRemoteWithMissingDependency_add3722__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3722__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3722__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__30)));
        int o_testInstallRemoteWithMissingDependency_add3722__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__32)));
        String o_testInstallRemoteWithMissingDependency_add3722__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__34);
        String o_testInstallRemoteWithMissingDependency_add3722__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__35);
        int o_testInstallRemoteWithMissingDependency_add3722__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__36)));
        int o_testInstallRemoteWithMissingDependency_add3722__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3722__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3722__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__50)));
        int o_testInstallRemoteWithMissingDependency_add3722__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__52)));
        int o_testInstallRemoteWithMissingDependency_add3722__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__54)));
        String o_testInstallRemoteWithMissingDependency_add3722__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__56);
        String o_testInstallRemoteWithMissingDependency_add3722__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__57);
        String o_testInstallRemoteWithMissingDependency_add3722__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__58);
        int o_testInstallRemoteWithMissingDependency_add3722__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3721() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3721__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        node.getAction();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3721__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3721__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__15)));
        String o_testInstallRemoteWithMissingDependency_add3721__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__17);
        int o_testInstallRemoteWithMissingDependency_add3721__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3721__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3721__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__29)));
        int o_testInstallRemoteWithMissingDependency_add3721__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__31)));
        String o_testInstallRemoteWithMissingDependency_add3721__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__33);
        String o_testInstallRemoteWithMissingDependency_add3721__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__34);
        int o_testInstallRemoteWithMissingDependency_add3721__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__35)));
        int o_testInstallRemoteWithMissingDependency_add3721__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3721__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3721__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__49)));
        int o_testInstallRemoteWithMissingDependency_add3721__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__51)));
        int o_testInstallRemoteWithMissingDependency_add3721__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__53)));
        String o_testInstallRemoteWithMissingDependency_add3721__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__55);
        String o_testInstallRemoteWithMissingDependency_add3721__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__56);
        String o_testInstallRemoteWithMissingDependency_add3721__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__57);
        int o_testInstallRemoteWithMissingDependency_add3721__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3724() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3724__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3724__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3724__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__15)));
        String o_testInstallRemoteWithMissingDependency_add3724__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__17);
        int o_testInstallRemoteWithMissingDependency_add3724__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3724__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3724__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__29)));
        int o_testInstallRemoteWithMissingDependency_add3724__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__31)));
        String o_testInstallRemoteWithMissingDependency_add3724__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__33);
        String o_testInstallRemoteWithMissingDependency_add3724__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__34);
        int o_testInstallRemoteWithMissingDependency_add3724__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__35)));
        int o_testInstallRemoteWithMissingDependency_add3724__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3724__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3724__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__49)));
        int o_testInstallRemoteWithMissingDependency_add3724__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__51)));
        int o_testInstallRemoteWithMissingDependency_add3724__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__53)));
        String o_testInstallRemoteWithMissingDependency_add3724__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__55);
        String o_testInstallRemoteWithMissingDependency_add3724__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__56);
        String o_testInstallRemoteWithMissingDependency_add3724__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__57);
        int o_testInstallRemoteWithMissingDependency_add3724__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3723() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3723__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3723__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3723__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__15)));
        String o_testInstallRemoteWithMissingDependency_add3723__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__17);
        int o_testInstallRemoteWithMissingDependency_add3723__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3723__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3723__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__29)));
        int o_testInstallRemoteWithMissingDependency_add3723__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__31)));
        String o_testInstallRemoteWithMissingDependency_add3723__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__33);
        String o_testInstallRemoteWithMissingDependency_add3723__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__34);
        int o_testInstallRemoteWithMissingDependency_add3723__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__35)));
        int o_testInstallRemoteWithMissingDependency_add3723__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3723__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3723__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__49)));
        int o_testInstallRemoteWithMissingDependency_add3723__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__51)));
        int o_testInstallRemoteWithMissingDependency_add3723__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__53)));
        String o_testInstallRemoteWithMissingDependency_add3723__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__55);
        String o_testInstallRemoteWithMissingDependency_add3723__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__56);
        String o_testInstallRemoteWithMissingDependency_add3723__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__57);
        int o_testInstallRemoteWithMissingDependency_add3723__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3726() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3726__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3726__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getId());
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallRemoteWithMissingDependency_add3726__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__15)));
        String o_testInstallRemoteWithMissingDependency_add3726__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__17);
        int o_testInstallRemoteWithMissingDependency_add3726__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3726__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3726__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__29)));
        int o_testInstallRemoteWithMissingDependency_add3726__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__31)));
        String o_testInstallRemoteWithMissingDependency_add3726__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__33);
        String o_testInstallRemoteWithMissingDependency_add3726__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__34);
        int o_testInstallRemoteWithMissingDependency_add3726__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__35)));
        int o_testInstallRemoteWithMissingDependency_add3726__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3726__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3726__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__49)));
        int o_testInstallRemoteWithMissingDependency_add3726__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__51)));
        int o_testInstallRemoteWithMissingDependency_add3726__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__53)));
        String o_testInstallRemoteWithMissingDependency_add3726__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__55);
        String o_testInstallRemoteWithMissingDependency_add3726__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__56);
        String o_testInstallRemoteWithMissingDependency_add3726__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__57);
        int o_testInstallRemoteWithMissingDependency_add3726__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3725() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3725__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3725__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3725__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__14)));
        int o_testInstallRemoteWithMissingDependency_add3725__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__16)));
        String o_testInstallRemoteWithMissingDependency_add3725__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__18);
        int o_testInstallRemoteWithMissingDependency_add3725__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3725__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3725__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__30)));
        int o_testInstallRemoteWithMissingDependency_add3725__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__32)));
        String o_testInstallRemoteWithMissingDependency_add3725__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__34);
        String o_testInstallRemoteWithMissingDependency_add3725__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__35);
        int o_testInstallRemoteWithMissingDependency_add3725__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__36)));
        int o_testInstallRemoteWithMissingDependency_add3725__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3725__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3725__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__50)));
        int o_testInstallRemoteWithMissingDependency_add3725__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__52)));
        int o_testInstallRemoteWithMissingDependency_add3725__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__54)));
        String o_testInstallRemoteWithMissingDependency_add3725__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__56);
        String o_testInstallRemoteWithMissingDependency_add3725__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__57);
        String o_testInstallRemoteWithMissingDependency_add3725__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__58);
        int o_testInstallRemoteWithMissingDependency_add3725__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__14)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3717() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        plan.getTree();
        int o_testInstallRemoteWithMissingDependency_add3717__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3717__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3717__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__15)));
        String o_testInstallRemoteWithMissingDependency_add3717__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__17);
        int o_testInstallRemoteWithMissingDependency_add3717__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3717__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3717__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__29)));
        int o_testInstallRemoteWithMissingDependency_add3717__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__31)));
        String o_testInstallRemoteWithMissingDependency_add3717__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__33);
        String o_testInstallRemoteWithMissingDependency_add3717__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__34);
        int o_testInstallRemoteWithMissingDependency_add3717__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__35)));
        int o_testInstallRemoteWithMissingDependency_add3717__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3717__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3717__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__49)));
        int o_testInstallRemoteWithMissingDependency_add3717__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__51)));
        int o_testInstallRemoteWithMissingDependency_add3717__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__53)));
        String o_testInstallRemoteWithMissingDependency_add3717__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__55);
        String o_testInstallRemoteWithMissingDependency_add3717__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__56);
        String o_testInstallRemoteWithMissingDependency_add3717__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__57);
        int o_testInstallRemoteWithMissingDependency_add3717__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__4)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3716() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3716__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__3)));
        int o_testInstallRemoteWithMissingDependency_add3716__5 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__5)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3716__13 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3716__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__16)));
        String o_testInstallRemoteWithMissingDependency_add3716__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__18);
        int o_testInstallRemoteWithMissingDependency_add3716__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3716__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3716__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__30)));
        int o_testInstallRemoteWithMissingDependency_add3716__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__32)));
        String o_testInstallRemoteWithMissingDependency_add3716__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__34);
        String o_testInstallRemoteWithMissingDependency_add3716__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__35);
        int o_testInstallRemoteWithMissingDependency_add3716__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__36)));
        int o_testInstallRemoteWithMissingDependency_add3716__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3716__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3716__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__50)));
        int o_testInstallRemoteWithMissingDependency_add3716__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__52)));
        int o_testInstallRemoteWithMissingDependency_add3716__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__54)));
        String o_testInstallRemoteWithMissingDependency_add3716__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__56);
        String o_testInstallRemoteWithMissingDependency_add3716__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__57);
        String o_testInstallRemoteWithMissingDependency_add3716__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__58);
        int o_testInstallRemoteWithMissingDependency_add3716__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__3)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__5)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3719() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3719__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__3)));
        plan.getTree().iterator();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3719__13 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3719__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__16)));
        String o_testInstallRemoteWithMissingDependency_add3719__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__18);
        int o_testInstallRemoteWithMissingDependency_add3719__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3719__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3719__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__30)));
        int o_testInstallRemoteWithMissingDependency_add3719__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__32)));
        String o_testInstallRemoteWithMissingDependency_add3719__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__34);
        String o_testInstallRemoteWithMissingDependency_add3719__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__35);
        int o_testInstallRemoteWithMissingDependency_add3719__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__36)));
        int o_testInstallRemoteWithMissingDependency_add3719__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3719__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3719__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__50)));
        int o_testInstallRemoteWithMissingDependency_add3719__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__52)));
        int o_testInstallRemoteWithMissingDependency_add3719__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__54)));
        String o_testInstallRemoteWithMissingDependency_add3719__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__56);
        String o_testInstallRemoteWithMissingDependency_add3719__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__57);
        String o_testInstallRemoteWithMissingDependency_add3719__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__58);
        int o_testInstallRemoteWithMissingDependency_add3719__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3718() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3718__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__3)));
        ExtensionPlanNode o_testInstallRemoteWithMissingDependency_add3718__5 = plan.getTree().iterator().next();
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getType());
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3718__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3718__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__17)));
        String o_testInstallRemoteWithMissingDependency_add3718__19 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__19);
        int o_testInstallRemoteWithMissingDependency_add3718__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3718__28 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3718__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__31)));
        int o_testInstallRemoteWithMissingDependency_add3718__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__33)));
        String o_testInstallRemoteWithMissingDependency_add3718__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__35);
        String o_testInstallRemoteWithMissingDependency_add3718__36 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__36);
        int o_testInstallRemoteWithMissingDependency_add3718__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__37)));
        int o_testInstallRemoteWithMissingDependency_add3718__39 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__39)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3718__47 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3718__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__51)));
        int o_testInstallRemoteWithMissingDependency_add3718__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__53)));
        int o_testInstallRemoteWithMissingDependency_add3718__55 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__55)));
        String o_testInstallRemoteWithMissingDependency_add3718__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__57);
        String o_testInstallRemoteWithMissingDependency_add3718__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__58);
        String o_testInstallRemoteWithMissingDependency_add3718__59 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__59);
        int o_testInstallRemoteWithMissingDependency_add3718__60 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__60)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__3)));
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__17)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__19);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__20)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__31)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__33)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__35);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__36);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__37)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__39)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__53)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__55)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__58);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__59);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3753() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3753__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3753__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3753__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__14)));
        String o_testInstallRemoteWithMissingDependency_add3753__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__16);
        int o_testInstallRemoteWithMissingDependency_add3753__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3753__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3753__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__28)));
        int o_testInstallRemoteWithMissingDependency_add3753__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__30)));
        String o_testInstallRemoteWithMissingDependency_add3753__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__32);
        String o_testInstallRemoteWithMissingDependency_add3753__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__33);
        int o_testInstallRemoteWithMissingDependency_add3753__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__34)));
        int o_testInstallRemoteWithMissingDependency_add3753__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3753__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3753__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__48)));
        int o_testInstallRemoteWithMissingDependency_add3753__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__50)));
        int o_testInstallRemoteWithMissingDependency_add3753__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__52)));
        String o_testInstallRemoteWithMissingDependency_add3753__54 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__54);
        String o_testInstallRemoteWithMissingDependency_add3753__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__55);
        String o_testInstallRemoteWithMissingDependency_add3753__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__56);
        node.getChildren();
        int o_testInstallRemoteWithMissingDependency_add3753__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__52)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__54);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__56);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3752() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3752__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3752__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3752__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__14)));
        String o_testInstallRemoteWithMissingDependency_add3752__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__16);
        int o_testInstallRemoteWithMissingDependency_add3752__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3752__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3752__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__28)));
        int o_testInstallRemoteWithMissingDependency_add3752__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__30)));
        String o_testInstallRemoteWithMissingDependency_add3752__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__32);
        String o_testInstallRemoteWithMissingDependency_add3752__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__33);
        int o_testInstallRemoteWithMissingDependency_add3752__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__34)));
        int o_testInstallRemoteWithMissingDependency_add3752__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3752__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3752__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__48)));
        int o_testInstallRemoteWithMissingDependency_add3752__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__50)));
        int o_testInstallRemoteWithMissingDependency_add3752__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__52)));
        String o_testInstallRemoteWithMissingDependency_add3752__54 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__54);
        String o_testInstallRemoteWithMissingDependency_add3752__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__55);
        String o_testInstallRemoteWithMissingDependency_add3752__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__56);
        int o_testInstallRemoteWithMissingDependency_add3752__57 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__57)));
        int o_testInstallRemoteWithMissingDependency_add3752__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__52)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__54);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__56);
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__57)));
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3715() throws Throwable {
        ExtensionPlan o_testInstallRemoteWithMissingDependency_add3715__1 = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isRemote());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCanceled());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3715__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3715__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3715__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__15)));
        String o_testInstallRemoteWithMissingDependency_add3715__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__17);
        int o_testInstallRemoteWithMissingDependency_add3715__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3715__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3715__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__29)));
        int o_testInstallRemoteWithMissingDependency_add3715__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__31)));
        String o_testInstallRemoteWithMissingDependency_add3715__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__33);
        String o_testInstallRemoteWithMissingDependency_add3715__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__34);
        int o_testInstallRemoteWithMissingDependency_add3715__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__35)));
        int o_testInstallRemoteWithMissingDependency_add3715__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3715__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3715__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__49)));
        int o_testInstallRemoteWithMissingDependency_add3715__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__51)));
        int o_testInstallRemoteWithMissingDependency_add3715__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__53)));
        String o_testInstallRemoteWithMissingDependency_add3715__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__55);
        String o_testInstallRemoteWithMissingDependency_add3715__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__56);
        String o_testInstallRemoteWithMissingDependency_add3715__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__57);
        int o_testInstallRemoteWithMissingDependency_add3715__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__58)));
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isRemote());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCanceled());
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__4)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3749() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3749__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3749__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3749__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__14)));
        String o_testInstallRemoteWithMissingDependency_add3749__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__16);
        int o_testInstallRemoteWithMissingDependency_add3749__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3749__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3749__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__28)));
        int o_testInstallRemoteWithMissingDependency_add3749__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__30)));
        String o_testInstallRemoteWithMissingDependency_add3749__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__32);
        String o_testInstallRemoteWithMissingDependency_add3749__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__33);
        int o_testInstallRemoteWithMissingDependency_add3749__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__34)));
        int o_testInstallRemoteWithMissingDependency_add3749__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3749__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3749__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__48)));
        int o_testInstallRemoteWithMissingDependency_add3749__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__50)));
        int o_testInstallRemoteWithMissingDependency_add3749__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__52)));
        int o_testInstallRemoteWithMissingDependency_add3749__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__54)));
        String o_testInstallRemoteWithMissingDependency_add3749__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__56);
        String o_testInstallRemoteWithMissingDependency_add3749__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__57);
        String o_testInstallRemoteWithMissingDependency_add3749__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__58);
        int o_testInstallRemoteWithMissingDependency_add3749__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3742() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3742__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3742__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3742__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__14)));
        String o_testInstallRemoteWithMissingDependency_add3742__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__16);
        int o_testInstallRemoteWithMissingDependency_add3742__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3742__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3742__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__28)));
        int o_testInstallRemoteWithMissingDependency_add3742__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__30)));
        String o_testInstallRemoteWithMissingDependency_add3742__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__32);
        String o_testInstallRemoteWithMissingDependency_add3742__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__33);
        int o_testInstallRemoteWithMissingDependency_add3742__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__34)));
        int o_testInstallRemoteWithMissingDependency_add3742__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__36)));
        ExtensionPlanNode o_testInstallRemoteWithMissingDependency_add3742__38 = node.getChildren().iterator().next();
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getType());
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3742__47 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3742__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__51)));
        int o_testInstallRemoteWithMissingDependency_add3742__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__53)));
        int o_testInstallRemoteWithMissingDependency_add3742__55 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__55)));
        String o_testInstallRemoteWithMissingDependency_add3742__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__57);
        String o_testInstallRemoteWithMissingDependency_add3742__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__58);
        String o_testInstallRemoteWithMissingDependency_add3742__59 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__59);
        int o_testInstallRemoteWithMissingDependency_add3742__60 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__60)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__36)));
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__53)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__55)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__58);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__59);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3741() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3741__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3741__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3741__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__14)));
        String o_testInstallRemoteWithMissingDependency_add3741__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__16);
        int o_testInstallRemoteWithMissingDependency_add3741__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3741__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3741__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__28)));
        int o_testInstallRemoteWithMissingDependency_add3741__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__30)));
        String o_testInstallRemoteWithMissingDependency_add3741__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__32);
        String o_testInstallRemoteWithMissingDependency_add3741__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__33);
        node.getChildren();
        int o_testInstallRemoteWithMissingDependency_add3741__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__35)));
        int o_testInstallRemoteWithMissingDependency_add3741__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3741__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3741__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__49)));
        int o_testInstallRemoteWithMissingDependency_add3741__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__51)));
        int o_testInstallRemoteWithMissingDependency_add3741__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__53)));
        String o_testInstallRemoteWithMissingDependency_add3741__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__55);
        String o_testInstallRemoteWithMissingDependency_add3741__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__56);
        String o_testInstallRemoteWithMissingDependency_add3741__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__57);
        int o_testInstallRemoteWithMissingDependency_add3741__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3744() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3744__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3744__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3744__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__14)));
        String o_testInstallRemoteWithMissingDependency_add3744__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__16);
        int o_testInstallRemoteWithMissingDependency_add3744__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3744__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3744__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__28)));
        int o_testInstallRemoteWithMissingDependency_add3744__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__30)));
        String o_testInstallRemoteWithMissingDependency_add3744__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__32);
        String o_testInstallRemoteWithMissingDependency_add3744__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__33);
        int o_testInstallRemoteWithMissingDependency_add3744__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__34)));
        int o_testInstallRemoteWithMissingDependency_add3744__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__36)));
        node.getChildren();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3744__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3744__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__49)));
        int o_testInstallRemoteWithMissingDependency_add3744__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__51)));
        int o_testInstallRemoteWithMissingDependency_add3744__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__53)));
        String o_testInstallRemoteWithMissingDependency_add3744__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__55);
        String o_testInstallRemoteWithMissingDependency_add3744__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__56);
        String o_testInstallRemoteWithMissingDependency_add3744__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__57);
        int o_testInstallRemoteWithMissingDependency_add3744__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3743() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3743__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3743__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3743__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__14)));
        String o_testInstallRemoteWithMissingDependency_add3743__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__16);
        int o_testInstallRemoteWithMissingDependency_add3743__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3743__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3743__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__28)));
        int o_testInstallRemoteWithMissingDependency_add3743__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__30)));
        String o_testInstallRemoteWithMissingDependency_add3743__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__32);
        String o_testInstallRemoteWithMissingDependency_add3743__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__33);
        int o_testInstallRemoteWithMissingDependency_add3743__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__34)));
        int o_testInstallRemoteWithMissingDependency_add3743__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__36)));
        node.getChildren().iterator();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3743__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3743__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__50)));
        int o_testInstallRemoteWithMissingDependency_add3743__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__52)));
        int o_testInstallRemoteWithMissingDependency_add3743__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__54)));
        String o_testInstallRemoteWithMissingDependency_add3743__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__56);
        String o_testInstallRemoteWithMissingDependency_add3743__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__57);
        String o_testInstallRemoteWithMissingDependency_add3743__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__58);
        int o_testInstallRemoteWithMissingDependency_add3743__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3746() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3746__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3746__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3746__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__14)));
        String o_testInstallRemoteWithMissingDependency_add3746__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__16);
        int o_testInstallRemoteWithMissingDependency_add3746__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3746__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3746__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__28)));
        int o_testInstallRemoteWithMissingDependency_add3746__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__30)));
        String o_testInstallRemoteWithMissingDependency_add3746__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__32);
        String o_testInstallRemoteWithMissingDependency_add3746__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__33);
        int o_testInstallRemoteWithMissingDependency_add3746__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__34)));
        int o_testInstallRemoteWithMissingDependency_add3746__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3746__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3746__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__50)));
        int o_testInstallRemoteWithMissingDependency_add3746__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__52)));
        int o_testInstallRemoteWithMissingDependency_add3746__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__54)));
        String o_testInstallRemoteWithMissingDependency_add3746__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__56);
        String o_testInstallRemoteWithMissingDependency_add3746__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__57);
        String o_testInstallRemoteWithMissingDependency_add3746__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__58);
        int o_testInstallRemoteWithMissingDependency_add3746__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3745() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3745__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3745__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3745__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__14)));
        String o_testInstallRemoteWithMissingDependency_add3745__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__16);
        int o_testInstallRemoteWithMissingDependency_add3745__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3745__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3745__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__28)));
        int o_testInstallRemoteWithMissingDependency_add3745__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__30)));
        String o_testInstallRemoteWithMissingDependency_add3745__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__32);
        String o_testInstallRemoteWithMissingDependency_add3745__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__33);
        int o_testInstallRemoteWithMissingDependency_add3745__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__34)));
        int o_testInstallRemoteWithMissingDependency_add3745__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__36)));
        node = node.getChildren().iterator().next();
        node.getAction();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3745__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3745__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__49)));
        int o_testInstallRemoteWithMissingDependency_add3745__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__51)));
        int o_testInstallRemoteWithMissingDependency_add3745__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__53)));
        String o_testInstallRemoteWithMissingDependency_add3745__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__55);
        String o_testInstallRemoteWithMissingDependency_add3745__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__56);
        String o_testInstallRemoteWithMissingDependency_add3745__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__57);
        int o_testInstallRemoteWithMissingDependency_add3745__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3748() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3748__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3748__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3748__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__14)));
        String o_testInstallRemoteWithMissingDependency_add3748__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__16);
        int o_testInstallRemoteWithMissingDependency_add3748__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3748__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3748__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__28)));
        int o_testInstallRemoteWithMissingDependency_add3748__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__30)));
        String o_testInstallRemoteWithMissingDependency_add3748__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__32);
        String o_testInstallRemoteWithMissingDependency_add3748__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__33);
        int o_testInstallRemoteWithMissingDependency_add3748__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__34)));
        int o_testInstallRemoteWithMissingDependency_add3748__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3748__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getId());
        action.getAction();
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3748__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__49)));
        int o_testInstallRemoteWithMissingDependency_add3748__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__51)));
        int o_testInstallRemoteWithMissingDependency_add3748__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__53)));
        String o_testInstallRemoteWithMissingDependency_add3748__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__55);
        String o_testInstallRemoteWithMissingDependency_add3748__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__56);
        String o_testInstallRemoteWithMissingDependency_add3748__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__57);
        int o_testInstallRemoteWithMissingDependency_add3748__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3747() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3747__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3747__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3747__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__14)));
        String o_testInstallRemoteWithMissingDependency_add3747__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__16);
        int o_testInstallRemoteWithMissingDependency_add3747__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3747__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3747__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__28)));
        int o_testInstallRemoteWithMissingDependency_add3747__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__30)));
        String o_testInstallRemoteWithMissingDependency_add3747__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__32);
        String o_testInstallRemoteWithMissingDependency_add3747__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__33);
        int o_testInstallRemoteWithMissingDependency_add3747__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__34)));
        int o_testInstallRemoteWithMissingDependency_add3747__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3747__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3747__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__49)));
        int o_testInstallRemoteWithMissingDependency_add3747__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__51)));
        int o_testInstallRemoteWithMissingDependency_add3747__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__53)));
        String o_testInstallRemoteWithMissingDependency_add3747__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__55);
        String o_testInstallRemoteWithMissingDependency_add3747__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__56);
        String o_testInstallRemoteWithMissingDependency_add3747__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__57);
        int o_testInstallRemoteWithMissingDependency_add3747__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3751() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3751__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3751__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3751__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__14)));
        String o_testInstallRemoteWithMissingDependency_add3751__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__16);
        int o_testInstallRemoteWithMissingDependency_add3751__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3751__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3751__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__28)));
        int o_testInstallRemoteWithMissingDependency_add3751__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__30)));
        String o_testInstallRemoteWithMissingDependency_add3751__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__32);
        String o_testInstallRemoteWithMissingDependency_add3751__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__33);
        int o_testInstallRemoteWithMissingDependency_add3751__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__34)));
        int o_testInstallRemoteWithMissingDependency_add3751__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3751__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3751__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__48)));
        int o_testInstallRemoteWithMissingDependency_add3751__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__50)));
        int o_testInstallRemoteWithMissingDependency_add3751__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__52)));
        action.getNamespace();
        String o_testInstallRemoteWithMissingDependency_add3751__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__55);
        String o_testInstallRemoteWithMissingDependency_add3751__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__56);
        String o_testInstallRemoteWithMissingDependency_add3751__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__57);
        int o_testInstallRemoteWithMissingDependency_add3751__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__52)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3750() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3750__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3750__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3750__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__14)));
        String o_testInstallRemoteWithMissingDependency_add3750__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__16);
        int o_testInstallRemoteWithMissingDependency_add3750__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3750__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3750__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__28)));
        int o_testInstallRemoteWithMissingDependency_add3750__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__30)));
        String o_testInstallRemoteWithMissingDependency_add3750__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__32);
        String o_testInstallRemoteWithMissingDependency_add3750__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__33);
        int o_testInstallRemoteWithMissingDependency_add3750__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__34)));
        int o_testInstallRemoteWithMissingDependency_add3750__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3750__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getId());
        action.getAction();
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallRemoteWithMissingDependency_add3750__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__49)));
        int o_testInstallRemoteWithMissingDependency_add3750__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__51)));
        int o_testInstallRemoteWithMissingDependency_add3750__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__53)));
        String o_testInstallRemoteWithMissingDependency_add3750__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__55);
        String o_testInstallRemoteWithMissingDependency_add3750__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__56);
        String o_testInstallRemoteWithMissingDependency_add3750__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__57);
        int o_testInstallRemoteWithMissingDependency_add3750__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3739() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3739__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3739__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3739__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__14)));
        String o_testInstallRemoteWithMissingDependency_add3739__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__16);
        int o_testInstallRemoteWithMissingDependency_add3739__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3739__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3739__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__28)));
        int o_testInstallRemoteWithMissingDependency_add3739__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__30)));
        action.getNamespace();
        String o_testInstallRemoteWithMissingDependency_add3739__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__33);
        String o_testInstallRemoteWithMissingDependency_add3739__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__34);
        int o_testInstallRemoteWithMissingDependency_add3739__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__35)));
        int o_testInstallRemoteWithMissingDependency_add3739__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3739__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3739__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__49)));
        int o_testInstallRemoteWithMissingDependency_add3739__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__51)));
        int o_testInstallRemoteWithMissingDependency_add3739__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__53)));
        String o_testInstallRemoteWithMissingDependency_add3739__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__55);
        String o_testInstallRemoteWithMissingDependency_add3739__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__56);
        String o_testInstallRemoteWithMissingDependency_add3739__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__57);
        int o_testInstallRemoteWithMissingDependency_add3739__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3738() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3738__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3738__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3738__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__14)));
        String o_testInstallRemoteWithMissingDependency_add3738__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__16);
        int o_testInstallRemoteWithMissingDependency_add3738__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3738__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getId());
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallRemoteWithMissingDependency_add3738__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__29)));
        int o_testInstallRemoteWithMissingDependency_add3738__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__31)));
        String o_testInstallRemoteWithMissingDependency_add3738__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__33);
        String o_testInstallRemoteWithMissingDependency_add3738__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__34);
        int o_testInstallRemoteWithMissingDependency_add3738__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__35)));
        int o_testInstallRemoteWithMissingDependency_add3738__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3738__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3738__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__49)));
        int o_testInstallRemoteWithMissingDependency_add3738__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__51)));
        int o_testInstallRemoteWithMissingDependency_add3738__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__53)));
        String o_testInstallRemoteWithMissingDependency_add3738__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__55);
        String o_testInstallRemoteWithMissingDependency_add3738__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__56);
        String o_testInstallRemoteWithMissingDependency_add3738__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__57);
        int o_testInstallRemoteWithMissingDependency_add3738__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3731() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3731__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3731__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3731__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__14)));
        String o_testInstallRemoteWithMissingDependency_add3731__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__16);
        int o_testInstallRemoteWithMissingDependency_add3731__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__17)));
        node.getChildren().iterator();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3731__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3731__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__30)));
        int o_testInstallRemoteWithMissingDependency_add3731__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__32)));
        String o_testInstallRemoteWithMissingDependency_add3731__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__34);
        String o_testInstallRemoteWithMissingDependency_add3731__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__35);
        int o_testInstallRemoteWithMissingDependency_add3731__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__36)));
        int o_testInstallRemoteWithMissingDependency_add3731__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3731__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3731__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__50)));
        int o_testInstallRemoteWithMissingDependency_add3731__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__52)));
        int o_testInstallRemoteWithMissingDependency_add3731__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__54)));
        String o_testInstallRemoteWithMissingDependency_add3731__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__56);
        String o_testInstallRemoteWithMissingDependency_add3731__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__57);
        String o_testInstallRemoteWithMissingDependency_add3731__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__58);
        int o_testInstallRemoteWithMissingDependency_add3731__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3730() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3730__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3730__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3730__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__14)));
        String o_testInstallRemoteWithMissingDependency_add3730__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__16);
        int o_testInstallRemoteWithMissingDependency_add3730__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__17)));
        ExtensionPlanNode o_testInstallRemoteWithMissingDependency_add3730__19 = node.getChildren().iterator().next();
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getValue());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getType());
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3730__28 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3730__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__31)));
        int o_testInstallRemoteWithMissingDependency_add3730__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__33)));
        String o_testInstallRemoteWithMissingDependency_add3730__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__35);
        String o_testInstallRemoteWithMissingDependency_add3730__36 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__36);
        int o_testInstallRemoteWithMissingDependency_add3730__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__37)));
        int o_testInstallRemoteWithMissingDependency_add3730__39 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__39)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3730__47 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3730__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__51)));
        int o_testInstallRemoteWithMissingDependency_add3730__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__53)));
        int o_testInstallRemoteWithMissingDependency_add3730__55 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__55)));
        String o_testInstallRemoteWithMissingDependency_add3730__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__57);
        String o_testInstallRemoteWithMissingDependency_add3730__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__58);
        String o_testInstallRemoteWithMissingDependency_add3730__59 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__59);
        int o_testInstallRemoteWithMissingDependency_add3730__60 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__60)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__17)));
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getValue());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__31)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__33)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__35);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__36);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__37)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__39)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__53)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__55)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__58);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__59);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3733() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3733__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3733__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3733__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__14)));
        String o_testInstallRemoteWithMissingDependency_add3733__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__16);
        int o_testInstallRemoteWithMissingDependency_add3733__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__17)));
        node = node.getChildren().iterator().next();
        node.getAction();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3733__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3733__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__29)));
        int o_testInstallRemoteWithMissingDependency_add3733__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__31)));
        String o_testInstallRemoteWithMissingDependency_add3733__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__33);
        String o_testInstallRemoteWithMissingDependency_add3733__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__34);
        int o_testInstallRemoteWithMissingDependency_add3733__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__35)));
        int o_testInstallRemoteWithMissingDependency_add3733__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3733__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3733__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__49)));
        int o_testInstallRemoteWithMissingDependency_add3733__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__51)));
        int o_testInstallRemoteWithMissingDependency_add3733__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__53)));
        String o_testInstallRemoteWithMissingDependency_add3733__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__55);
        String o_testInstallRemoteWithMissingDependency_add3733__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__56);
        String o_testInstallRemoteWithMissingDependency_add3733__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__57);
        int o_testInstallRemoteWithMissingDependency_add3733__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3732() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3732__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3732__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3732__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__14)));
        String o_testInstallRemoteWithMissingDependency_add3732__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__16);
        int o_testInstallRemoteWithMissingDependency_add3732__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__17)));
        node.getChildren();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3732__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3732__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__29)));
        int o_testInstallRemoteWithMissingDependency_add3732__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__31)));
        String o_testInstallRemoteWithMissingDependency_add3732__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__33);
        String o_testInstallRemoteWithMissingDependency_add3732__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__34);
        int o_testInstallRemoteWithMissingDependency_add3732__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__35)));
        int o_testInstallRemoteWithMissingDependency_add3732__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3732__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3732__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__49)));
        int o_testInstallRemoteWithMissingDependency_add3732__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__51)));
        int o_testInstallRemoteWithMissingDependency_add3732__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__53)));
        String o_testInstallRemoteWithMissingDependency_add3732__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__55);
        String o_testInstallRemoteWithMissingDependency_add3732__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__56);
        String o_testInstallRemoteWithMissingDependency_add3732__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__57);
        int o_testInstallRemoteWithMissingDependency_add3732__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3735() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3735__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3735__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3735__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__14)));
        String o_testInstallRemoteWithMissingDependency_add3735__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__16);
        int o_testInstallRemoteWithMissingDependency_add3735__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3735__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3735__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__29)));
        int o_testInstallRemoteWithMissingDependency_add3735__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__31)));
        String o_testInstallRemoteWithMissingDependency_add3735__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__33);
        String o_testInstallRemoteWithMissingDependency_add3735__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__34);
        int o_testInstallRemoteWithMissingDependency_add3735__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__35)));
        int o_testInstallRemoteWithMissingDependency_add3735__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3735__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3735__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__49)));
        int o_testInstallRemoteWithMissingDependency_add3735__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__51)));
        int o_testInstallRemoteWithMissingDependency_add3735__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__53)));
        String o_testInstallRemoteWithMissingDependency_add3735__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__55);
        String o_testInstallRemoteWithMissingDependency_add3735__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__56);
        String o_testInstallRemoteWithMissingDependency_add3735__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__57);
        int o_testInstallRemoteWithMissingDependency_add3735__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3734() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3734__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3734__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3734__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__14)));
        String o_testInstallRemoteWithMissingDependency_add3734__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__16);
        int o_testInstallRemoteWithMissingDependency_add3734__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3734__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3734__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__30)));
        int o_testInstallRemoteWithMissingDependency_add3734__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__32)));
        String o_testInstallRemoteWithMissingDependency_add3734__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__34);
        String o_testInstallRemoteWithMissingDependency_add3734__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__35);
        int o_testInstallRemoteWithMissingDependency_add3734__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__36)));
        int o_testInstallRemoteWithMissingDependency_add3734__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3734__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3734__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__50)));
        int o_testInstallRemoteWithMissingDependency_add3734__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__52)));
        int o_testInstallRemoteWithMissingDependency_add3734__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__54)));
        String o_testInstallRemoteWithMissingDependency_add3734__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__56);
        String o_testInstallRemoteWithMissingDependency_add3734__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__57);
        String o_testInstallRemoteWithMissingDependency_add3734__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__58);
        int o_testInstallRemoteWithMissingDependency_add3734__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3737() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3737__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3737__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3737__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__14)));
        String o_testInstallRemoteWithMissingDependency_add3737__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__16);
        int o_testInstallRemoteWithMissingDependency_add3737__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3737__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3737__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__28)));
        int o_testInstallRemoteWithMissingDependency_add3737__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__30)));
        int o_testInstallRemoteWithMissingDependency_add3737__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__32)));
        String o_testInstallRemoteWithMissingDependency_add3737__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__34);
        String o_testInstallRemoteWithMissingDependency_add3737__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__35);
        int o_testInstallRemoteWithMissingDependency_add3737__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__36)));
        int o_testInstallRemoteWithMissingDependency_add3737__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3737__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3737__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__50)));
        int o_testInstallRemoteWithMissingDependency_add3737__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__52)));
        int o_testInstallRemoteWithMissingDependency_add3737__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__54)));
        String o_testInstallRemoteWithMissingDependency_add3737__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__56);
        String o_testInstallRemoteWithMissingDependency_add3737__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__57);
        String o_testInstallRemoteWithMissingDependency_add3737__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__58);
        int o_testInstallRemoteWithMissingDependency_add3737__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3736() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3736__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3736__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3736__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__14)));
        String o_testInstallRemoteWithMissingDependency_add3736__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__16);
        int o_testInstallRemoteWithMissingDependency_add3736__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3736__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3736__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__29)));
        int o_testInstallRemoteWithMissingDependency_add3736__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__31)));
        String o_testInstallRemoteWithMissingDependency_add3736__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__33);
        String o_testInstallRemoteWithMissingDependency_add3736__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__34);
        int o_testInstallRemoteWithMissingDependency_add3736__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__35)));
        int o_testInstallRemoteWithMissingDependency_add3736__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3736__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3736__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__49)));
        int o_testInstallRemoteWithMissingDependency_add3736__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__51)));
        int o_testInstallRemoteWithMissingDependency_add3736__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__53)));
        String o_testInstallRemoteWithMissingDependency_add3736__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__55);
        String o_testInstallRemoteWithMissingDependency_add3736__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__56);
        String o_testInstallRemoteWithMissingDependency_add3736__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__57);
        int o_testInstallRemoteWithMissingDependency_add3736__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3740() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3740__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3740__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3740__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__14)));
        String o_testInstallRemoteWithMissingDependency_add3740__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__16);
        int o_testInstallRemoteWithMissingDependency_add3740__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3740__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3740__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__28)));
        int o_testInstallRemoteWithMissingDependency_add3740__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__30)));
        String o_testInstallRemoteWithMissingDependency_add3740__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__32);
        String o_testInstallRemoteWithMissingDependency_add3740__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__33);
        int o_testInstallRemoteWithMissingDependency_add3740__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__34)));
        int o_testInstallRemoteWithMissingDependency_add3740__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__36)));
        int o_testInstallRemoteWithMissingDependency_add3740__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3740__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3740__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__50)));
        int o_testInstallRemoteWithMissingDependency_add3740__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__52)));
        int o_testInstallRemoteWithMissingDependency_add3740__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__54)));
        String o_testInstallRemoteWithMissingDependency_add3740__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__56);
        String o_testInstallRemoteWithMissingDependency_add3740__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__57);
        String o_testInstallRemoteWithMissingDependency_add3740__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__58);
        int o_testInstallRemoteWithMissingDependency_add3740__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getVersion())).getValue());
        Assert.assertEquals(325919413, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getVersion())).getValue());
        Assert.assertEquals(-2098997363, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getVersion())).getValue());
        Assert.assertEquals(-253640755, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__58);
    }

    @Test(timeout = 10000)
    public void testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_ROOT_DEPENDENY20_ID, "namespace");
        int o_testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241__12 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241__12)).getVersion())).getValue());
        Assert.assertEquals(-723506531, ((int) (((ExtensionId) (o_testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241__12)).hashCode())));
        Assert.assertEquals("rwithrootdependency", ((ExtensionId) (o_testUpgradeExtensionOnNamespaceWithDependencyAllowedOnRootOnly_remove3241__12)).getId());
        action.getAction();
        action.getPreviousExtension().getId();
        action.getNamespace();
        node.getChildren().size();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        action.getAction();
        action.getAction();
        action.getPreviousExtension().getId();
        action.getNamespace();
        node.getChildren().size();
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2199() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2199__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2199__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2199__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__17)));
        String o_testInstallWithRecommendedManagedDependency_add2199__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2199__19);
        int o_testInstallWithRecommendedManagedDependency_add2199__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2199__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2199__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__33)));
        int o_testInstallWithRecommendedManagedDependency_add2199__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__35)));
        String o_testInstallWithRecommendedManagedDependency_add2199__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2199__37);
        String o_testInstallWithRecommendedManagedDependency_add2199__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2199__38);
        int o_testInstallWithRecommendedManagedDependency_add2199__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2199__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2199__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2199__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2199__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2199__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2176() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "nvmespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2176__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2176__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2176__19 = action.getNamespace();
        Assert.assertEquals("nvmespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2176__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2176__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2176__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2176__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2176__36 = action.getNamespace();
        Assert.assertEquals("nvmespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2176__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2176__37 = action.getNamespace();
        Assert.assertEquals("nvmespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2176__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2176__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__17)));
        Assert.assertEquals("nvmespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2176__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2176__34)));
        Assert.assertEquals("nvmespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2176__36);
        Assert.assertEquals("nvmespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2176__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2175() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "&D;*2o.A]");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2175__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2175__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2175__19 = action.getNamespace();
        Assert.assertEquals("&D;*2o.A]", o_testInstallWithRecommendedManagedDependency_literalMutationString2175__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2175__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2175__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2175__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2175__36 = action.getNamespace();
        Assert.assertEquals("&D;*2o.A]", o_testInstallWithRecommendedManagedDependency_literalMutationString2175__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2175__37 = action.getNamespace();
        Assert.assertEquals("&D;*2o.A]", o_testInstallWithRecommendedManagedDependency_literalMutationString2175__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2175__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__17)));
        Assert.assertEquals("&D;*2o.A]", o_testInstallWithRecommendedManagedDependency_literalMutationString2175__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2175__34)));
        Assert.assertEquals("&D;*2o.A]", o_testInstallWithRecommendedManagedDependency_literalMutationString2175__36);
        Assert.assertEquals("&D;*2o.A]", o_testInstallWithRecommendedManagedDependency_literalMutationString2175__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2174() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "naespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2174__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2174__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2174__19 = action.getNamespace();
        Assert.assertEquals("naespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2174__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2174__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2174__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2174__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2174__36 = action.getNamespace();
        Assert.assertEquals("naespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2174__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2174__37 = action.getNamespace();
        Assert.assertEquals("naespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2174__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2174__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__17)));
        Assert.assertEquals("naespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2174__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2174__34)));
        Assert.assertEquals("naespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2174__36);
        Assert.assertEquals("naespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2174__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2173() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "nam6espace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2173__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2173__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2173__19 = action.getNamespace();
        Assert.assertEquals("nam6espace", o_testInstallWithRecommendedManagedDependency_literalMutationString2173__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2173__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2173__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2173__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2173__36 = action.getNamespace();
        Assert.assertEquals("nam6espace", o_testInstallWithRecommendedManagedDependency_literalMutationString2173__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2173__37 = action.getNamespace();
        Assert.assertEquals("nam6espace", o_testInstallWithRecommendedManagedDependency_literalMutationString2173__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2173__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__17)));
        Assert.assertEquals("nam6espace", o_testInstallWithRecommendedManagedDependency_literalMutationString2173__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2173__34)));
        Assert.assertEquals("nam6espace", o_testInstallWithRecommendedManagedDependency_literalMutationString2173__36);
        Assert.assertEquals("nam6espace", o_testInstallWithRecommendedManagedDependency_literalMutationString2173__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2172() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "Should not be allowed to install [");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2172__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2172__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2172__19 = action.getNamespace();
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithRecommendedManagedDependency_literalMutationString2172__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2172__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2172__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2172__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2172__36 = action.getNamespace();
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithRecommendedManagedDependency_literalMutationString2172__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2172__37 = action.getNamespace();
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithRecommendedManagedDependency_literalMutationString2172__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2172__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__17)));
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithRecommendedManagedDependency_literalMutationString2172__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2172__34)));
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithRecommendedManagedDependency_literalMutationString2172__36);
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithRecommendedManagedDependency_literalMutationString2172__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2171() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2171__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2171__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2171__19 = action.getNamespace();
        Assert.assertEquals("", o_testInstallWithRecommendedManagedDependency_literalMutationString2171__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2171__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2171__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2171__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2171__36 = action.getNamespace();
        Assert.assertEquals("", o_testInstallWithRecommendedManagedDependency_literalMutationString2171__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2171__37 = action.getNamespace();
        Assert.assertEquals("", o_testInstallWithRecommendedManagedDependency_literalMutationString2171__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2171__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__17)));
        Assert.assertEquals("", o_testInstallWithRecommendedManagedDependency_literalMutationString2171__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2171__34)));
        Assert.assertEquals("", o_testInstallWithRecommendedManagedDependency_literalMutationString2171__36);
        Assert.assertEquals("", o_testInstallWithRecommendedManagedDependency_literalMutationString2171__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_remove2206() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_remove2206__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_remove2206__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__11)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__11)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__11)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_remove2206__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__14)));
        String o_testInstallWithRecommendedManagedDependency_remove2206__16 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_remove2206__16);
        int o_testInstallWithRecommendedManagedDependency_remove2206__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_remove2206__25 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__25)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__25)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__25)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_remove2206__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__29)));
        int o_testInstallWithRecommendedManagedDependency_remove2206__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__31)));
        String o_testInstallWithRecommendedManagedDependency_remove2206__33 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_remove2206__33);
        String o_testInstallWithRecommendedManagedDependency_remove2206__34 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_remove2206__34);
        int o_testInstallWithRecommendedManagedDependency_remove2206__35 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__35)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__11)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__11)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__14)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_remove2206__16);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__17)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__25)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__25)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_remove2206__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__29)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_remove2206__31)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_remove2206__33);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_remove2206__34);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependencynull2207() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty(null, "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependencynull2207__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependencynull2207__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependencynull2207__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__17)));
        String o_testInstallWithRecommendedManagedDependencynull2207__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2207__19);
        int o_testInstallWithRecommendedManagedDependencynull2207__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependencynull2207__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependencynull2207__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__32)));
        int o_testInstallWithRecommendedManagedDependencynull2207__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__34)));
        String o_testInstallWithRecommendedManagedDependencynull2207__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2207__36);
        String o_testInstallWithRecommendedManagedDependencynull2207__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2207__37);
        int o_testInstallWithRecommendedManagedDependencynull2207__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2207__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2207__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2207__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2207__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2207__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependencynull2208() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", null);
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependencynull2208__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependencynull2208__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependencynull2208__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__17)));
        String o_testInstallWithRecommendedManagedDependencynull2208__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2208__19);
        int o_testInstallWithRecommendedManagedDependencynull2208__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependencynull2208__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependencynull2208__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__32)));
        int o_testInstallWithRecommendedManagedDependencynull2208__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__34)));
        String o_testInstallWithRecommendedManagedDependencynull2208__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2208__36);
        String o_testInstallWithRecommendedManagedDependencynull2208__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2208__37);
        int o_testInstallWithRecommendedManagedDependencynull2208__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2208__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependencynull2208__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependencynull2208__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2208__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependencynull2208__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2189() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2189__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2189__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2189__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__17)));
        int o_testInstallWithRecommendedManagedDependency_add2189__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__19)));
        String o_testInstallWithRecommendedManagedDependency_add2189__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2189__21);
        int o_testInstallWithRecommendedManagedDependency_add2189__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2189__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2189__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__34)));
        int o_testInstallWithRecommendedManagedDependency_add2189__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__36)));
        String o_testInstallWithRecommendedManagedDependency_add2189__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2189__38);
        String o_testInstallWithRecommendedManagedDependency_add2189__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2189__39);
        int o_testInstallWithRecommendedManagedDependency_add2189__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__17)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__19)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2189__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2189__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2189__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2189__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2189__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2188() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2188__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2188__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__14)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2188__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__18)));
        String o_testInstallWithRecommendedManagedDependency_add2188__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2188__20);
        int o_testInstallWithRecommendedManagedDependency_add2188__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2188__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2188__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__33)));
        int o_testInstallWithRecommendedManagedDependency_add2188__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__35)));
        String o_testInstallWithRecommendedManagedDependency_add2188__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2188__37);
        String o_testInstallWithRecommendedManagedDependency_add2188__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2188__38);
        int o_testInstallWithRecommendedManagedDependency_add2188__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2188__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2188__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2188__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2188__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2188__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2198() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2198__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2198__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2198__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__17)));
        String o_testInstallWithRecommendedManagedDependency_add2198__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2198__19);
        int o_testInstallWithRecommendedManagedDependency_add2198__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2198__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2198__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__34)));
        int o_testInstallWithRecommendedManagedDependency_add2198__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__36)));
        String o_testInstallWithRecommendedManagedDependency_add2198__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2198__38);
        String o_testInstallWithRecommendedManagedDependency_add2198__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2198__39);
        int o_testInstallWithRecommendedManagedDependency_add2198__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2198__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2198__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2198__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2198__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2198__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2165() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2165__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2165__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2165__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2165__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2165__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2165__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2165__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2165__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2165__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2165__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2165__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2165__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2165__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2165__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2165__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2165__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2197() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2197__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2197__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2197__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__17)));
        String o_testInstallWithRecommendedManagedDependency_add2197__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2197__19);
        int o_testInstallWithRecommendedManagedDependency_add2197__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__20)));
        node = node.getChildren().iterator().next();
        node.getAction();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2197__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2197__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__33)));
        int o_testInstallWithRecommendedManagedDependency_add2197__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__35)));
        String o_testInstallWithRecommendedManagedDependency_add2197__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2197__37);
        String o_testInstallWithRecommendedManagedDependency_add2197__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2197__38);
        int o_testInstallWithRecommendedManagedDependency_add2197__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2197__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2197__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2197__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2197__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2197__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2164() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("BrHW}Z#s{O87= cwj/x:PiQ&3:d%2aZkA:Q", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2164__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2164__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2164__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2164__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2164__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2164__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2164__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2164__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2164__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2164__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2164__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2164__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2164__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2164__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2164__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2164__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2196() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2196__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2196__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2196__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__17)));
        String o_testInstallWithRecommendedManagedDependency_add2196__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2196__19);
        int o_testInstallWithRecommendedManagedDependency_add2196__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__20)));
        node.getChildren();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2196__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2196__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__33)));
        int o_testInstallWithRecommendedManagedDependency_add2196__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__35)));
        String o_testInstallWithRecommendedManagedDependency_add2196__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2196__37);
        String o_testInstallWithRecommendedManagedDependency_add2196__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2196__38);
        int o_testInstallWithRecommendedManagedDependency_add2196__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2196__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2196__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2196__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2196__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2196__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2163() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extensi)n.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2163__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2163__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2163__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2163__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2163__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2163__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2163__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2163__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2163__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2163__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2163__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2163__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2163__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2163__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2163__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2163__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2195() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2195__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2195__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2195__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__17)));
        String o_testInstallWithRecommendedManagedDependency_add2195__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2195__19);
        int o_testInstallWithRecommendedManagedDependency_add2195__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__20)));
        node.getChildren().iterator();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2195__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2195__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__34)));
        int o_testInstallWithRecommendedManagedDependency_add2195__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__36)));
        String o_testInstallWithRecommendedManagedDependency_add2195__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2195__38);
        String o_testInstallWithRecommendedManagedDependency_add2195__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2195__39);
        int o_testInstallWithRecommendedManagedDependency_add2195__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2195__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2195__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2195__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2195__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2195__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2162() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersiuons", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2162__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2162__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2162__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2162__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2162__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2162__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2162__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2162__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2162__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2162__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2162__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2162__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2162__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2162__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2162__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2162__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2194() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2194__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2194__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2194__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__17)));
        String o_testInstallWithRecommendedManagedDependency_add2194__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2194__19);
        int o_testInstallWithRecommendedManagedDependency_add2194__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__20)));
        ExtensionPlanNode o_testInstallWithRecommendedManagedDependency_add2194__22 = node.getChildren().iterator().next();
        Assert.assertEquals("2.0", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("2.0", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getType());
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2194__31 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__31)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__31)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2194__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__35)));
        int o_testInstallWithRecommendedManagedDependency_add2194__37 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__37)));
        String o_testInstallWithRecommendedManagedDependency_add2194__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2194__39);
        String o_testInstallWithRecommendedManagedDependency_add2194__40 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2194__40);
        int o_testInstallWithRecommendedManagedDependency_add2194__41 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__41)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2194__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__20)));
        Assert.assertEquals("2.0", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("2.0", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2194__22)).getAction())).getExtension())).getType());
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__31)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2194__31)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__35)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2194__37)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2194__39);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2194__40);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2161() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recomendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2161__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2161__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2161__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2161__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2161__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2161__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2161__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2161__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2161__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2161__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2161__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2161__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2161__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2161__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2161__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2161__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2193() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2193__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2193__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2193__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__17)));
        String o_testInstallWithRecommendedManagedDependency_add2193__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2193__19);
        node.getChildren();
        int o_testInstallWithRecommendedManagedDependency_add2193__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2193__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2193__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__33)));
        int o_testInstallWithRecommendedManagedDependency_add2193__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__35)));
        String o_testInstallWithRecommendedManagedDependency_add2193__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2193__37);
        String o_testInstallWithRecommendedManagedDependency_add2193__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2193__38);
        int o_testInstallWithRecommendedManagedDependency_add2193__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2193__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2193__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2193__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2193__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2193__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2160() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("Should not be allowed to install [", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2160__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2160__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2160__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2160__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2160__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2160__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2160__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2160__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2160__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2160__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2160__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2160__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2160__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2160__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2160__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2160__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2192() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2192__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2192__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2192__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__17)));
        String o_testInstallWithRecommendedManagedDependency_add2192__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2192__19);
        int o_testInstallWithRecommendedManagedDependency_add2192__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__20)));
        int o_testInstallWithRecommendedManagedDependency_add2192__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2192__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2192__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__34)));
        int o_testInstallWithRecommendedManagedDependency_add2192__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__36)));
        String o_testInstallWithRecommendedManagedDependency_add2192__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2192__38);
        String o_testInstallWithRecommendedManagedDependency_add2192__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2192__39);
        int o_testInstallWithRecommendedManagedDependency_add2192__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2192__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__20)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2192__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2192__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2192__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2192__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2191() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2191__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2191__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2191__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__17)));
        action.getNamespace();
        String o_testInstallWithRecommendedManagedDependency_add2191__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2191__20);
        int o_testInstallWithRecommendedManagedDependency_add2191__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2191__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2191__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__33)));
        int o_testInstallWithRecommendedManagedDependency_add2191__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__35)));
        String o_testInstallWithRecommendedManagedDependency_add2191__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2191__37);
        String o_testInstallWithRecommendedManagedDependency_add2191__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2191__38);
        int o_testInstallWithRecommendedManagedDependency_add2191__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2191__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2191__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2191__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2191__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2191__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2190() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2190__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2190__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__14)).getId());
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallWithRecommendedManagedDependency_add2190__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__18)));
        String o_testInstallWithRecommendedManagedDependency_add2190__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2190__20);
        int o_testInstallWithRecommendedManagedDependency_add2190__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2190__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2190__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__33)));
        int o_testInstallWithRecommendedManagedDependency_add2190__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__35)));
        String o_testInstallWithRecommendedManagedDependency_add2190__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2190__37);
        String o_testInstallWithRecommendedManagedDependency_add2190__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2190__38);
        int o_testInstallWithRecommendedManagedDependency_add2190__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2190__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2190__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2190__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2190__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2190__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2169() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/W.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2169__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2169__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2169__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2169__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2169__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2169__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2169__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2169__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2169__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2169__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2169__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2169__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2169__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2169__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2169__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2169__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2168() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrMade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2168__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2168__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2168__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2168__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2168__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2168__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2168__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2168__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2168__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2168__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2168__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2168__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2168__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2168__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2168__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2168__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2179() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan o_testInstallWithRecommendedManagedDependency_add2179__4 = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isCanceled());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2179__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2179__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__15)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2179__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__18)));
        String o_testInstallWithRecommendedManagedDependency_add2179__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2179__20);
        int o_testInstallWithRecommendedManagedDependency_add2179__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2179__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2179__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__33)));
        int o_testInstallWithRecommendedManagedDependency_add2179__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__35)));
        String o_testInstallWithRecommendedManagedDependency_add2179__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2179__37);
        String o_testInstallWithRecommendedManagedDependency_add2179__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2179__38);
        int o_testInstallWithRecommendedManagedDependency_add2179__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__39)));
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithRecommendedManagedDependency_add2179__4)).isCanceled());
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__7)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2179__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2179__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2179__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2179__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2179__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2178() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension();
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2178__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2178__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__15)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2178__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__18)));
        String o_testInstallWithRecommendedManagedDependency_add2178__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2178__20);
        int o_testInstallWithRecommendedManagedDependency_add2178__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2178__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2178__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__33)));
        int o_testInstallWithRecommendedManagedDependency_add2178__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__35)));
        String o_testInstallWithRecommendedManagedDependency_add2178__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2178__37);
        String o_testInstallWithRecommendedManagedDependency_add2178__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2178__38);
        int o_testInstallWithRecommendedManagedDependency_add2178__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__7)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2178__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2178__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2178__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2178__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2178__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2177() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2177__9 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__9)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2177__17 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__17)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__17)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2177__20 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__20)));
        String o_testInstallWithRecommendedManagedDependency_add2177__22 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2177__22);
        int o_testInstallWithRecommendedManagedDependency_add2177__23 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__23)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2177__31 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__31)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__31)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2177__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__35)));
        int o_testInstallWithRecommendedManagedDependency_add2177__37 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__37)));
        String o_testInstallWithRecommendedManagedDependency_add2177__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2177__39);
        String o_testInstallWithRecommendedManagedDependency_add2177__40 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2177__40);
        int o_testInstallWithRecommendedManagedDependency_add2177__41 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__41)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__9)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__17)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__17)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__20)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2177__22);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__23)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__31)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2177__31)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__35)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2177__37)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2177__39);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2177__40);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2187() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2187__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2187__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__15)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2187__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__18)));
        String o_testInstallWithRecommendedManagedDependency_add2187__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2187__20);
        int o_testInstallWithRecommendedManagedDependency_add2187__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2187__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2187__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__33)));
        int o_testInstallWithRecommendedManagedDependency_add2187__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__35)));
        String o_testInstallWithRecommendedManagedDependency_add2187__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2187__37);
        String o_testInstallWithRecommendedManagedDependency_add2187__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2187__38);
        int o_testInstallWithRecommendedManagedDependency_add2187__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2187__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2187__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2187__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2187__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2187__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2186() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2186__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2186__16 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__16)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__16)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2186__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__19)));
        String o_testInstallWithRecommendedManagedDependency_add2186__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2186__21);
        int o_testInstallWithRecommendedManagedDependency_add2186__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2186__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2186__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__34)));
        int o_testInstallWithRecommendedManagedDependency_add2186__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__36)));
        String o_testInstallWithRecommendedManagedDependency_add2186__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2186__38);
        String o_testInstallWithRecommendedManagedDependency_add2186__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2186__39);
        int o_testInstallWithRecommendedManagedDependency_add2186__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__16)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__16)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__19)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2186__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2186__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2186__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2186__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2186__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2185() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2185__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        node.getAction();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2185__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__15)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2185__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__18)));
        String o_testInstallWithRecommendedManagedDependency_add2185__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2185__20);
        int o_testInstallWithRecommendedManagedDependency_add2185__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2185__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2185__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__33)));
        int o_testInstallWithRecommendedManagedDependency_add2185__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__35)));
        String o_testInstallWithRecommendedManagedDependency_add2185__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2185__37);
        String o_testInstallWithRecommendedManagedDependency_add2185__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2185__38);
        int o_testInstallWithRecommendedManagedDependency_add2185__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2185__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2185__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2185__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2185__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2185__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2184() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2184__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__6)));
        plan.getTree();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2184__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__15)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2184__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__18)));
        String o_testInstallWithRecommendedManagedDependency_add2184__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2184__20);
        int o_testInstallWithRecommendedManagedDependency_add2184__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2184__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2184__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__33)));
        int o_testInstallWithRecommendedManagedDependency_add2184__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__35)));
        String o_testInstallWithRecommendedManagedDependency_add2184__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2184__37);
        String o_testInstallWithRecommendedManagedDependency_add2184__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2184__38);
        int o_testInstallWithRecommendedManagedDependency_add2184__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2184__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2184__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2184__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2184__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2184__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2183() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2183__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__6)));
        plan.getTree().iterator();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2183__16 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__16)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__16)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2183__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__19)));
        String o_testInstallWithRecommendedManagedDependency_add2183__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2183__21);
        int o_testInstallWithRecommendedManagedDependency_add2183__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2183__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2183__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__34)));
        int o_testInstallWithRecommendedManagedDependency_add2183__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__36)));
        String o_testInstallWithRecommendedManagedDependency_add2183__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2183__38);
        String o_testInstallWithRecommendedManagedDependency_add2183__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2183__39);
        int o_testInstallWithRecommendedManagedDependency_add2183__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__16)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__16)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__19)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2183__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2183__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2183__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2183__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2183__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2182() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2182__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__6)));
        ExtensionPlanNode o_testInstallWithRecommendedManagedDependency_add2182__8 = plan.getTree().iterator().next();
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getType());
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2182__17 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__17)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__17)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2182__20 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__20)));
        String o_testInstallWithRecommendedManagedDependency_add2182__22 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2182__22);
        int o_testInstallWithRecommendedManagedDependency_add2182__23 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__23)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2182__31 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__31)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__31)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2182__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__35)));
        int o_testInstallWithRecommendedManagedDependency_add2182__37 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__37)));
        String o_testInstallWithRecommendedManagedDependency_add2182__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2182__39);
        String o_testInstallWithRecommendedManagedDependency_add2182__40 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2182__40);
        int o_testInstallWithRecommendedManagedDependency_add2182__41 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__41)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__6)));
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithRecommendedManagedDependency_add2182__8)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__17)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__17)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__20)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2182__22);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__23)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__31)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2182__31)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__35)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2182__37)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2182__39);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2182__40);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2181() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        plan.getTree();
        int o_testInstallWithRecommendedManagedDependency_add2181__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2181__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__15)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2181__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__18)));
        String o_testInstallWithRecommendedManagedDependency_add2181__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2181__20);
        int o_testInstallWithRecommendedManagedDependency_add2181__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2181__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2181__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__33)));
        int o_testInstallWithRecommendedManagedDependency_add2181__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__35)));
        String o_testInstallWithRecommendedManagedDependency_add2181__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2181__37);
        String o_testInstallWithRecommendedManagedDependency_add2181__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2181__38);
        int o_testInstallWithRecommendedManagedDependency_add2181__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__7)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__15)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__18)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2181__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__29)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2181__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2181__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2181__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2181__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2180() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2180__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__6)));
        int o_testInstallWithRecommendedManagedDependency_add2180__8 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__8)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2180__16 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__16)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__16)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2180__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__19)));
        String o_testInstallWithRecommendedManagedDependency_add2180__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2180__21);
        int o_testInstallWithRecommendedManagedDependency_add2180__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2180__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2180__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__34)));
        int o_testInstallWithRecommendedManagedDependency_add2180__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__36)));
        String o_testInstallWithRecommendedManagedDependency_add2180__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2180__38);
        String o_testInstallWithRecommendedManagedDependency_add2180__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2180__39);
        int o_testInstallWithRecommendedManagedDependency_add2180__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__6)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__8)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__16)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__16)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__19)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2180__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__30)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2180__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2180__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2180__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2180__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_literalMutationString2159() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2159__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2159__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__17)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2159__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2159__19);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2159__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2159__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__32)));
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2159__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__34)));
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2159__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2159__36);
        String o_testInstallWithRecommendedManagedDependency_literalMutationString2159__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2159__37);
        int o_testInstallWithRecommendedManagedDependency_literalMutationString2159__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2159__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28)).getVersion())).getValue());
        Assert.assertEquals(1200999531, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_literalMutationString2159__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2159__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_literalMutationString2159__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2205() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2205__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2205__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2205__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__17)));
        String o_testInstallWithRecommendedManagedDependency_add2205__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2205__19);
        int o_testInstallWithRecommendedManagedDependency_add2205__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2205__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2205__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__32)));
        int o_testInstallWithRecommendedManagedDependency_add2205__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__34)));
        String o_testInstallWithRecommendedManagedDependency_add2205__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2205__36);
        String o_testInstallWithRecommendedManagedDependency_add2205__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2205__37);
        node.getChildren();
        int o_testInstallWithRecommendedManagedDependency_add2205__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2205__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2205__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2205__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2205__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2205__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2204() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2204__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2204__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2204__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__17)));
        String o_testInstallWithRecommendedManagedDependency_add2204__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2204__19);
        int o_testInstallWithRecommendedManagedDependency_add2204__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2204__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2204__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__32)));
        int o_testInstallWithRecommendedManagedDependency_add2204__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__34)));
        String o_testInstallWithRecommendedManagedDependency_add2204__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2204__36);
        String o_testInstallWithRecommendedManagedDependency_add2204__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2204__37);
        int o_testInstallWithRecommendedManagedDependency_add2204__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__38)));
        int o_testInstallWithRecommendedManagedDependency_add2204__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2204__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2204__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2204__36);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2204__37);
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2204__38)));
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2203() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2203__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2203__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2203__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__17)));
        String o_testInstallWithRecommendedManagedDependency_add2203__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2203__19);
        int o_testInstallWithRecommendedManagedDependency_add2203__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2203__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2203__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__32)));
        int o_testInstallWithRecommendedManagedDependency_add2203__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__34)));
        action.getNamespace();
        String o_testInstallWithRecommendedManagedDependency_add2203__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2203__37);
        String o_testInstallWithRecommendedManagedDependency_add2203__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2203__38);
        int o_testInstallWithRecommendedManagedDependency_add2203__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2203__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2203__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2203__34)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2203__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2203__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2202() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2202__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2202__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2202__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__17)));
        String o_testInstallWithRecommendedManagedDependency_add2202__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2202__19);
        int o_testInstallWithRecommendedManagedDependency_add2202__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2202__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__28)).getId());
        action.getAction();
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallWithRecommendedManagedDependency_add2202__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__33)));
        int o_testInstallWithRecommendedManagedDependency_add2202__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__35)));
        String o_testInstallWithRecommendedManagedDependency_add2202__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2202__37);
        String o_testInstallWithRecommendedManagedDependency_add2202__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2202__38);
        int o_testInstallWithRecommendedManagedDependency_add2202__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2202__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2202__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2202__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2202__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2202__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2201() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2201__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2201__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2201__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__17)));
        String o_testInstallWithRecommendedManagedDependency_add2201__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2201__19);
        int o_testInstallWithRecommendedManagedDependency_add2201__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2201__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2201__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__32)));
        int o_testInstallWithRecommendedManagedDependency_add2201__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__34)));
        int o_testInstallWithRecommendedManagedDependency_add2201__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__36)));
        String o_testInstallWithRecommendedManagedDependency_add2201__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2201__38);
        String o_testInstallWithRecommendedManagedDependency_add2201__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2201__39);
        int o_testInstallWithRecommendedManagedDependency_add2201__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2201__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2201__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2201__36)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2201__38);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2201__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithRecommendedManagedDependency_add2200() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/2.0");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithRecommendedManagedDependency_add2200__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2200__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__14)).getId());
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2200__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__17)));
        String o_testInstallWithRecommendedManagedDependency_add2200__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2200__19);
        int o_testInstallWithRecommendedManagedDependency_add2200__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithRecommendedManagedDependency_add2200__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__28)).getId());
        action.getAction();
        action.getAction();
        action.getAction();
        int o_testInstallWithRecommendedManagedDependency_add2200__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__33)));
        int o_testInstallWithRecommendedManagedDependency_add2200__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__35)));
        String o_testInstallWithRecommendedManagedDependency_add2200__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2200__37);
        String o_testInstallWithRecommendedManagedDependency_add2200__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2200__38);
        int o_testInstallWithRecommendedManagedDependency_add2200__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__14)).getVersion())).getValue());
        Assert.assertEquals(891300177, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__17)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2200__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__28)).getVersion())).getValue());
        Assert.assertEquals(1200999568, ((int) (((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithRecommendedManagedDependency_add2200__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithRecommendedManagedDependency_add2200__35)));
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2200__37);
        Assert.assertEquals("namespace", o_testInstallWithRecommendedManagedDependency_add2200__38);
    }
}

