package org.xwiki.extension.job.internal;


import java.util.Collection;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xwiki.extension.Extension;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.TestResources;
import org.xwiki.extension.job.plan.ExtensionPlan;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlan;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode;
import org.xwiki.extension.repository.CoreExtensionRepository;
import org.xwiki.extension.test.AbstractExtensionHandlerTest;
import org.xwiki.extension.test.ConfigurableDefaultCoreExtensionRepository;
import org.xwiki.extension.version.Version;
import org.xwiki.extension.version.VersionConstraint;
import org.xwiki.job.Request;
import org.xwiki.job.event.status.JobProgress;
import org.xwiki.job.event.status.JobProgressStep;


public class AmplInstallPlanJobTest extends AbstractExtensionHandlerTest {
    private ConfigurableDefaultCoreExtensionRepository coreRepository;

    @Override
    @Before
    public void setUp() throws Exception {
        super.setUp();
        this.coreRepository = this.mocker.getInstance(CoreExtensionRepository.class);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3728() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3728__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3728__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3728__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__14)));
        String o_testInstallRemoteWithMissingDependency_add3728__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__16);
        int o_testInstallRemoteWithMissingDependency_add3728__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__17)));
        int o_testInstallRemoteWithMissingDependency_add3728__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3728__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3728__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__30)));
        int o_testInstallRemoteWithMissingDependency_add3728__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__32)));
        String o_testInstallRemoteWithMissingDependency_add3728__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__34);
        String o_testInstallRemoteWithMissingDependency_add3728__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__35);
        int o_testInstallRemoteWithMissingDependency_add3728__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__36)));
        int o_testInstallRemoteWithMissingDependency_add3728__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3728__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3728__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__50)));
        int o_testInstallRemoteWithMissingDependency_add3728__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__52)));
        int o_testInstallRemoteWithMissingDependency_add3728__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__54)));
        String o_testInstallRemoteWithMissingDependency_add3728__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__56);
        String o_testInstallRemoteWithMissingDependency_add3728__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__57);
        String o_testInstallRemoteWithMissingDependency_add3728__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__58);
        int o_testInstallRemoteWithMissingDependency_add3728__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__17)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3728__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3728__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3728__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3728__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3727() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3727__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3727__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3727__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__14)));
        action.getNamespace();
        String o_testInstallRemoteWithMissingDependency_add3727__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__17);
        int o_testInstallRemoteWithMissingDependency_add3727__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3727__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3727__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__29)));
        int o_testInstallRemoteWithMissingDependency_add3727__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__31)));
        String o_testInstallRemoteWithMissingDependency_add3727__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__33);
        String o_testInstallRemoteWithMissingDependency_add3727__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__34);
        int o_testInstallRemoteWithMissingDependency_add3727__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__35)));
        int o_testInstallRemoteWithMissingDependency_add3727__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3727__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3727__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__49)));
        int o_testInstallRemoteWithMissingDependency_add3727__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__51)));
        int o_testInstallRemoteWithMissingDependency_add3727__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__53)));
        String o_testInstallRemoteWithMissingDependency_add3727__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__55);
        String o_testInstallRemoteWithMissingDependency_add3727__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__56);
        String o_testInstallRemoteWithMissingDependency_add3727__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__57);
        int o_testInstallRemoteWithMissingDependency_add3727__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3727__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3727__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3727__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3727__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3729() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3729__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3729__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3729__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__14)));
        String o_testInstallRemoteWithMissingDependency_add3729__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__16);
        node.getChildren();
        int o_testInstallRemoteWithMissingDependency_add3729__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3729__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3729__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__29)));
        int o_testInstallRemoteWithMissingDependency_add3729__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__31)));
        String o_testInstallRemoteWithMissingDependency_add3729__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__33);
        String o_testInstallRemoteWithMissingDependency_add3729__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__34);
        int o_testInstallRemoteWithMissingDependency_add3729__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__35)));
        int o_testInstallRemoteWithMissingDependency_add3729__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3729__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3729__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__49)));
        int o_testInstallRemoteWithMissingDependency_add3729__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__51)));
        int o_testInstallRemoteWithMissingDependency_add3729__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__53)));
        String o_testInstallRemoteWithMissingDependency_add3729__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__55);
        String o_testInstallRemoteWithMissingDependency_add3729__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__56);
        String o_testInstallRemoteWithMissingDependency_add3729__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__57);
        int o_testInstallRemoteWithMissingDependency_add3729__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3729__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3729__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3729__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3729__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3720() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3720__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__3)));
        plan.getTree();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3720__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3720__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__15)));
        String o_testInstallRemoteWithMissingDependency_add3720__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__17);
        int o_testInstallRemoteWithMissingDependency_add3720__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3720__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3720__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__29)));
        int o_testInstallRemoteWithMissingDependency_add3720__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__31)));
        String o_testInstallRemoteWithMissingDependency_add3720__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__33);
        String o_testInstallRemoteWithMissingDependency_add3720__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__34);
        int o_testInstallRemoteWithMissingDependency_add3720__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__35)));
        int o_testInstallRemoteWithMissingDependency_add3720__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3720__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3720__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__49)));
        int o_testInstallRemoteWithMissingDependency_add3720__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__51)));
        int o_testInstallRemoteWithMissingDependency_add3720__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__53)));
        String o_testInstallRemoteWithMissingDependency_add3720__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__55);
        String o_testInstallRemoteWithMissingDependency_add3720__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__56);
        String o_testInstallRemoteWithMissingDependency_add3720__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__57);
        int o_testInstallRemoteWithMissingDependency_add3720__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3720__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3720__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3720__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3720__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3722() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3722__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3722__13 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3722__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__16)));
        String o_testInstallRemoteWithMissingDependency_add3722__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__18);
        int o_testInstallRemoteWithMissingDependency_add3722__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3722__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3722__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__30)));
        int o_testInstallRemoteWithMissingDependency_add3722__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__32)));
        String o_testInstallRemoteWithMissingDependency_add3722__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__34);
        String o_testInstallRemoteWithMissingDependency_add3722__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__35);
        int o_testInstallRemoteWithMissingDependency_add3722__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__36)));
        int o_testInstallRemoteWithMissingDependency_add3722__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3722__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3722__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__50)));
        int o_testInstallRemoteWithMissingDependency_add3722__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__52)));
        int o_testInstallRemoteWithMissingDependency_add3722__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__54)));
        String o_testInstallRemoteWithMissingDependency_add3722__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__56);
        String o_testInstallRemoteWithMissingDependency_add3722__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__57);
        String o_testInstallRemoteWithMissingDependency_add3722__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__58);
        int o_testInstallRemoteWithMissingDependency_add3722__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__13)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3722__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3722__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3722__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3722__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3721() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3721__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        node.getAction();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3721__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3721__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__15)));
        String o_testInstallRemoteWithMissingDependency_add3721__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__17);
        int o_testInstallRemoteWithMissingDependency_add3721__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3721__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3721__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__29)));
        int o_testInstallRemoteWithMissingDependency_add3721__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__31)));
        String o_testInstallRemoteWithMissingDependency_add3721__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__33);
        String o_testInstallRemoteWithMissingDependency_add3721__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__34);
        int o_testInstallRemoteWithMissingDependency_add3721__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__35)));
        int o_testInstallRemoteWithMissingDependency_add3721__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3721__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3721__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__49)));
        int o_testInstallRemoteWithMissingDependency_add3721__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__51)));
        int o_testInstallRemoteWithMissingDependency_add3721__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__53)));
        String o_testInstallRemoteWithMissingDependency_add3721__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__55);
        String o_testInstallRemoteWithMissingDependency_add3721__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__56);
        String o_testInstallRemoteWithMissingDependency_add3721__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__57);
        int o_testInstallRemoteWithMissingDependency_add3721__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3721__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3721__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3721__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3721__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3724() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3724__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3724__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3724__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__15)));
        String o_testInstallRemoteWithMissingDependency_add3724__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__17);
        int o_testInstallRemoteWithMissingDependency_add3724__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3724__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3724__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__29)));
        int o_testInstallRemoteWithMissingDependency_add3724__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__31)));
        String o_testInstallRemoteWithMissingDependency_add3724__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__33);
        String o_testInstallRemoteWithMissingDependency_add3724__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__34);
        int o_testInstallRemoteWithMissingDependency_add3724__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__35)));
        int o_testInstallRemoteWithMissingDependency_add3724__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3724__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3724__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__49)));
        int o_testInstallRemoteWithMissingDependency_add3724__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__51)));
        int o_testInstallRemoteWithMissingDependency_add3724__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__53)));
        String o_testInstallRemoteWithMissingDependency_add3724__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__55);
        String o_testInstallRemoteWithMissingDependency_add3724__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__56);
        String o_testInstallRemoteWithMissingDependency_add3724__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__57);
        int o_testInstallRemoteWithMissingDependency_add3724__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3724__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3724__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3724__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3724__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3723() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3723__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3723__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3723__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__15)));
        String o_testInstallRemoteWithMissingDependency_add3723__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__17);
        int o_testInstallRemoteWithMissingDependency_add3723__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3723__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3723__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__29)));
        int o_testInstallRemoteWithMissingDependency_add3723__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__31)));
        String o_testInstallRemoteWithMissingDependency_add3723__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__33);
        String o_testInstallRemoteWithMissingDependency_add3723__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__34);
        int o_testInstallRemoteWithMissingDependency_add3723__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__35)));
        int o_testInstallRemoteWithMissingDependency_add3723__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3723__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3723__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__49)));
        int o_testInstallRemoteWithMissingDependency_add3723__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__51)));
        int o_testInstallRemoteWithMissingDependency_add3723__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__53)));
        String o_testInstallRemoteWithMissingDependency_add3723__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__55);
        String o_testInstallRemoteWithMissingDependency_add3723__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__56);
        String o_testInstallRemoteWithMissingDependency_add3723__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__57);
        int o_testInstallRemoteWithMissingDependency_add3723__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3723__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3723__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3723__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3723__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3726() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3726__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3726__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getId());
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallRemoteWithMissingDependency_add3726__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__15)));
        String o_testInstallRemoteWithMissingDependency_add3726__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__17);
        int o_testInstallRemoteWithMissingDependency_add3726__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3726__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3726__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__29)));
        int o_testInstallRemoteWithMissingDependency_add3726__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__31)));
        String o_testInstallRemoteWithMissingDependency_add3726__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__33);
        String o_testInstallRemoteWithMissingDependency_add3726__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__34);
        int o_testInstallRemoteWithMissingDependency_add3726__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__35)));
        int o_testInstallRemoteWithMissingDependency_add3726__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3726__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3726__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__49)));
        int o_testInstallRemoteWithMissingDependency_add3726__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__51)));
        int o_testInstallRemoteWithMissingDependency_add3726__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__53)));
        String o_testInstallRemoteWithMissingDependency_add3726__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__55);
        String o_testInstallRemoteWithMissingDependency_add3726__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__56);
        String o_testInstallRemoteWithMissingDependency_add3726__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__57);
        int o_testInstallRemoteWithMissingDependency_add3726__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3726__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3726__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3726__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3726__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3725() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3725__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3725__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3725__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__14)));
        int o_testInstallRemoteWithMissingDependency_add3725__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__16)));
        String o_testInstallRemoteWithMissingDependency_add3725__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__18);
        int o_testInstallRemoteWithMissingDependency_add3725__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3725__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3725__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__30)));
        int o_testInstallRemoteWithMissingDependency_add3725__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__32)));
        String o_testInstallRemoteWithMissingDependency_add3725__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__34);
        String o_testInstallRemoteWithMissingDependency_add3725__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__35);
        int o_testInstallRemoteWithMissingDependency_add3725__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__36)));
        int o_testInstallRemoteWithMissingDependency_add3725__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3725__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3725__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__50)));
        int o_testInstallRemoteWithMissingDependency_add3725__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__52)));
        int o_testInstallRemoteWithMissingDependency_add3725__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__54)));
        String o_testInstallRemoteWithMissingDependency_add3725__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__56);
        String o_testInstallRemoteWithMissingDependency_add3725__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__57);
        String o_testInstallRemoteWithMissingDependency_add3725__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__58);
        int o_testInstallRemoteWithMissingDependency_add3725__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__14)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3725__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3725__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3725__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3725__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3717() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        plan.getTree();
        int o_testInstallRemoteWithMissingDependency_add3717__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3717__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3717__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__15)));
        String o_testInstallRemoteWithMissingDependency_add3717__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__17);
        int o_testInstallRemoteWithMissingDependency_add3717__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3717__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3717__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__29)));
        int o_testInstallRemoteWithMissingDependency_add3717__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__31)));
        String o_testInstallRemoteWithMissingDependency_add3717__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__33);
        String o_testInstallRemoteWithMissingDependency_add3717__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__34);
        int o_testInstallRemoteWithMissingDependency_add3717__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__35)));
        int o_testInstallRemoteWithMissingDependency_add3717__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3717__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3717__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__49)));
        int o_testInstallRemoteWithMissingDependency_add3717__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__51)));
        int o_testInstallRemoteWithMissingDependency_add3717__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__53)));
        String o_testInstallRemoteWithMissingDependency_add3717__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__55);
        String o_testInstallRemoteWithMissingDependency_add3717__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__56);
        String o_testInstallRemoteWithMissingDependency_add3717__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__57);
        int o_testInstallRemoteWithMissingDependency_add3717__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__4)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3717__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3717__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3717__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3717__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3716() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3716__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__3)));
        int o_testInstallRemoteWithMissingDependency_add3716__5 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__5)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3716__13 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3716__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__16)));
        String o_testInstallRemoteWithMissingDependency_add3716__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__18);
        int o_testInstallRemoteWithMissingDependency_add3716__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3716__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3716__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__30)));
        int o_testInstallRemoteWithMissingDependency_add3716__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__32)));
        String o_testInstallRemoteWithMissingDependency_add3716__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__34);
        String o_testInstallRemoteWithMissingDependency_add3716__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__35);
        int o_testInstallRemoteWithMissingDependency_add3716__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__36)));
        int o_testInstallRemoteWithMissingDependency_add3716__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3716__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3716__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__50)));
        int o_testInstallRemoteWithMissingDependency_add3716__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__52)));
        int o_testInstallRemoteWithMissingDependency_add3716__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__54)));
        String o_testInstallRemoteWithMissingDependency_add3716__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__56);
        String o_testInstallRemoteWithMissingDependency_add3716__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__57);
        String o_testInstallRemoteWithMissingDependency_add3716__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__58);
        int o_testInstallRemoteWithMissingDependency_add3716__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__3)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__5)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__13)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3716__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3716__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3716__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3716__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3719() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3719__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__3)));
        plan.getTree().iterator();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3719__13 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3719__16 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__16)));
        String o_testInstallRemoteWithMissingDependency_add3719__18 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__18);
        int o_testInstallRemoteWithMissingDependency_add3719__19 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__19)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3719__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3719__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__30)));
        int o_testInstallRemoteWithMissingDependency_add3719__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__32)));
        String o_testInstallRemoteWithMissingDependency_add3719__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__34);
        String o_testInstallRemoteWithMissingDependency_add3719__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__35);
        int o_testInstallRemoteWithMissingDependency_add3719__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__36)));
        int o_testInstallRemoteWithMissingDependency_add3719__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3719__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3719__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__50)));
        int o_testInstallRemoteWithMissingDependency_add3719__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__52)));
        int o_testInstallRemoteWithMissingDependency_add3719__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__54)));
        String o_testInstallRemoteWithMissingDependency_add3719__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__56);
        String o_testInstallRemoteWithMissingDependency_add3719__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__57);
        String o_testInstallRemoteWithMissingDependency_add3719__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__58);
        int o_testInstallRemoteWithMissingDependency_add3719__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__13)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__16)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__18);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__19)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3719__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3719__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3719__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3719__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3718() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3718__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__3)));
        ExtensionPlanNode o_testInstallRemoteWithMissingDependency_add3718__5 = plan.getTree().iterator().next();
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getType());
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3718__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3718__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__17)));
        String o_testInstallRemoteWithMissingDependency_add3718__19 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__19);
        int o_testInstallRemoteWithMissingDependency_add3718__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3718__28 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3718__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__31)));
        int o_testInstallRemoteWithMissingDependency_add3718__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__33)));
        String o_testInstallRemoteWithMissingDependency_add3718__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__35);
        String o_testInstallRemoteWithMissingDependency_add3718__36 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__36);
        int o_testInstallRemoteWithMissingDependency_add3718__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__37)));
        int o_testInstallRemoteWithMissingDependency_add3718__39 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__39)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3718__47 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3718__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__51)));
        int o_testInstallRemoteWithMissingDependency_add3718__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__53)));
        int o_testInstallRemoteWithMissingDependency_add3718__55 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__55)));
        String o_testInstallRemoteWithMissingDependency_add3718__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__57);
        String o_testInstallRemoteWithMissingDependency_add3718__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__58);
        String o_testInstallRemoteWithMissingDependency_add3718__59 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__59);
        int o_testInstallRemoteWithMissingDependency_add3718__60 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__60)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__3)));
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3718__5)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__17)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__19);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__20)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__31)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__33)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__35);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__36);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__37)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3718__39)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3718__47)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__53)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3718__55)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__58);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3718__59);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3753() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3753__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3753__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3753__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__14)));
        String o_testInstallRemoteWithMissingDependency_add3753__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__16);
        int o_testInstallRemoteWithMissingDependency_add3753__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3753__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3753__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__28)));
        int o_testInstallRemoteWithMissingDependency_add3753__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__30)));
        String o_testInstallRemoteWithMissingDependency_add3753__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__32);
        String o_testInstallRemoteWithMissingDependency_add3753__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__33);
        int o_testInstallRemoteWithMissingDependency_add3753__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__34)));
        int o_testInstallRemoteWithMissingDependency_add3753__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3753__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3753__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__48)));
        int o_testInstallRemoteWithMissingDependency_add3753__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__50)));
        int o_testInstallRemoteWithMissingDependency_add3753__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__52)));
        String o_testInstallRemoteWithMissingDependency_add3753__54 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__54);
        String o_testInstallRemoteWithMissingDependency_add3753__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__55);
        String o_testInstallRemoteWithMissingDependency_add3753__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__56);
        node.getChildren();
        int o_testInstallRemoteWithMissingDependency_add3753__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3753__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3753__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3753__52)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__54);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3753__56);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3752() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3752__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3752__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3752__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__14)));
        String o_testInstallRemoteWithMissingDependency_add3752__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__16);
        int o_testInstallRemoteWithMissingDependency_add3752__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3752__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3752__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__28)));
        int o_testInstallRemoteWithMissingDependency_add3752__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__30)));
        String o_testInstallRemoteWithMissingDependency_add3752__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__32);
        String o_testInstallRemoteWithMissingDependency_add3752__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__33);
        int o_testInstallRemoteWithMissingDependency_add3752__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__34)));
        int o_testInstallRemoteWithMissingDependency_add3752__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3752__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3752__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__48)));
        int o_testInstallRemoteWithMissingDependency_add3752__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__50)));
        int o_testInstallRemoteWithMissingDependency_add3752__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__52)));
        String o_testInstallRemoteWithMissingDependency_add3752__54 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__54);
        String o_testInstallRemoteWithMissingDependency_add3752__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__55);
        String o_testInstallRemoteWithMissingDependency_add3752__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__56);
        int o_testInstallRemoteWithMissingDependency_add3752__57 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__57)));
        int o_testInstallRemoteWithMissingDependency_add3752__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3752__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3752__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__52)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__54);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3752__56);
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3752__57)));
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3715() throws Throwable {
        ExtensionPlan o_testInstallRemoteWithMissingDependency_add3715__1 = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isRemote());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCanceled());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3715__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3715__12 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3715__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__15)));
        String o_testInstallRemoteWithMissingDependency_add3715__17 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__17);
        int o_testInstallRemoteWithMissingDependency_add3715__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3715__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3715__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__29)));
        int o_testInstallRemoteWithMissingDependency_add3715__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__31)));
        String o_testInstallRemoteWithMissingDependency_add3715__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__33);
        String o_testInstallRemoteWithMissingDependency_add3715__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__34);
        int o_testInstallRemoteWithMissingDependency_add3715__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__35)));
        int o_testInstallRemoteWithMissingDependency_add3715__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3715__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3715__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__49)));
        int o_testInstallRemoteWithMissingDependency_add3715__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__51)));
        int o_testInstallRemoteWithMissingDependency_add3715__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__53)));
        String o_testInstallRemoteWithMissingDependency_add3715__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__55);
        String o_testInstallRemoteWithMissingDependency_add3715__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__56);
        String o_testInstallRemoteWithMissingDependency_add3715__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__57);
        int o_testInstallRemoteWithMissingDependency_add3715__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__58)));
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isRemote());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add3715__1)).isCanceled());
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__4)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__12)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__15)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__17);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__18)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3715__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3715__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3715__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3715__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3749() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3749__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3749__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3749__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__14)));
        String o_testInstallRemoteWithMissingDependency_add3749__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__16);
        int o_testInstallRemoteWithMissingDependency_add3749__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3749__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3749__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__28)));
        int o_testInstallRemoteWithMissingDependency_add3749__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__30)));
        String o_testInstallRemoteWithMissingDependency_add3749__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__32);
        String o_testInstallRemoteWithMissingDependency_add3749__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__33);
        int o_testInstallRemoteWithMissingDependency_add3749__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__34)));
        int o_testInstallRemoteWithMissingDependency_add3749__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3749__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3749__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__48)));
        int o_testInstallRemoteWithMissingDependency_add3749__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__50)));
        int o_testInstallRemoteWithMissingDependency_add3749__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__52)));
        int o_testInstallRemoteWithMissingDependency_add3749__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__54)));
        String o_testInstallRemoteWithMissingDependency_add3749__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__56);
        String o_testInstallRemoteWithMissingDependency_add3749__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__57);
        String o_testInstallRemoteWithMissingDependency_add3749__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__58);
        int o_testInstallRemoteWithMissingDependency_add3749__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3749__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3749__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3749__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3749__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3742() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3742__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3742__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3742__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__14)));
        String o_testInstallRemoteWithMissingDependency_add3742__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__16);
        int o_testInstallRemoteWithMissingDependency_add3742__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3742__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3742__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__28)));
        int o_testInstallRemoteWithMissingDependency_add3742__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__30)));
        String o_testInstallRemoteWithMissingDependency_add3742__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__32);
        String o_testInstallRemoteWithMissingDependency_add3742__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__33);
        int o_testInstallRemoteWithMissingDependency_add3742__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__34)));
        int o_testInstallRemoteWithMissingDependency_add3742__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__36)));
        ExtensionPlanNode o_testInstallRemoteWithMissingDependency_add3742__38 = node.getChildren().iterator().next();
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getType());
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3742__47 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3742__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__51)));
        int o_testInstallRemoteWithMissingDependency_add3742__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__53)));
        int o_testInstallRemoteWithMissingDependency_add3742__55 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__55)));
        String o_testInstallRemoteWithMissingDependency_add3742__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__57);
        String o_testInstallRemoteWithMissingDependency_add3742__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__58);
        String o_testInstallRemoteWithMissingDependency_add3742__59 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__59);
        int o_testInstallRemoteWithMissingDependency_add3742__60 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__60)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3742__36)));
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3742__38)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3742__47)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__53)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3742__55)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__58);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3742__59);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3741() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3741__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3741__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3741__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__14)));
        String o_testInstallRemoteWithMissingDependency_add3741__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__16);
        int o_testInstallRemoteWithMissingDependency_add3741__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3741__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3741__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__28)));
        int o_testInstallRemoteWithMissingDependency_add3741__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__30)));
        String o_testInstallRemoteWithMissingDependency_add3741__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__32);
        String o_testInstallRemoteWithMissingDependency_add3741__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__33);
        node.getChildren();
        int o_testInstallRemoteWithMissingDependency_add3741__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__35)));
        int o_testInstallRemoteWithMissingDependency_add3741__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3741__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3741__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__49)));
        int o_testInstallRemoteWithMissingDependency_add3741__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__51)));
        int o_testInstallRemoteWithMissingDependency_add3741__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__53)));
        String o_testInstallRemoteWithMissingDependency_add3741__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__55);
        String o_testInstallRemoteWithMissingDependency_add3741__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__56);
        String o_testInstallRemoteWithMissingDependency_add3741__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__57);
        int o_testInstallRemoteWithMissingDependency_add3741__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3741__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3741__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3741__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3741__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3744() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3744__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3744__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3744__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__14)));
        String o_testInstallRemoteWithMissingDependency_add3744__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__16);
        int o_testInstallRemoteWithMissingDependency_add3744__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3744__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3744__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__28)));
        int o_testInstallRemoteWithMissingDependency_add3744__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__30)));
        String o_testInstallRemoteWithMissingDependency_add3744__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__32);
        String o_testInstallRemoteWithMissingDependency_add3744__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__33);
        int o_testInstallRemoteWithMissingDependency_add3744__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__34)));
        int o_testInstallRemoteWithMissingDependency_add3744__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__36)));
        node.getChildren();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3744__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3744__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__49)));
        int o_testInstallRemoteWithMissingDependency_add3744__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__51)));
        int o_testInstallRemoteWithMissingDependency_add3744__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__53)));
        String o_testInstallRemoteWithMissingDependency_add3744__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__55);
        String o_testInstallRemoteWithMissingDependency_add3744__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__56);
        String o_testInstallRemoteWithMissingDependency_add3744__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__57);
        int o_testInstallRemoteWithMissingDependency_add3744__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3744__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3744__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3744__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3744__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3743() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3743__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3743__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3743__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__14)));
        String o_testInstallRemoteWithMissingDependency_add3743__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__16);
        int o_testInstallRemoteWithMissingDependency_add3743__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3743__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3743__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__28)));
        int o_testInstallRemoteWithMissingDependency_add3743__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__30)));
        String o_testInstallRemoteWithMissingDependency_add3743__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__32);
        String o_testInstallRemoteWithMissingDependency_add3743__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__33);
        int o_testInstallRemoteWithMissingDependency_add3743__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__34)));
        int o_testInstallRemoteWithMissingDependency_add3743__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__36)));
        node.getChildren().iterator();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3743__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3743__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__50)));
        int o_testInstallRemoteWithMissingDependency_add3743__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__52)));
        int o_testInstallRemoteWithMissingDependency_add3743__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__54)));
        String o_testInstallRemoteWithMissingDependency_add3743__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__56);
        String o_testInstallRemoteWithMissingDependency_add3743__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__57);
        String o_testInstallRemoteWithMissingDependency_add3743__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__58);
        int o_testInstallRemoteWithMissingDependency_add3743__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3743__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3743__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3743__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3743__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3746() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3746__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3746__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3746__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__14)));
        String o_testInstallRemoteWithMissingDependency_add3746__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__16);
        int o_testInstallRemoteWithMissingDependency_add3746__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3746__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3746__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__28)));
        int o_testInstallRemoteWithMissingDependency_add3746__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__30)));
        String o_testInstallRemoteWithMissingDependency_add3746__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__32);
        String o_testInstallRemoteWithMissingDependency_add3746__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__33);
        int o_testInstallRemoteWithMissingDependency_add3746__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__34)));
        int o_testInstallRemoteWithMissingDependency_add3746__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3746__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3746__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__50)));
        int o_testInstallRemoteWithMissingDependency_add3746__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__52)));
        int o_testInstallRemoteWithMissingDependency_add3746__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__54)));
        String o_testInstallRemoteWithMissingDependency_add3746__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__56);
        String o_testInstallRemoteWithMissingDependency_add3746__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__57);
        String o_testInstallRemoteWithMissingDependency_add3746__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__58);
        int o_testInstallRemoteWithMissingDependency_add3746__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3746__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3746__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3746__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3746__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3745() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3745__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3745__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3745__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__14)));
        String o_testInstallRemoteWithMissingDependency_add3745__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__16);
        int o_testInstallRemoteWithMissingDependency_add3745__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3745__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3745__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__28)));
        int o_testInstallRemoteWithMissingDependency_add3745__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__30)));
        String o_testInstallRemoteWithMissingDependency_add3745__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__32);
        String o_testInstallRemoteWithMissingDependency_add3745__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__33);
        int o_testInstallRemoteWithMissingDependency_add3745__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__34)));
        int o_testInstallRemoteWithMissingDependency_add3745__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__36)));
        node = node.getChildren().iterator().next();
        node.getAction();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3745__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3745__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__49)));
        int o_testInstallRemoteWithMissingDependency_add3745__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__51)));
        int o_testInstallRemoteWithMissingDependency_add3745__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__53)));
        String o_testInstallRemoteWithMissingDependency_add3745__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__55);
        String o_testInstallRemoteWithMissingDependency_add3745__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__56);
        String o_testInstallRemoteWithMissingDependency_add3745__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__57);
        int o_testInstallRemoteWithMissingDependency_add3745__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3745__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3745__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3745__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3745__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3748() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3748__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3748__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3748__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__14)));
        String o_testInstallRemoteWithMissingDependency_add3748__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__16);
        int o_testInstallRemoteWithMissingDependency_add3748__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3748__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3748__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__28)));
        int o_testInstallRemoteWithMissingDependency_add3748__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__30)));
        String o_testInstallRemoteWithMissingDependency_add3748__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__32);
        String o_testInstallRemoteWithMissingDependency_add3748__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__33);
        int o_testInstallRemoteWithMissingDependency_add3748__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__34)));
        int o_testInstallRemoteWithMissingDependency_add3748__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3748__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getId());
        action.getAction();
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3748__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__49)));
        int o_testInstallRemoteWithMissingDependency_add3748__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__51)));
        int o_testInstallRemoteWithMissingDependency_add3748__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__53)));
        String o_testInstallRemoteWithMissingDependency_add3748__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__55);
        String o_testInstallRemoteWithMissingDependency_add3748__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__56);
        String o_testInstallRemoteWithMissingDependency_add3748__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__57);
        int o_testInstallRemoteWithMissingDependency_add3748__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3748__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3748__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3748__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3748__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3747() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3747__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3747__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3747__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__14)));
        String o_testInstallRemoteWithMissingDependency_add3747__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__16);
        int o_testInstallRemoteWithMissingDependency_add3747__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3747__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3747__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__28)));
        int o_testInstallRemoteWithMissingDependency_add3747__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__30)));
        String o_testInstallRemoteWithMissingDependency_add3747__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__32);
        String o_testInstallRemoteWithMissingDependency_add3747__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__33);
        int o_testInstallRemoteWithMissingDependency_add3747__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__34)));
        int o_testInstallRemoteWithMissingDependency_add3747__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3747__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3747__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__49)));
        int o_testInstallRemoteWithMissingDependency_add3747__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__51)));
        int o_testInstallRemoteWithMissingDependency_add3747__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__53)));
        String o_testInstallRemoteWithMissingDependency_add3747__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__55);
        String o_testInstallRemoteWithMissingDependency_add3747__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__56);
        String o_testInstallRemoteWithMissingDependency_add3747__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__57);
        int o_testInstallRemoteWithMissingDependency_add3747__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3747__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3747__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3747__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3747__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3751() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3751__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3751__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3751__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__14)));
        String o_testInstallRemoteWithMissingDependency_add3751__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__16);
        int o_testInstallRemoteWithMissingDependency_add3751__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3751__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3751__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__28)));
        int o_testInstallRemoteWithMissingDependency_add3751__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__30)));
        String o_testInstallRemoteWithMissingDependency_add3751__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__32);
        String o_testInstallRemoteWithMissingDependency_add3751__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__33);
        int o_testInstallRemoteWithMissingDependency_add3751__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__34)));
        int o_testInstallRemoteWithMissingDependency_add3751__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3751__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3751__48 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__48)));
        int o_testInstallRemoteWithMissingDependency_add3751__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__50)));
        int o_testInstallRemoteWithMissingDependency_add3751__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__52)));
        action.getNamespace();
        String o_testInstallRemoteWithMissingDependency_add3751__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__55);
        String o_testInstallRemoteWithMissingDependency_add3751__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__56);
        String o_testInstallRemoteWithMissingDependency_add3751__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__57);
        int o_testInstallRemoteWithMissingDependency_add3751__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3751__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3751__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__48)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3751__52)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3751__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3750() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3750__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3750__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3750__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__14)));
        String o_testInstallRemoteWithMissingDependency_add3750__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__16);
        int o_testInstallRemoteWithMissingDependency_add3750__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3750__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3750__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__28)));
        int o_testInstallRemoteWithMissingDependency_add3750__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__30)));
        String o_testInstallRemoteWithMissingDependency_add3750__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__32);
        String o_testInstallRemoteWithMissingDependency_add3750__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__33);
        int o_testInstallRemoteWithMissingDependency_add3750__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__34)));
        int o_testInstallRemoteWithMissingDependency_add3750__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__36)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3750__44 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getId());
        action.getAction();
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallRemoteWithMissingDependency_add3750__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__49)));
        int o_testInstallRemoteWithMissingDependency_add3750__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__51)));
        int o_testInstallRemoteWithMissingDependency_add3750__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__53)));
        String o_testInstallRemoteWithMissingDependency_add3750__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__55);
        String o_testInstallRemoteWithMissingDependency_add3750__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__56);
        String o_testInstallRemoteWithMissingDependency_add3750__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__57);
        int o_testInstallRemoteWithMissingDependency_add3750__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3750__36)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3750__44)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3750__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3750__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3739() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3739__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3739__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3739__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__14)));
        String o_testInstallRemoteWithMissingDependency_add3739__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__16);
        int o_testInstallRemoteWithMissingDependency_add3739__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3739__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3739__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__28)));
        int o_testInstallRemoteWithMissingDependency_add3739__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__30)));
        action.getNamespace();
        String o_testInstallRemoteWithMissingDependency_add3739__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__33);
        String o_testInstallRemoteWithMissingDependency_add3739__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__34);
        int o_testInstallRemoteWithMissingDependency_add3739__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__35)));
        int o_testInstallRemoteWithMissingDependency_add3739__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3739__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3739__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__49)));
        int o_testInstallRemoteWithMissingDependency_add3739__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__51)));
        int o_testInstallRemoteWithMissingDependency_add3739__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__53)));
        String o_testInstallRemoteWithMissingDependency_add3739__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__55);
        String o_testInstallRemoteWithMissingDependency_add3739__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__56);
        String o_testInstallRemoteWithMissingDependency_add3739__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__57);
        int o_testInstallRemoteWithMissingDependency_add3739__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3739__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3739__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3739__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3739__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3738() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3738__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3738__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3738__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__14)));
        String o_testInstallRemoteWithMissingDependency_add3738__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__16);
        int o_testInstallRemoteWithMissingDependency_add3738__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3738__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getId());
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallRemoteWithMissingDependency_add3738__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__29)));
        int o_testInstallRemoteWithMissingDependency_add3738__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__31)));
        String o_testInstallRemoteWithMissingDependency_add3738__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__33);
        String o_testInstallRemoteWithMissingDependency_add3738__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__34);
        int o_testInstallRemoteWithMissingDependency_add3738__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__35)));
        int o_testInstallRemoteWithMissingDependency_add3738__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3738__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3738__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__49)));
        int o_testInstallRemoteWithMissingDependency_add3738__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__51)));
        int o_testInstallRemoteWithMissingDependency_add3738__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__53)));
        String o_testInstallRemoteWithMissingDependency_add3738__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__55);
        String o_testInstallRemoteWithMissingDependency_add3738__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__56);
        String o_testInstallRemoteWithMissingDependency_add3738__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__57);
        int o_testInstallRemoteWithMissingDependency_add3738__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3738__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3738__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3738__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3738__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3731() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3731__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3731__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3731__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__14)));
        String o_testInstallRemoteWithMissingDependency_add3731__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__16);
        int o_testInstallRemoteWithMissingDependency_add3731__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__17)));
        node.getChildren().iterator();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3731__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3731__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__30)));
        int o_testInstallRemoteWithMissingDependency_add3731__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__32)));
        String o_testInstallRemoteWithMissingDependency_add3731__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__34);
        String o_testInstallRemoteWithMissingDependency_add3731__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__35);
        int o_testInstallRemoteWithMissingDependency_add3731__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__36)));
        int o_testInstallRemoteWithMissingDependency_add3731__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3731__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3731__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__50)));
        int o_testInstallRemoteWithMissingDependency_add3731__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__52)));
        int o_testInstallRemoteWithMissingDependency_add3731__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__54)));
        String o_testInstallRemoteWithMissingDependency_add3731__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__56);
        String o_testInstallRemoteWithMissingDependency_add3731__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__57);
        String o_testInstallRemoteWithMissingDependency_add3731__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__58);
        int o_testInstallRemoteWithMissingDependency_add3731__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3731__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3731__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3731__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3731__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3730() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3730__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3730__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3730__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__14)));
        String o_testInstallRemoteWithMissingDependency_add3730__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__16);
        int o_testInstallRemoteWithMissingDependency_add3730__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__17)));
        ExtensionPlanNode o_testInstallRemoteWithMissingDependency_add3730__19 = node.getChildren().iterator().next();
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getValue());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getType());
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3730__28 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3730__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__31)));
        int o_testInstallRemoteWithMissingDependency_add3730__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__33)));
        String o_testInstallRemoteWithMissingDependency_add3730__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__35);
        String o_testInstallRemoteWithMissingDependency_add3730__36 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__36);
        int o_testInstallRemoteWithMissingDependency_add3730__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__37)));
        int o_testInstallRemoteWithMissingDependency_add3730__39 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__39)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3730__47 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3730__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__51)));
        int o_testInstallRemoteWithMissingDependency_add3730__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__53)));
        int o_testInstallRemoteWithMissingDependency_add3730__55 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__55)));
        String o_testInstallRemoteWithMissingDependency_add3730__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__57);
        String o_testInstallRemoteWithMissingDependency_add3730__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__58);
        String o_testInstallRemoteWithMissingDependency_add3730__59 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__59);
        int o_testInstallRemoteWithMissingDependency_add3730__60 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__60)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__17)));
        Assert.assertEquals("version", ((Version) (((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getVersion())).getValue());
        Assert.assertTrue(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("version", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getInitialVersionConstraint())).getValue());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtension());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getName());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallRemoteWithMissingDependency_add3730__19)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__31)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__33)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__35);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__36);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__37)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3730__39)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3730__47)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__53)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3730__55)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__58);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3730__59);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3733() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3733__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3733__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3733__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__14)));
        String o_testInstallRemoteWithMissingDependency_add3733__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__16);
        int o_testInstallRemoteWithMissingDependency_add3733__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__17)));
        node = node.getChildren().iterator().next();
        node.getAction();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3733__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3733__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__29)));
        int o_testInstallRemoteWithMissingDependency_add3733__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__31)));
        String o_testInstallRemoteWithMissingDependency_add3733__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__33);
        String o_testInstallRemoteWithMissingDependency_add3733__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__34);
        int o_testInstallRemoteWithMissingDependency_add3733__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__35)));
        int o_testInstallRemoteWithMissingDependency_add3733__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3733__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3733__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__49)));
        int o_testInstallRemoteWithMissingDependency_add3733__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__51)));
        int o_testInstallRemoteWithMissingDependency_add3733__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__53)));
        String o_testInstallRemoteWithMissingDependency_add3733__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__55);
        String o_testInstallRemoteWithMissingDependency_add3733__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__56);
        String o_testInstallRemoteWithMissingDependency_add3733__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__57);
        int o_testInstallRemoteWithMissingDependency_add3733__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3733__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3733__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3733__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3733__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3732() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3732__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3732__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3732__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__14)));
        String o_testInstallRemoteWithMissingDependency_add3732__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__16);
        int o_testInstallRemoteWithMissingDependency_add3732__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__17)));
        node.getChildren();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3732__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3732__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__29)));
        int o_testInstallRemoteWithMissingDependency_add3732__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__31)));
        String o_testInstallRemoteWithMissingDependency_add3732__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__33);
        String o_testInstallRemoteWithMissingDependency_add3732__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__34);
        int o_testInstallRemoteWithMissingDependency_add3732__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__35)));
        int o_testInstallRemoteWithMissingDependency_add3732__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3732__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3732__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__49)));
        int o_testInstallRemoteWithMissingDependency_add3732__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__51)));
        int o_testInstallRemoteWithMissingDependency_add3732__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__53)));
        String o_testInstallRemoteWithMissingDependency_add3732__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__55);
        String o_testInstallRemoteWithMissingDependency_add3732__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__56);
        String o_testInstallRemoteWithMissingDependency_add3732__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__57);
        int o_testInstallRemoteWithMissingDependency_add3732__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3732__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3732__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3732__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3732__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3735() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3735__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3735__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3735__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__14)));
        String o_testInstallRemoteWithMissingDependency_add3735__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__16);
        int o_testInstallRemoteWithMissingDependency_add3735__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3735__26 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3735__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__29)));
        int o_testInstallRemoteWithMissingDependency_add3735__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__31)));
        String o_testInstallRemoteWithMissingDependency_add3735__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__33);
        String o_testInstallRemoteWithMissingDependency_add3735__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__34);
        int o_testInstallRemoteWithMissingDependency_add3735__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__35)));
        int o_testInstallRemoteWithMissingDependency_add3735__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3735__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3735__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__49)));
        int o_testInstallRemoteWithMissingDependency_add3735__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__51)));
        int o_testInstallRemoteWithMissingDependency_add3735__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__53)));
        String o_testInstallRemoteWithMissingDependency_add3735__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__55);
        String o_testInstallRemoteWithMissingDependency_add3735__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__56);
        String o_testInstallRemoteWithMissingDependency_add3735__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__57);
        int o_testInstallRemoteWithMissingDependency_add3735__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__26)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3735__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3735__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3735__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3735__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3734() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3734__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3734__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3734__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__14)));
        String o_testInstallRemoteWithMissingDependency_add3734__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__16);
        int o_testInstallRemoteWithMissingDependency_add3734__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3734__27 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3734__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__30)));
        int o_testInstallRemoteWithMissingDependency_add3734__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__32)));
        String o_testInstallRemoteWithMissingDependency_add3734__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__34);
        String o_testInstallRemoteWithMissingDependency_add3734__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__35);
        int o_testInstallRemoteWithMissingDependency_add3734__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__36)));
        int o_testInstallRemoteWithMissingDependency_add3734__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3734__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3734__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__50)));
        int o_testInstallRemoteWithMissingDependency_add3734__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__52)));
        int o_testInstallRemoteWithMissingDependency_add3734__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__54)));
        String o_testInstallRemoteWithMissingDependency_add3734__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__56);
        String o_testInstallRemoteWithMissingDependency_add3734__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__57);
        String o_testInstallRemoteWithMissingDependency_add3734__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__58);
        int o_testInstallRemoteWithMissingDependency_add3734__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__27)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3734__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3734__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3734__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3734__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3737() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3737__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3737__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3737__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__14)));
        String o_testInstallRemoteWithMissingDependency_add3737__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__16);
        int o_testInstallRemoteWithMissingDependency_add3737__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3737__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3737__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__28)));
        int o_testInstallRemoteWithMissingDependency_add3737__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__30)));
        int o_testInstallRemoteWithMissingDependency_add3737__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__32)));
        String o_testInstallRemoteWithMissingDependency_add3737__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__34);
        String o_testInstallRemoteWithMissingDependency_add3737__35 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__35);
        int o_testInstallRemoteWithMissingDependency_add3737__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__36)));
        int o_testInstallRemoteWithMissingDependency_add3737__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3737__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3737__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__50)));
        int o_testInstallRemoteWithMissingDependency_add3737__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__52)));
        int o_testInstallRemoteWithMissingDependency_add3737__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__54)));
        String o_testInstallRemoteWithMissingDependency_add3737__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__56);
        String o_testInstallRemoteWithMissingDependency_add3737__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__57);
        String o_testInstallRemoteWithMissingDependency_add3737__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__58);
        int o_testInstallRemoteWithMissingDependency_add3737__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__30)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__32)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__34);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__35);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3737__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3737__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3737__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3737__58);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3736() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3736__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3736__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3736__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__14)));
        String o_testInstallRemoteWithMissingDependency_add3736__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__16);
        int o_testInstallRemoteWithMissingDependency_add3736__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3736__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3736__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__29)));
        int o_testInstallRemoteWithMissingDependency_add3736__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__31)));
        String o_testInstallRemoteWithMissingDependency_add3736__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__33);
        String o_testInstallRemoteWithMissingDependency_add3736__34 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__34);
        int o_testInstallRemoteWithMissingDependency_add3736__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__35)));
        int o_testInstallRemoteWithMissingDependency_add3736__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3736__45 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3736__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__49)));
        int o_testInstallRemoteWithMissingDependency_add3736__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__51)));
        int o_testInstallRemoteWithMissingDependency_add3736__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__53)));
        String o_testInstallRemoteWithMissingDependency_add3736__55 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__55);
        String o_testInstallRemoteWithMissingDependency_add3736__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__56);
        String o_testInstallRemoteWithMissingDependency_add3736__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__57);
        int o_testInstallRemoteWithMissingDependency_add3736__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__58)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__31)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__33);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__34);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3736__37)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3736__45)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3736__53)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__55);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3736__57);
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add3740() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add3740__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3740__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3740__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__14)));
        String o_testInstallRemoteWithMissingDependency_add3740__16 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__16);
        int o_testInstallRemoteWithMissingDependency_add3740__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3740__25 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getId());
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3740__28 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__28)));
        int o_testInstallRemoteWithMissingDependency_add3740__30 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__30)));
        String o_testInstallRemoteWithMissingDependency_add3740__32 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__32);
        String o_testInstallRemoteWithMissingDependency_add3740__33 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__33);
        int o_testInstallRemoteWithMissingDependency_add3740__34 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__34)));
        int o_testInstallRemoteWithMissingDependency_add3740__36 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__36)));
        int o_testInstallRemoteWithMissingDependency_add3740__38 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__38)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallRemoteWithMissingDependency_add3740__46 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add3740__50 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__50)));
        int o_testInstallRemoteWithMissingDependency_add3740__52 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__52)));
        int o_testInstallRemoteWithMissingDependency_add3740__54 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__54)));
        String o_testInstallRemoteWithMissingDependency_add3740__56 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__56);
        String o_testInstallRemoteWithMissingDependency_add3740__57 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__57);
        String o_testInstallRemoteWithMissingDependency_add3740__58 = action.getNamespace();
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__58);
        int o_testInstallRemoteWithMissingDependency_add3740__59 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__59)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getVersion())).getValue());
        Assert.assertEquals(1762496466, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).hashCode())));
        Assert.assertEquals("rwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__14)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__16);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__17)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getVersion())).getValue());
        Assert.assertEquals(-662420310, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).hashCode())));
        Assert.assertEquals("installedwithmissingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__28)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__30)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__32);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__33);
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__34)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__36)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add3740__38)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getVersion())).getValue());
        Assert.assertEquals(1182936298, ((int) (((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).hashCode())));
        Assert.assertEquals("missingdependency", ((ExtensionId) (o_testInstallRemoteWithMissingDependency_add3740__46)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__50)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__52)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add3740__54)));
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__56);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__57);
        Assert.assertNull(o_testInstallRemoteWithMissingDependency_add3740__58);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add560() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add560__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add560__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add560__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add560__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add560__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add560__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__20)));
        node.getChildren();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add560__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add560__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add560__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add560__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add560__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add560__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add560__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add560__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add560__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add560__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add560__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add560__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add560__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString540() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "nTmespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__19 = action.getNamespace();
        Assert.assertEquals("nTmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__36 = action.getNamespace();
        Assert.assertEquals("nTmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__37 = action.getNamespace();
        Assert.assertEquals("nTmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__17)));
        Assert.assertEquals("nTmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__34)));
        Assert.assertEquals("nTmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__36);
        Assert.assertEquals("nTmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString540__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add567() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add567__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add567__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add567__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add567__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add567__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add567__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add567__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add567__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_add567__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__34)));
        action.getNamespace();
        String o_testInstallWithStrictRecommendedManagedDependency_add567__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add567__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add567__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add567__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add567__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add567__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add567__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add567__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add567__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add567__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add568() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add568__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add568__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add568__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add568__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add568__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add568__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add568__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add568__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_add568__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_add568__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add568__36);
        String o_testInstallWithStrictRecommendedManagedDependency_add568__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add568__37);
        int o_testInstallWithStrictRecommendedManagedDependency_add568__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__38)));
        int o_testInstallWithStrictRecommendedManagedDependency_add568__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add568__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add568__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add568__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add568__37);
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add568__38)));
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add565() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add565__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add565__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add565__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add565__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add565__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add565__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add565__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add565__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_add565__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add565__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add565__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add565__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add565__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add565__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add565__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add565__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add565__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add565__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add565__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add565__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add566() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add566__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add566__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add566__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add566__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add566__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add566__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add566__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__28)).getId());
        action.getAction();
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallWithStrictRecommendedManagedDependency_add566__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add566__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add566__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add566__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add566__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add566__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add566__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add566__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add566__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add566__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add566__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add566__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add563() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add563__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add563__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add563__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add563__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add563__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add563__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add563__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add563__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add563__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add563__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add563__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add563__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add563__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add563__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add563__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add563__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add563__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add563__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add563__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add564() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add564__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add564__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add564__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add564__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add564__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add564__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add564__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__28)).getId());
        action.getAction();
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add564__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add564__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add564__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add564__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add564__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add564__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add564__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add564__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add564__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add564__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add564__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add564__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add561() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add561__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add561__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add561__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add561__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add561__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add561__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__20)));
        node = node.getChildren().iterator().next();
        node.getAction();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add561__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add561__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add561__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add561__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add561__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add561__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add561__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add561__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add561__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add561__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add561__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add561__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add561__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add562() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add562__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add562__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add562__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add562__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add562__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add562__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add562__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add562__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add562__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add562__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add562__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add562__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add562__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add562__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add562__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add562__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add562__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add562__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add562__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add569() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add569__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add569__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add569__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add569__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add569__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add569__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add569__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add569__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_add569__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_add569__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add569__36);
        String o_testInstallWithStrictRecommendedManagedDependency_add569__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add569__37);
        node.getChildren();
        int o_testInstallWithStrictRecommendedManagedDependency_add569__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add569__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add569__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add569__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add569__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add569__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString533() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrae/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString533__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString532() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgr?ade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString532__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString535() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "c,Gpt|))9");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__19 = action.getNamespace();
        Assert.assertEquals("c,Gpt|))9", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__36 = action.getNamespace();
        Assert.assertEquals("c,Gpt|))9", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__37 = action.getNamespace();
        Assert.assertEquals("c,Gpt|))9", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__17)));
        Assert.assertEquals("c,Gpt|))9", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__34)));
        Assert.assertEquals("c,Gpt|))9", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__36);
        Assert.assertEquals("c,Gpt|))9", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString535__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_remove570() throws Throwable {
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_remove570__3 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__3)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_remove570__11 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__11)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__11)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__11)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_remove570__14 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__14)));
        String o_testInstallWithStrictRecommendedManagedDependency_remove570__16 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_remove570__16);
        int o_testInstallWithStrictRecommendedManagedDependency_remove570__17 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__17)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_remove570__25 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__25)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__25)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__25)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_remove570__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__29)));
        int o_testInstallWithStrictRecommendedManagedDependency_remove570__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__31)));
        String o_testInstallWithStrictRecommendedManagedDependency_remove570__33 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_remove570__33);
        String o_testInstallWithStrictRecommendedManagedDependency_remove570__34 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_remove570__34);
        int o_testInstallWithStrictRecommendedManagedDependency_remove570__35 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__35)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__3)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__11)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__11)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__11)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__14)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_remove570__16);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__17)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__25)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__25)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_remove570__25)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__29)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_remove570__31)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_remove570__33);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_remove570__34);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString530() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString530__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add556() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add556__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add556__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add556__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add556__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add556__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add556__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__20)));
        int o_testInstallWithStrictRecommendedManagedDependency_add556__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add556__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add556__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add556__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add556__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add556__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add556__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add556__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add556__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add556__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__20)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add556__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add556__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add556__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add556__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add557() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add557__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add557__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add557__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add557__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add557__19);
        node.getChildren();
        int o_testInstallWithStrictRecommendedManagedDependency_add557__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add557__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add557__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add557__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add557__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add557__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add557__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add557__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add557__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add557__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add557__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add557__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add557__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add557__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add554() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add554__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add554__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__14)).getId());
        action.getAction();
        action.getPreviousExtensions();
        int o_testInstallWithStrictRecommendedManagedDependency_add554__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add554__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add554__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add554__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add554__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add554__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add554__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add554__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add554__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add554__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add554__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add554__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add554__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add554__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add554__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add554__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add554__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add555() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add555__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add555__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add555__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__17)));
        action.getNamespace();
        String o_testInstallWithStrictRecommendedManagedDependency_add555__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add555__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add555__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add555__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add555__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add555__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add555__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add555__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add555__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add555__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add555__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add555__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add555__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add555__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add555__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add555__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString537() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "Should not be allowed to install [");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__19 = action.getNamespace();
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__36 = action.getNamespace();
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__37 = action.getNamespace();
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__17)));
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__34)));
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__36);
        Assert.assertEquals("Should not be allowed to install [", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString537__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add552() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add552__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add552__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__14)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add552__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add552__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add552__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add552__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add552__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add552__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add552__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add552__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add552__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add552__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add552__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add552__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add552__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add552__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add552__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add552__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add552__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString536() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__19 = action.getNamespace();
        Assert.assertEquals("", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__36 = action.getNamespace();
        Assert.assertEquals("", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__37 = action.getNamespace();
        Assert.assertEquals("", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__17)));
        Assert.assertEquals("", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__34)));
        Assert.assertEquals("", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__36);
        Assert.assertEquals("", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString536__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add553() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add553__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add553__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add553__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__17)));
        int o_testInstallWithStrictRecommendedManagedDependency_add553__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__19)));
        String o_testInstallWithStrictRecommendedManagedDependency_add553__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add553__21);
        int o_testInstallWithStrictRecommendedManagedDependency_add553__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add553__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add553__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add553__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add553__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add553__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add553__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add553__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add553__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__17)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__19)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add553__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add553__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add553__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add553__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add553__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString539() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "nmespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__19 = action.getNamespace();
        Assert.assertEquals("nmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__36 = action.getNamespace();
        Assert.assertEquals("nmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__37 = action.getNamespace();
        Assert.assertEquals("nmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__17)));
        Assert.assertEquals("nmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__34)));
        Assert.assertEquals("nmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__36);
        Assert.assertEquals("nmespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString539__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add550() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add550__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add550__16 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__16)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__16)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add550__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__19)));
        String o_testInstallWithStrictRecommendedManagedDependency_add550__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add550__21);
        int o_testInstallWithStrictRecommendedManagedDependency_add550__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add550__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add550__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add550__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add550__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add550__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add550__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add550__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add550__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__16)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__16)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__19)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add550__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add550__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add550__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add550__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add550__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString538() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "nameskpace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__19 = action.getNamespace();
        Assert.assertEquals("nameskpace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__36 = action.getNamespace();
        Assert.assertEquals("nameskpace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__37 = action.getNamespace();
        Assert.assertEquals("nameskpace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__17)));
        Assert.assertEquals("nameskpace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__34)));
        Assert.assertEquals("nameskpace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__36);
        Assert.assertEquals("nameskpace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString538__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add551() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add551__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add551__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__15)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add551__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add551__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add551__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add551__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add551__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add551__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add551__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add551__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add551__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add551__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add551__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add551__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add551__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add551__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add551__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add551__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add551__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add558() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add558__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add558__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add558__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add558__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add558__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add558__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__20)));
        ExtensionPlanNode o_testInstallWithStrictRecommendedManagedDependency_add558__22 = node.getChildren().iterator().next();
        Assert.assertNull(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getInitialVersionConstraint())).getVersion());
        Assert.assertFalse(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("[2.0]", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getType());
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add558__31 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__31)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__31)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add558__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__35)));
        int o_testInstallWithStrictRecommendedManagedDependency_add558__37 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__37)));
        String o_testInstallWithStrictRecommendedManagedDependency_add558__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add558__39);
        String o_testInstallWithStrictRecommendedManagedDependency_add558__40 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add558__40);
        int o_testInstallWithStrictRecommendedManagedDependency_add558__41 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__41)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add558__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__20)));
        Assert.assertNull(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getInitialVersionConstraint())).getVersion());
        Assert.assertFalse(((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getInitialVersionConstraint())).getRanges().isEmpty());
        Assert.assertEquals("[2.0]", ((VersionConstraint) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getInitialVersionConstraint())).getValue());
        Assert.assertTrue(((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add558__22)).getAction())).getExtension())).getType());
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__31)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add558__31)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__35)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add558__37)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add558__39);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add558__40);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add559() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add559__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add559__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add559__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_add559__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add559__19);
        int o_testInstallWithStrictRecommendedManagedDependency_add559__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__20)));
        node.getChildren().iterator();
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add559__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add559__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add559__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add559__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add559__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add559__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add559__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add559__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add559__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__20)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add559__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add559__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add559__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add559__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependencynull571() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty(null, "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependencynull571__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependencynull571__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependencynull571__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__17)));
        String o_testInstallWithStrictRecommendedManagedDependencynull571__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull571__19);
        int o_testInstallWithStrictRecommendedManagedDependencynull571__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependencynull571__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependencynull571__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__32)));
        int o_testInstallWithStrictRecommendedManagedDependencynull571__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__34)));
        String o_testInstallWithStrictRecommendedManagedDependencynull571__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull571__36);
        String o_testInstallWithStrictRecommendedManagedDependencynull571__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull571__37);
        int o_testInstallWithStrictRecommendedManagedDependencynull571__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull571__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull571__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull571__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull571__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull571__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependencynull572() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", null);
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependencynull572__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependencynull572__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependencynull572__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__17)));
        String o_testInstallWithStrictRecommendedManagedDependencynull572__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull572__19);
        int o_testInstallWithStrictRecommendedManagedDependencynull572__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependencynull572__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependencynull572__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__32)));
        int o_testInstallWithStrictRecommendedManagedDependencynull572__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__34)));
        String o_testInstallWithStrictRecommendedManagedDependencynull572__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull572__36);
        String o_testInstallWithStrictRecommendedManagedDependencynull572__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull572__37);
        int o_testInstallWithStrictRecommendedManagedDependencynull572__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull572__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependencynull572__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependencynull572__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull572__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependencynull572__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString524() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("Should not be allowed to install [", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString524__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString523() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString523__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add545() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        plan.getTree();
        int o_testInstallWithStrictRecommendedManagedDependency_add545__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add545__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__15)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add545__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add545__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add545__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add545__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add545__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add545__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add545__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add545__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add545__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add545__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add545__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add545__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__7)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add545__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add545__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add545__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add545__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add545__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString529() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[z.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString529__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add546() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add546__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__6)));
        ExtensionPlanNode o_testInstallWithStrictRecommendedManagedDependency_add546__8 = plan.getTree().iterator().next();
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getType());
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add546__17 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__17)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__17)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add546__20 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__20)));
        String o_testInstallWithStrictRecommendedManagedDependency_add546__22 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add546__22);
        int o_testInstallWithStrictRecommendedManagedDependency_add546__23 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__23)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add546__31 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__31)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__31)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add546__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__35)));
        int o_testInstallWithStrictRecommendedManagedDependency_add546__37 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__37)));
        String o_testInstallWithStrictRecommendedManagedDependency_add546__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add546__39);
        String o_testInstallWithStrictRecommendedManagedDependency_add546__40 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add546__40);
        int o_testInstallWithStrictRecommendedManagedDependency_add546__41 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__41)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__6)));
        Assert.assertNull(((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getInitialVersionConstraint());
        Assert.assertFalse(((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getChildren().isEmpty());
        Assert.assertNull(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getPreviousExtension());
        Assert.assertEquals("namespace", ((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getNamespace());
        Assert.assertTrue(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getPreviousExtensions().isEmpty());
        Assert.assertFalse(((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).isDependency());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getRewrittenExtension())).getType());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getExtensionFeatures().isEmpty());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getLicenses().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getSummary());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getDescription());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getWebSite());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getAuthors().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getAllowedNamespaces());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getDependencies().isEmpty());
        Assert.assertFalse(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getManagedDependencies().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getScm());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getIssueManagement());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getCategory());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getRepositories().isEmpty());
        Assert.assertNull(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getName());
        Assert.assertTrue(((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getProperties().isEmpty());
        Assert.assertEquals("test", ((Extension) (((ExtensionPlanAction) (((DefaultExtensionPlanNode) (o_testInstallWithStrictRecommendedManagedDependency_add546__8)).getAction())).getExtension())).getType());
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__17)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__17)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__20)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add546__22);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__23)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__31)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add546__31)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__35)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add546__37)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add546__39);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add546__40);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add543() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan o_testInstallWithStrictRecommendedManagedDependency_add543__4 = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isRemote());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isCanceled());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add543__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add543__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__15)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add543__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add543__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add543__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add543__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add543__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add543__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add543__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add543__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add543__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add543__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add543__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add543__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__39)));
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getActions().isEmpty());
        Assert.assertFalse(((Collection) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getTree())).isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getError());
        Assert.assertTrue(((Collection) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getLog())).isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isRemote());
        Assert.assertFalse(((Collection) (((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).getPropertyNames())).isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getRequest())).getId());
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((Collection) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getRootStep())).getChildren())).isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getProgress())).getOffset())), 0.1);
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithStrictRecommendedManagedDependency_add543__4)).isCanceled());
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__7)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add543__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add543__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add543__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add543__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add543__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add544() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add544__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__6)));
        int o_testInstallWithStrictRecommendedManagedDependency_add544__8 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__8)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add544__16 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__16)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__16)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add544__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__19)));
        String o_testInstallWithStrictRecommendedManagedDependency_add544__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add544__21);
        int o_testInstallWithStrictRecommendedManagedDependency_add544__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add544__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add544__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add544__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add544__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add544__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add544__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add544__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add544__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__6)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__8)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__16)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__16)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__19)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add544__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add544__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add544__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add544__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add544__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString526() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommen3edVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString526__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add541() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add541__9 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__9)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add541__17 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__17)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__17)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add541__20 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__20)));
        String o_testInstallWithStrictRecommendedManagedDependency_add541__22 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add541__22);
        int o_testInstallWithStrictRecommendedManagedDependency_add541__23 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__23)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add541__31 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__31)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__31)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add541__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__35)));
        int o_testInstallWithStrictRecommendedManagedDependency_add541__37 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__37)));
        String o_testInstallWithStrictRecommendedManagedDependency_add541__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add541__39);
        String o_testInstallWithStrictRecommendedManagedDependency_add541__40 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add541__40);
        int o_testInstallWithStrictRecommendedManagedDependency_add541__41 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__41)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__9)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__17)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__17)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__17)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__20)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add541__22);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__23)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__31)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__31)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add541__31)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__35)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add541__37)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add541__39);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add541__40);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString525() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString525__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add542() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension();
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add542__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add542__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__15)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add542__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add542__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add542__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add542__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add542__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add542__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add542__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add542__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add542__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add542__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add542__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add542__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__7)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add542__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add542__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add542__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add542__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add542__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString528() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("J?h!JO]:k0[.fsy!3xx.!@zP!:O>{/-1-%6", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString528__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_literalMutationString527() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extenRsion.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__17 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__17)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__19 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__19);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__20 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__20)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28 = action.getExtension().getId();
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__32 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__32)));
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__34)));
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__36 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__36);
        String o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__37);
        int o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__38 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__38)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__14)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__17)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__19);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__20)));
        Assert.assertEquals("1.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28)).getVersion())).getValue());
        Assert.assertEquals(1056118494, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__28)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__32)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__34)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__36);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_literalMutationString527__37);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add549() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add549__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__6)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        node.getAction();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add549__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__15)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add549__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add549__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add549__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add549__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add549__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add549__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add549__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add549__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add549__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add549__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add549__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add549__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add549__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add549__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add549__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add549__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add549__38);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add547() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add547__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__6)));
        plan.getTree().iterator();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add547__16 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__16)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__16)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add547__19 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__19)));
        String o_testInstallWithStrictRecommendedManagedDependency_add547__21 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add547__21);
        int o_testInstallWithStrictRecommendedManagedDependency_add547__22 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__22)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add547__30 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__30)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add547__34 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__34)));
        int o_testInstallWithStrictRecommendedManagedDependency_add547__36 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__36)));
        String o_testInstallWithStrictRecommendedManagedDependency_add547__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add547__38);
        String o_testInstallWithStrictRecommendedManagedDependency_add547__39 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add547__39);
        int o_testInstallWithStrictRecommendedManagedDependency_add547__40 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__40)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__16)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__16)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__16)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__19)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add547__21);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__22)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__30)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__30)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add547__30)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__34)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add547__36)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add547__38);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add547__39);
    }

    @Test(timeout = 10000)
    public void testInstallWithStrictRecommendedManagedDependency_add548() throws Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/[2.0]");
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithStrictRecommendedManagedDependency_add548__6 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__6)));
        plan.getTree();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add548__15 = action.getExtension().getId();
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__15)).getId());
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add548__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__18)));
        String o_testInstallWithStrictRecommendedManagedDependency_add548__20 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add548__20);
        int o_testInstallWithStrictRecommendedManagedDependency_add548__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        ExtensionId o_testInstallWithStrictRecommendedManagedDependency_add548__29 = action.getExtension().getId();
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__29)).getId());
        action.getAction();
        action.getAction();
        int o_testInstallWithStrictRecommendedManagedDependency_add548__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__33)));
        int o_testInstallWithStrictRecommendedManagedDependency_add548__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__35)));
        String o_testInstallWithStrictRecommendedManagedDependency_add548__37 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add548__37);
        String o_testInstallWithStrictRecommendedManagedDependency_add548__38 = action.getNamespace();
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add548__38);
        int o_testInstallWithStrictRecommendedManagedDependency_add548__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__39)));
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__6)));
        Assert.assertEquals("version", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__15)).getVersion())).getValue());
        Assert.assertEquals(1850860140, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__15)).hashCode())));
        Assert.assertEquals("rwithmanageddependency", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__15)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__18)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add548__20);
        Assert.assertEquals(1, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__21)));
        Assert.assertEquals("2.0", ((Version) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__29)).getVersion())).getValue());
        Assert.assertEquals(1056118531, ((int) (((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__29)).hashCode())));
        Assert.assertEquals("upgrade", ((ExtensionId) (o_testInstallWithStrictRecommendedManagedDependency_add548__29)).getId());
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithStrictRecommendedManagedDependency_add548__35)));
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add548__37);
        Assert.assertEquals("namespace", o_testInstallWithStrictRecommendedManagedDependency_add548__38);
    }
}

