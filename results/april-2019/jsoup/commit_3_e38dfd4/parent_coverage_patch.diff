diff --git a/CHANGES b/CHANGES
index 92ecc3a..9169745 100644
--- a/CHANGES
+++ b/CHANGES
@@ -7,10 +7,6 @@ jsoup changelog
     builder is reused, as are the parser settings like case sensitivity.
     <https://github.com/jhy/jsoup/issues/769>
 
-  * Improvement: Jsoup now detects the character set of the input if specified in an XML Declaration, when using the
-    HTML parser. Previously that only happened when the XML parser was specified.
-    <https://github.com/jhy/jsoup/issues/1009>
-
 *** Release 1.11.3 [2018-Apr-15]
   * Improvement: CDATA sections are now treated as whitespace preserving (regardless of the containing element), and are
     round-tripped into output HTML.
diff --git a/src/main/java/org/jsoup/helper/DataUtil.java b/src/main/java/org/jsoup/helper/DataUtil.java
index 3aaa0ed..5f276ee 100644
--- a/src/main/java/org/jsoup/helper/DataUtil.java
+++ b/src/main/java/org/jsoup/helper/DataUtil.java
@@ -2,10 +2,8 @@ package org.jsoup.helper;
 
 import org.jsoup.UncheckedIOException;
 import org.jsoup.internal.ConstrainableInputStream;
-import org.jsoup.nodes.Comment;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
-import org.jsoup.nodes.Node;
 import org.jsoup.nodes.XmlDeclaration;
 import org.jsoup.parser.Parser;
 import org.jsoup.select.Elements;
@@ -129,20 +127,10 @@ public final class DataUtil {
             }
 
             // look for <?xml encoding='ISO-8859-1'?>
-            if (foundCharset == null && doc.childNodeSize() > 0) {
-                Node first = doc.childNode(0);
-                XmlDeclaration decl = null;
-                if (first instanceof XmlDeclaration)
-                    decl = (XmlDeclaration) first;
-                else if (first instanceof Comment) {
-                    Comment comment = (Comment) first;
-                    if (comment.isXmlDeclaration())
-                        decl = comment.asXmlDeclaration();
-                }
-                if (decl != null) {
-                    if (decl.name().equalsIgnoreCase("xml"))
-                        foundCharset = decl.attr("encoding");
-                }
+            if (foundCharset == null && doc.childNodeSize() > 0 && doc.childNode(0) instanceof XmlDeclaration) {
+                XmlDeclaration prolog = (XmlDeclaration) doc.childNode(0);
+                if (prolog.name().equals("xml"))
+                    foundCharset = prolog.attr("encoding");
             }
             foundCharset = validateCharset(foundCharset);
             if (foundCharset != null && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode. (case insensitive check here to match how validate works)
diff --git a/src/main/java/org/jsoup/nodes/Comment.java b/src/main/java/org/jsoup/nodes/Comment.java
index 021d0d1..e467a39 100644
--- a/src/main/java/org/jsoup/nodes/Comment.java
+++ b/src/main/java/org/jsoup/nodes/Comment.java
@@ -1,8 +1,5 @@
 package org.jsoup.nodes;
 
-import org.jsoup.Jsoup;
-import org.jsoup.parser.Parser;
-
 import java.io.IOException;
 
 /**
@@ -57,29 +54,4 @@ public class Comment extends LeafNode {
     public String toString() {
         return outerHtml();
     }
-
-    /**
-     * Check if this comment looks like an XML Declaration.
-     * @return true if it looks like, maybe, it's an XML Declaration.
-     */
-    public boolean isXmlDeclaration() {
-        String data = getData();
-        return (data.length() > 1 && (data.startsWith("!") || data.startsWith("?")));
-    }
-
-    /**
-     * Attempt to cast this comment to an XML Declaration note.
-     * @return an XML declaration if it could be parsed as one, null otherwise.
-     */
-    public XmlDeclaration asXmlDeclaration() {
-        String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(doc.getParser().settings().normalizeTag(el.tagName()), data.startsWith("!"));
-            decl.attributes().addAll(el.attributes());
-        }
-        return decl;
-    }
 }
diff --git a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
index 87cdc37..f4b782e 100644
--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
@@ -1,5 +1,6 @@
 package org.jsoup.parser;
 
+import org.jsoup.Jsoup;
 import org.jsoup.helper.Validate;
 import org.jsoup.nodes.CDataNode;
 import org.jsoup.nodes.Comment;
@@ -89,12 +90,17 @@ public class XmlTreeBuilder extends TreeBuilder {
     void insert(Token.Comment commentToken) {
         Comment comment = new Comment(commentToken.getData());
         Node insert = comment;
-        if (commentToken.bogus && comment.isXmlDeclaration()) {
-            // xml declarations are emitted as bogus comments (which is right for html, but not xml)
+        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)
             // so we do a bit of a hack and parse the data as an element to pull the attributes out
-            XmlDeclaration decl = comment.asXmlDeclaration(); // else, we couldn't parse it as a decl, so leave as a comment
-            if (decl != null)
-                insert = decl;
+            String data = comment.getData();
+            if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
+                Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri, Parser.xmlParser());
+                if (doc.childNodeSize() > 0) {
+                    Element el = doc.child(0);
+                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
+                    insert.attributes().addAll(el.attributes());
+                } // else, we couldn't parse it as a decl, so leave as a comment
+            }
         }
         insertNode(insert);
     }
diff --git a/src/test/java/org/jsoup/helper/DataUtilTest.java b/src/test/java/org/jsoup/helper/DataUtilTest.java
index c1f45d4..7021676 100644
--- a/src/test/java/org/jsoup/helper/DataUtilTest.java
+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java
@@ -164,17 +164,4 @@ public class DataUtilTest {
         Document doc = Jsoup.parse(in, null, "http://example.com");
         assertEquals("OK", doc.head().select("title").text());
     }
-
-    @Test
-    public void supportsXmlCharsetDeclaration() throws IOException {
-        String encoding = "iso-8859-1";
-        InputStream soup = new ByteArrayInputStream((
-            "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" +
-                "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">" +
-                "<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">Hellö Wörld!</html>"
-        ).getBytes(encoding));
-
-        Document doc = Jsoup.parse(soup, null, "");
-        assertEquals("Hellö Wörld!", doc.body().text());
-    }
 }
