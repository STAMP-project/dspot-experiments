diff --git a/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java b/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
index efb630c..3a7ac17 100644
--- a/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
+++ b/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
@@ -157,7 +157,7 @@ public int hashCode() {
         private ParameterizedTypeImpl(final Class<?> raw, final Type useOwner, final Type[] typeArguments) {
             this.raw = raw;
             this.useOwner = useOwner;
-            this.typeArguments = Arrays.copyOf(typeArguments, typeArguments.length, Type[].class);
+            this.typeArguments = typeArguments.clone();
         }
 
         /**
diff --git a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
index a9bb9fa..acdf77c 100644
--- a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
@@ -34,7 +34,6 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -692,15 +691,6 @@ public void testParameterize() throws Exception {
     }
 
     @Test
-    public void testParameterizeNarrowerTypeArray() {
-        final TypeVariable<?>[] variables = ArrayList.class.getTypeParameters();
-        final ParameterizedType parameterizedType = TypeUtils.parameterize(ArrayList.class, variables);
-        final Map<TypeVariable<?>, Type> mapping = Collections.<TypeVariable<?>, Type>singletonMap(variables[0], String.class);
-        final Type unrolled = TypeUtils.unrollVariables(mapping, parameterizedType);
-        assertEquals(TypeUtils.parameterize(ArrayList.class, String.class), unrolled);
-    }
-
-    @Test
     public void testParameterizeWithOwner() throws Exception {
         final Type owner = TypeUtils.parameterize(TypeUtilsTest.class, String.class);
         final ParameterizedType dat2Type = TypeUtils.parameterizeWithOwner(owner, That.class, String.class, String.class);
