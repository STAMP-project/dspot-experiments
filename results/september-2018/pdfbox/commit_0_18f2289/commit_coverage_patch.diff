diff --git a/pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java b/pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java
index 75faddd..9c3314e 100644
--- a/pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java
+++ b/pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java
@@ -2287,12 +2287,12 @@ public class COSParser extends BaseParser
             COSBase pages = root.getDictionaryObject(COSName.PAGES);
             if (pages instanceof COSDictionary)
             {
-                checkPagesDictionary((COSDictionary) pages);
+                checkPagesDictionary((COSDictionary) pages, new HashSet<COSObject>());
             }
         }
     }
 
-    private int checkPagesDictionary(COSDictionary pagesDict)
+    private int checkPagesDictionary(COSDictionary pagesDict, Set<COSObject> set)
     {
         // check for kids
         COSBase kids = pagesDict.getDictionaryObject(COSName.KIDS);
@@ -2304,6 +2304,11 @@ public class COSParser extends BaseParser
             for (COSBase kid : kidsList)
             {
                 COSObject kidObject = (COSObject) kid;
+                if (set.contains(kidObject))
+                {
+                    kidsArray.remove(kid);
+                    continue;
+                }
                 COSBase kidBaseobject = kidObject.getObject();
                 // object wasn't dereferenced -> remove it
                 if (kidBaseobject.equals(COSNull.NULL))
@@ -2318,7 +2323,8 @@ public class COSParser extends BaseParser
                     if (COSName.PAGES.equals(type))
                     {
                         // process nested pages dictionaries
-                        numberOfPages += checkPagesDictionary(kidDictionary);
+                        set.add(kidObject);
+                        numberOfPages += checkPagesDictionary(kidDictionary, set);
                     }
                     else if (COSName.PAGE.equals(type))
                     {
