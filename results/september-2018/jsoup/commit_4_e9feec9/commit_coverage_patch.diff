diff --git a/CHANGES b/CHANGES
index eb596b3..bdc7de8 100644
--- a/CHANGES
+++ b/CHANGES
@@ -44,6 +44,9 @@ jsoup changelog
     space, which could impact the parse tree.
     <https://github.com/jhy/jsoup/issues/1003>
 
+  * Bugfix: when parsing an invalid XML declaration, the parse would fail.
+    <https://github.com/jhy/jsoup/issues/1015>
+
 *** Release 1.11.2 [2017-Nov-19]
   * Improvement: added a new pseudo selector :matchText, which allows text nodes to match as if they were elements.
     This enables finding text that is only marked by a "br" tag, for example.
diff --git a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
index 10bb54a..aec5ba7 100644
--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
@@ -88,9 +88,11 @@ public class XmlTreeBuilder extends TreeBuilder {
             String data = comment.getData();
             if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
                 Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri, Parser.xmlParser());
-                Element el = doc.child(0);
-                insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
-                insert.attributes().addAll(el.attributes());
+                if (doc.childNodeSize() > 0) {
+                    Element el = doc.child(0);
+                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
+                    insert.attributes().addAll(el.attributes());
+                } // else, we couldn't parse it as a decl, so leave as a comment
             }
         }
         insertNode(insert);
diff --git a/src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java b/src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java
index e5d6f01..9b1775e 100644
--- a/src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java
+++ b/src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java
@@ -220,4 +220,11 @@ public class XmlTreeBuilderTest {
 
         assertEquals("//\n\n  foo();\n//", doc.selectFirst("script").text());
     }
+
+    @Test
+    public void handlesDodgyXmlDecl() {
+        String xml = "<?xml version='1.0'><val>One</val>";
+        Document doc = Jsoup.parse(xml, "", Parser.xmlParser());
+        assertEquals("One", doc.select("val").text());
+    }
 }
