diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index d90ba2b..6673cf8 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -22,6 +22,9 @@
   <body>
 
   <release version="4.1" date="TBD" description="">
+    <action issue="COLLECTIONS-512" dev="tn" type="fix" due-to="Cyrille Artho">
+      "TransformingComparator" did not comply with the contract of Object#equals.
+    </action>
     <action issue="COLLECTIONS-510" dev="tn" type="fix" due-to="Hollis Waite">
       Fix compilation errors when using source level 1.8 and a recent java 8 compiler.
     </action>
diff --git a/src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java b/src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java
index cb24d43..51607b1 100644
--- a/src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java
+++ b/src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java
@@ -120,8 +120,8 @@ public class TransformingComparator<I, O> implements Comparator<I>, Serializable
         }
         if (object.getClass().equals(this.getClass())) {
             final TransformingComparator<?, ?> comp = (TransformingComparator<?, ?>) object;
-            return null == decorated ? null == comp.decorated : decorated.equals(comp.decorated) &&
-                    null == transformer ? null == comp.transformer : transformer.equals(comp.transformer);
+            return (null == decorated ? null == comp.decorated : decorated.equals(comp.decorated)) &&
+                   (null == transformer ? null == comp.transformer : transformer.equals(comp.transformer));
         }
         return false;
     }
diff --git a/src/test/java/org/apache/commons/collections4/comparators/TransformingComparatorTest.java b/src/test/java/org/apache/commons/collections4/comparators/TransformingComparatorTest.java
index 2ad7b1a..788bde4 100644
--- a/src/test/java/org/apache/commons/collections4/comparators/TransformingComparatorTest.java
+++ b/src/test/java/org/apache/commons/collections4/comparators/TransformingComparatorTest.java
@@ -21,6 +21,7 @@ import java.util.LinkedList;
 import java.util.List;
 
 import org.apache.commons.collections4.ComparatorUtils;
+import org.apache.commons.collections4.Transformer;
 import org.apache.commons.collections4.TransformerUtils;
 
 /**
@@ -60,6 +61,20 @@ public class TransformingComparatorTest extends AbstractComparatorTest<Integer>
         return list;
     }
 
+    public void testEquals() {
+        Transformer<String, String> t1 = TransformerUtils.nopTransformer();
+        TransformingComparator<String, String> comp1 = new TransformingComparator<String, String>(t1);
+        TransformingComparator<String, String> comp2 = new TransformingComparator<String, String>(t1, comp1);
+
+        // Checks the contract: equals-hashcode on comp1 and comp2
+        assertTrue("Contract failed: equals-hashcode",
+                comp1.equals(comp2) ? comp1.hashCode() == comp2.hashCode() : true);
+
+        // Checks the contract: equals-hashcode on comp1 and comp2
+        assertTrue("Contract failed: equals-hashcode",
+                comp2.equals(comp1) ? comp2.hashCode() == comp1.hashCode() : true);
+    }
+
     @Override
     public String getCompatibilityVersion() {
         return "4";
