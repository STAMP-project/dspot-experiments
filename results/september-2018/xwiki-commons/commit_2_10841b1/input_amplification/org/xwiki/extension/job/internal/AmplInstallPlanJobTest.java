package org.xwiki.extension.job.internal;


import java.util.Date;
import java.util.Iterator;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.TestResources;
import org.xwiki.extension.job.plan.ExtensionPlan;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlan;
import org.xwiki.extension.repository.CoreExtensionRepository;
import org.xwiki.extension.test.AbstractExtensionHandlerTest;
import org.xwiki.extension.test.ConfigurableDefaultCoreExtensionRepository;
import org.xwiki.extension.version.internal.DefaultVersion;
import org.xwiki.job.Request;
import org.xwiki.job.event.status.JobProgress;
import org.xwiki.job.event.status.JobProgressStep;


public class AmplInstallPlanJobTest extends AbstractExtensionHandlerTest {
    private ConfigurableDefaultCoreExtensionRepository coreRepository;

    @Override
    @Before
    public void setUp() throws Exception {
        super.setUp();
        this.coreRepository = this.mocker.getInstance(CoreExtensionRepository.class);
    }

    @Test(timeout = 10000)
    public void testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342() throws Exception, Throwable {
        try {
            ExtensionPlan o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3 = installPlan(TestResources.REMOTE_UPGRADE10_ID);
            Assert.assertEquals("[INSTALL: upgrade/1.0 (null) ([])]", ((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).toString());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getActions().isEmpty());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getTree().isEmpty());
            Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getJobType());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).getId());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).isStatusLogIsolated());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).isRemote());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).isStatusSerialized());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).getPropertyNames().isEmpty());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).isVerbose());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getRequest())).isInteractive());
            Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getCurrentStep())).getParent());
            Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getCurrentStep())).getOffset())), 0.1);
            Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getCurrentStep())).getChildren().isEmpty());
            Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getCurrentLevelOffset())), 0.1);
            Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getOffset())), 0.1);
            Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getRootStep())).getParent());
            Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getRootStep())).getOffset())), 0.1);
            Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getProgress())).getRootStep())).getChildren().isEmpty());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getQuestion());
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getDate())));
            Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getDay())));
            Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getTimezoneOffset())));
            Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getYear())));
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getMonth())));
            Assert.assertEquals(14, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getHours())));
            Assert.assertEquals(14, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getStartDate())).getMinutes())));
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getDate())));
            Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getDay())));
            Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getTimezoneOffset())));
            Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getYear())));
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getMonth())));
            Assert.assertEquals(14, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getHours())));
            Assert.assertEquals(14, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getEndDate())).getMinutes())));
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).isSerialized());
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).isIsolated());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).isSubJob());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getParentJobStatus());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).isCancelable());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).isCanceled());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getError());
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079_add102342__3)).getLog().isEmpty());
            ExtensionPlan plan = installPlan(TestResources.REMOTE_UPGRADE10_ID);
            int o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079__6 = plan.getTree().size();
            int o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079__8 = plan.getTree().size();
            Iterator<ExtensionPlanNode> it = plan.getTree().iterator();
            ExtensionPlanNode node = it.next();
            ExtensionPlanAction action = node.getAction();
            action.getExtension().getId();
            action.getAction();
            int o_testInstallOnNamespaceThenOnRoot_remove100971_failAssert314_add101079__20 = action.getPreviousExtensions().size();
            action.getPreviousExtension().getId();
            action.getNamespace();
            node.getChildren().size();
            node = it.next();
            action = node.getAction();
            action.getExtension().getId();
            action.getExtension().getId();
            action.getAction();
            action.getPreviousExtensions().size();
            action.getNamespace();
            node.getChildren().size();
            node.getChildren().size();
            org.junit.Assert.fail("testInstallOnNamespaceThenOnRoot_remove100971 should have thrown NullPointerException");
        } catch (NullPointerException expected) {
        }
    }

    @Test(timeout = 10000)
    public void testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261() throws Exception, Throwable {
        this.coreRepository.addExtensions("coreextension", new DefaultVersion("version"), new ExtensionId(""));
        ExtensionPlan o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4 = installPlan(TestResources.REMOTE_SIMPLE_ID);
        ExtensionPlan o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7 = installPlan(TestResources.REMOTE_SIMPLE_ID);
        Assert.assertEquals("[INSTALL: rsimple/version (null) ([])]", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getTree().isEmpty());
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getOffset())), 0.1);
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isStatusSerialized());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isVerbose());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isRemote());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).getId());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getParentJobStatus());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getLog().isEmpty());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isSerialized());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isCancelable());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getQuestion());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isIsolated());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getJobType());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getError());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isSubJob());
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getHours())));
        Assert.assertEquals(44, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getHours())));
        Assert.assertEquals(44, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getDate())));
        ExtensionPlan o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4 = installPlan(TestResources.REMOTE_SIMPLE_ID);
        Assert.assertEquals("[INSTALL: rsimple/version (null) ([])]", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getTree().isEmpty());
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getProgress())).getOffset())), 0.1);
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isStatusSerialized());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isVerbose());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).isRemote());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getRequest())).getId());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getParentJobStatus());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getLog().isEmpty());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isSerialized());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isCancelable());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getQuestion());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isIsolated());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getJobType());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getError());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).isSubJob());
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getHours())));
        Assert.assertEquals(44, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getHours())));
        Assert.assertEquals(44, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415_add7261__7)).getEndDate())).getDate())));
    }

    @Test(timeout = 10000)
    public void testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415() throws Exception, Throwable {
        this.coreRepository.addExtensions("coreextension", new DefaultVersion("version"), new ExtensionId(""));
        ExtensionPlan o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4 = installPlan(TestResources.REMOTE_SIMPLE_ID);
        Assert.assertEquals("[INSTALL: rsimple/version (null) ([])]", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getTree().isEmpty());
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).getId());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isStatusSerialized());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isVerbose());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isRemote());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getParentJobStatus());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getLog().isEmpty());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isSerialized());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isCancelable());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getQuestion());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isIsolated());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getJobType());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getError());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isSubJob());
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getHours())));
        Assert.assertEquals(43, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getMinutes())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getHours())));
        Assert.assertEquals(43, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getMinutes())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getTimezoneOffset())));
        ExtensionPlan o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4 = installPlan(TestResources.REMOTE_SIMPLE_ID);
        Assert.assertEquals("[INSTALL: rsimple/version (null) ([])]", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getTree().isEmpty());
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).getId());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isStatusSerialized());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isVerbose());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getRequest())).isRemote());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getParentJobStatus());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getLog().isEmpty());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isSerialized());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isCancelable());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getQuestion());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isIsolated());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getJobType());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getError());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).isSubJob());
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getHours())));
        Assert.assertEquals(43, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getMinutes())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getHours())));
        Assert.assertEquals(43, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getMinutes())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996_add6415__4)).getEndDate())).getTimezoneOffset())));
    }

    @Test(timeout = 10000)
    public void testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996() throws Exception, Throwable {
        this.coreRepository.addExtensions("coreextension", new DefaultVersion("version"), new ExtensionId(""));
        ExtensionPlan o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4 = installPlan(TestResources.REMOTE_SIMPLE_ID);
        Assert.assertEquals("[INSTALL: rsimple/version (null) ([])]", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getTree().isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getLog().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).isVerbose());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).isStatusLogIsolated());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getQuestion());
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getHours())));
        Assert.assertEquals(42, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getMonth())));
        Assert.assertEquals(11, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getHours())));
        Assert.assertEquals(42, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithFeatureAsCoreExtensionFeature_literalMutationString5996__4)).isCanceled());
    }

    @Test(timeout = 10000)
    public void testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330() throws Exception, Throwable {
        try {
            ExtensionPlan o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3 = installPlan(TestResources.REMOTE_UPGRADE20_ID, "namespace");
            Assert.assertEquals("[INSTALL: upgrade/2.0 (namespace) ([])]", ((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).toString());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getActions().isEmpty());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getTree().isEmpty());
            Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getJobType());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).getId());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).isVerbose());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).isStatusSerialized());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).isStatusLogIsolated());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).isRemote());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).isInteractive());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getRequest())).getPropertyNames().isEmpty());
            Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getCurrentStep())).getParent());
            Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getCurrentStep())).getOffset())), 0.1);
            Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getCurrentStep())).getChildren().isEmpty());
            Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getCurrentLevelOffset())), 0.1);
            Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getOffset())), 0.1);
            Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getRootStep())).getParent());
            Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getRootStep())).getOffset())), 0.1);
            Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getProgress())).getRootStep())).getChildren().isEmpty());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getQuestion());
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getDate())));
            Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getYear())));
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getMonth())));
            Assert.assertEquals(13, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getHours())));
            Assert.assertEquals(39, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getMinutes())));
            Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getDay())));
            Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getStartDate())).getTimezoneOffset())));
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getDate())));
            Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getYear())));
            Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getMonth())));
            Assert.assertEquals(13, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getHours())));
            Assert.assertEquals(39, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getMinutes())));
            Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getDay())));
            Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getEndDate())).getTimezoneOffset())));
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).isSerialized());
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).isIsolated());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).isSubJob());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getParentJobStatus());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).isCancelable());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).isCanceled());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getError());
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753_add85330__3)).getLog().isEmpty());
            ExtensionPlan plan = installPlan(TestResources.REMOTE_UPGRADE20_ID, "namespace");
            int o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753__6 = plan.getTree().size();
            ExtensionPlanNode o_testInstallNameSpaceExtensionWithExistingRootExtension_remove84668_failAssert276_add84753__8 = plan.getTree().iterator().next();
            ExtensionPlanNode node = plan.getTree().iterator().next();
            ExtensionPlanAction action = node.getAction();
            action.getExtension().getId();
            action.getAction();
            action.getPreviousExtension().getId();
            action.getNamespace();
            node.getChildren().size();
            org.junit.Assert.fail("testInstallNameSpaceExtensionWithExistingRootExtension_remove84668 should have thrown NullPointerException");
        } catch (NullPointerException expected) {
        }
    }

    @Test(timeout = 10000)
    public void testInstallWithInvalidRecommendedManagedDependency_add20613() throws Exception, Throwable {
        this.coreRepository.getConfigurableEnvironmentExtension().putProperty("xwiki.extension.recommendedVersions", "upgrade/10.0");
        ExtensionPlan o_testInstallWithInvalidRecommendedManagedDependency_add20613__4 = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        Assert.assertEquals("[INSTALL: rwithmanageddependency/version (namespace) ([INSTALL: upgrade/1.0 (namespace) ([], 1.0)])]", ((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isRemote());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getQuestion());
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getMonth())));
        Assert.assertEquals(12, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getHours())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getMonth())));
        Assert.assertEquals(12, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getHours())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isIsolated());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getLog().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isCanceled());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITH_MANAGED_DEPENDENY_ID, "namespace");
        int o_testInstallWithInvalidRecommendedManagedDependency_add20613__7 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__7)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        action.getExtension().getId();
        action.getAction();
        action.getAction();
        action.getAction();
        int o_testInstallWithInvalidRecommendedManagedDependency_add20613__18 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__18)));
        action.getNamespace();
        action.getNamespace();
        action.getNamespace();
        int o_testInstallWithInvalidRecommendedManagedDependency_add20613__21 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__21)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        int o_testInstallWithInvalidRecommendedManagedDependency_add20613__33 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__33)));
        int o_testInstallWithInvalidRecommendedManagedDependency_add20613__35 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__35)));
        int o_testInstallWithInvalidRecommendedManagedDependency_add20613__39 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__39)));
        Assert.assertEquals("[INSTALL: rwithmanageddependency/version (namespace) ([INSTALL: upgrade/1.0 (namespace) ([], 1.0)])]", ((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isRemote());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getQuestion());
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getMonth())));
        Assert.assertEquals(12, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getHours())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getMonth())));
        Assert.assertEquals(12, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getHours())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isIsolated());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getLog().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__4)).isCanceled());
        Assert.assertEquals(1, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__7)));
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__18)));
        Assert.assertEquals(1, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__21)));
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__33)));
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidRecommendedManagedDependency_add20613__35)));
    }

    @Test(timeout = 10000)
    public void testInstallWithInvalidOptionalDependency_add91451() throws Exception, Throwable {
        ExtensionPlan o_testInstallWithInvalidOptionalDependency_add91451__1 = installPlan(TestResources.REMOTE_WITHRMISSINGOPTIONALDEPENDENCY_ID, "namespace");
        Assert.assertEquals("[INSTALL: rwithmissingoptionaldependency/version (namespace) ([])]", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getTree().isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getLog().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isInteractive());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isStatusSerialized());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getQuestion());
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getMonth())));
        Assert.assertEquals(13, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getHours())));
        Assert.assertEquals(47, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getMonth())));
        Assert.assertEquals(13, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getHours())));
        Assert.assertEquals(47, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getTimezoneOffset())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isCanceled());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGOPTIONALDEPENDENCY_ID, "namespace");
        int o_testInstallWithInvalidOptionalDependency_add91451__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallWithInvalidOptionalDependency_add91451__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        action.getAction();
        int o_testInstallWithInvalidOptionalDependency_add91451__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidOptionalDependency_add91451__15)));
        action.getNamespace();
        int o_testInstallWithInvalidOptionalDependency_add91451__18 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidOptionalDependency_add91451__18)));
        Assert.assertEquals("[INSTALL: rwithmissingoptionaldependency/version (namespace) ([])]", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getTree().isEmpty());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getLog().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isInteractive());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).isStatusSerialized());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getQuestion());
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getMonth())));
        Assert.assertEquals(13, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getHours())));
        Assert.assertEquals(47, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getYear())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getMonth())));
        Assert.assertEquals(13, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getHours())));
        Assert.assertEquals(47, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getMinutes())));
        Assert.assertEquals(9, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getDate())));
        Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getEndDate())).getTimezoneOffset())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add91451__1)).isCanceled());
        Assert.assertEquals(1, ((int) (o_testInstallWithInvalidOptionalDependency_add91451__4)));
        Assert.assertEquals(0, ((int) (o_testInstallWithInvalidOptionalDependency_add91451__15)));
    }
}

