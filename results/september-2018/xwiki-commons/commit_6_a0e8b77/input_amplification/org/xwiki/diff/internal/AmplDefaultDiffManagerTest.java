package org.xwiki.diff.internal;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.apache.commons.lang3.StringUtils;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.xwiki.diff.DiffManager;
import org.xwiki.diff.MergeResult;
import org.xwiki.logging.LogLevel;
import org.xwiki.test.mockito.MockitoComponentMockingRule;


public class AmplDefaultDiffManagerTest {
    @Rule
    public final MockitoComponentMockingRule<DiffManager> mocker = new MockitoComponentMockingRule<DiffManager>(DefaultDiffManager.class);

    private static List<Character> toCharacters(String str) {
        List<Character> characters;
        if (str != null) {
            characters = new ArrayList<Character>(str.length());
            for (char c : str.toCharArray()) {
                characters.add(c);
            }
        }else {
            characters = Collections.emptyList();
        }
        return characters;
    }

    private static String toString(List<Character> characters) {
        return StringUtils.join(characters, null);
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add233_add103335_add161166() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__9 = Arrays.asList("some new content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add233__18 = Arrays.asList("some current content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__27 = Arrays.asList("some content", "after");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add233__36 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233_add103335__46 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        MergeResult<String> o_testMergeStringList_add233__38 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add233__50 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        List<String> o_testMergeStringList_add233__52 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233_add103335_add161166__75 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103335_add161166__75)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add233__61 = Arrays.asList("some new content");
        result.getMerged();
        List<String> o_testMergeStringList_add233__63 = Arrays.asList("some new content");
        result.getMerged();
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103335_add161166__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103335_add161166__75)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add233_add103522() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__9 = Arrays.asList("some new content");
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add233__18 = Arrays.asList("some current content");
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__27 = Arrays.asList("some content", "after");
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add233__36 = Arrays.asList("before", "some content", "after");
        MergeResult<String> o_testMergeStringList_add233__38 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add233__50 = Arrays.asList("before", "some content", "after");
        List<String> o_testMergeStringList_add233__52 = Arrays.asList("before", "some content", "after");
        MergeResult<String> o_testMergeStringList_add233_add103522__68 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103522__68)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add233__61 = Arrays.asList("some new content");
        List<String> o_testMergeStringList_add233__63 = Arrays.asList("some new content");
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103522__68).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103522__68)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add226_add104591_add161520() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__9 = Arrays.asList("some new content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add226__18 = Arrays.asList("some current content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__27 = Arrays.asList("some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226__29 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        MergeResult<String> o_testMergeStringList_add226_add104591__42 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add226__41 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add226__50 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        List<String> o_testMergeStringList_add226__52 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226_add104591_add161520__75 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104591_add161520__75)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add226__61 = Arrays.asList("some new content");
        result.getMerged();
        List<String> o_testMergeStringList_add226__63 = Arrays.asList("some new content");
        result.getMerged();
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104591_add161520__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104591_add161520__75)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add233_add103430_add138639() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__9 = Arrays.asList("some new content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add233__18 = Arrays.asList("some current content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__27 = Arrays.asList("some content", "after");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add233__36 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233__38 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        MergeResult<String> o_testMergeStringList_add233_add103430__53 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add233__50 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        List<String> o_testMergeStringList_add233__52 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233_add103430_add138639__75 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103430_add138639__75)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add233__61 = Arrays.asList("some new content");
        result.getMerged();
        List<String> o_testMergeStringList_add233__63 = Arrays.asList("some new content");
        result.getMerged();
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103430_add138639__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103430_add138639__75)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add226_add104616() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__9 = Arrays.asList("some new content");
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add226__18 = Arrays.asList("some current content");
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__27 = Arrays.asList("some content", "after");
        MergeResult<String> o_testMergeStringList_add226__29 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add226__41 = Arrays.asList("before", "some content", "after");
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add226__50 = Arrays.asList("before", "some content", "after");
        List<String> o_testMergeStringList_add226__52 = Arrays.asList("before", "some content", "after");
        MergeResult<String> o_testMergeStringList_add226_add104616__68 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104616__68)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add226__61 = Arrays.asList("some new content");
        List<String> o_testMergeStringList_add226__63 = Arrays.asList("some new content");
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104616__68).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104616__68)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add226_add104576_add161458() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__9 = Arrays.asList("some new content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add226__18 = Arrays.asList("some current content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__27 = Arrays.asList("some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226_add104576__35 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        MergeResult<String> o_testMergeStringList_add226__29 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add226__41 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add226__50 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        List<String> o_testMergeStringList_add226__52 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226_add104576_add161458__75 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104576_add161458__75)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add226__61 = Arrays.asList("some new content");
        result.getMerged();
        List<String> o_testMergeStringList_add226__63 = Arrays.asList("some new content");
        result.getMerged();
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104576_add161458__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104576_add161458__75)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add226_add104601_add155221() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__9 = Arrays.asList("some new content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add226__18 = Arrays.asList("some current content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add226__27 = Arrays.asList("some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226__29 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add226__41 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226_add104601__53 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add226__50 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        List<String> o_testMergeStringList_add226__52 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add226_add104601_add155221__75 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104601_add155221__75)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add226__61 = Arrays.asList("some new content");
        result.getMerged();
        List<String> o_testMergeStringList_add226__63 = Arrays.asList("some new content");
        result.getMerged();
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add226_add104601_add155221__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add226_add104601_add155221__75)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add233_add103272_add161731() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__9 = Arrays.asList("some new content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add233__18 = Arrays.asList("some current content");
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add233__27 = Arrays.asList("some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233_add103272__35 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add233__36 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233__38 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add233__50 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        List<String> o_testMergeStringList_add233__52 = Arrays.asList("before", "some content", "after");
        result.getMerged();
        MergeResult<String> o_testMergeStringList_add233_add103272_add161731__75 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103272_add161731__75)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add233__61 = Arrays.asList("some new content");
        result.getMerged();
        List<String> o_testMergeStringList_add233__63 = Arrays.asList("some new content");
        result.getMerged();
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add233_add103272_add161731__75).getCurrent().contains("some new content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add233_add103272_add161731__75)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testMergeStringList_add240() throws Exception {
        MergeResult<String> result;
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add240__9 = Arrays.asList("some new content");
        Assert.assertTrue(o_testMergeStringList_add240__9.contains("some new content"));
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content"), Arrays.asList("some current content"), null);
        List<String> o_testMergeStringList_add240__18 = Arrays.asList("some current content");
        Assert.assertTrue(o_testMergeStringList_add240__18.contains("some current content"));
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("some content"), null);
        List<String> o_testMergeStringList_add240__27 = Arrays.asList("some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("after"));
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("before", "some content"), Arrays.asList("some content", "after"), null);
        List<String> o_testMergeStringList_add240__36 = Arrays.asList("before", "some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("after"));
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some content", "after"), Arrays.asList("before", "some content"), null);
        List<String> o_testMergeStringList_add240__45 = Arrays.asList("before", "some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("after"));
        List<String> o_testMergeStringList_add240__47 = Arrays.asList("before", "some content", "after");
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("after"));
        MergeResult<String> o_testMergeStringList_add240__49 = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCurrent().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add240__49)).getLog().isEmpty());
        result = this.mocker.getComponentUnderTest().merge(Arrays.asList("some content"), Arrays.asList("some new content"), Arrays.asList("some new content"), null);
        List<String> o_testMergeStringList_add240__61 = Arrays.asList("some new content");
        Assert.assertTrue(o_testMergeStringList_add240__61.contains("some new content"));
        List<String> o_testMergeStringList_add240__63 = Arrays.asList("some new content");
        Assert.assertTrue(o_testMergeStringList_add240__63.contains("some new content"));
        Assert.assertTrue(o_testMergeStringList_add240__9.contains("some new content"));
        Assert.assertTrue(o_testMergeStringList_add240__18.contains("some current content"));
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__27.contains("after"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__36.contains("after"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__45.contains("after"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("before"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("some content"));
        Assert.assertTrue(o_testMergeStringList_add240__47.contains("after"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getNext().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getMerged().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCurrent().contains("some new content"));
        Assert.assertTrue(((org.xwiki.diff.internal.DefaultMergeResult)o_testMergeStringList_add240__49).getCommonAncestor().contains("some content"));
        Assert.assertTrue(((DefaultMergeResult) (o_testMergeStringList_add240__49)).getLog().isEmpty());
        Assert.assertTrue(o_testMergeStringList_add240__61.contains("some new content"));
        Assert.assertTrue(o_testMergeStringList_add240__63.contains("some new content"));
    }

    @Test(timeout = 10000)
    public void testMergeCharList() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("b"), null);
        int o_testMergeCharList__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__9)));
        List<Character> o_testMergeCharList__12 = AmplDefaultDiffManagerTest.toCharacters("b");
        Assert.assertTrue(o_testMergeCharList__12.contains('b'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__21)));
        List<Character> o_testMergeCharList__24 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__24.contains('a'));
        Assert.assertTrue(o_testMergeCharList__24.contains('b'));
        Assert.assertTrue(o_testMergeCharList__24.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__33 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__33)));
        int o_testMergeCharList__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__36)));
        List<Character> o_testMergeCharList__39 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__39.contains('a'));
        Assert.assertTrue(o_testMergeCharList__39.contains('b'));
        Assert.assertTrue(o_testMergeCharList__39.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__41 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__41.contains('a'));
        Assert.assertTrue(o_testMergeCharList__41.contains('b'));
        Assert.assertTrue(o_testMergeCharList__41.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ac"), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ac"), null);
        int o_testMergeCharList__50 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__50)));
        int o_testMergeCharList__53 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__53)));
        int o_testMergeCharList__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__56)));
        List<Character> o_testMergeCharList__59 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__59.contains('a'));
        Assert.assertTrue(o_testMergeCharList__59.contains('b'));
        Assert.assertTrue(o_testMergeCharList__59.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__61 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__61.contains('a'));
        Assert.assertTrue(o_testMergeCharList__61.contains('b'));
        Assert.assertTrue(o_testMergeCharList__61.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__63 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__63.contains('a'));
        Assert.assertTrue(o_testMergeCharList__63.contains('b'));
        Assert.assertTrue(o_testMergeCharList__63.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__72 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__72)));
        int o_testMergeCharList__75 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__75)));
        int o_testMergeCharList__78 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__78)));
        int o_testMergeCharList__81 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__81)));
        List<Character> o_testMergeCharList__84 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__84.contains('a'));
        Assert.assertTrue(o_testMergeCharList__84.contains('b'));
        Assert.assertTrue(o_testMergeCharList__84.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__86 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__86.contains('a'));
        Assert.assertTrue(o_testMergeCharList__86.contains('b'));
        Assert.assertTrue(o_testMergeCharList__86.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__88 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__88.contains('a'));
        Assert.assertTrue(o_testMergeCharList__88.contains('b'));
        Assert.assertTrue(o_testMergeCharList__88.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__90 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__90.contains('a'));
        Assert.assertTrue(o_testMergeCharList__90.contains('b'));
        Assert.assertTrue(o_testMergeCharList__90.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__99 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__99)));
        int o_testMergeCharList__102 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__102)));
        int o_testMergeCharList__105 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__105)));
        int o_testMergeCharList__108 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__108)));
        int o_testMergeCharList__111 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__111)));
        List<Character> o_testMergeCharList__114 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__114.contains('a'));
        Assert.assertTrue(o_testMergeCharList__114.contains('b'));
        Assert.assertTrue(o_testMergeCharList__114.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__116 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__116.contains('a'));
        Assert.assertTrue(o_testMergeCharList__116.contains('b'));
        Assert.assertTrue(o_testMergeCharList__116.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__118 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__118.contains('a'));
        Assert.assertTrue(o_testMergeCharList__118.contains('b'));
        Assert.assertTrue(o_testMergeCharList__118.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__120 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__120.contains('a'));
        Assert.assertTrue(o_testMergeCharList__120.contains('b'));
        Assert.assertTrue(o_testMergeCharList__120.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__122 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__122.contains('a'));
        Assert.assertTrue(o_testMergeCharList__122.contains('b'));
        Assert.assertTrue(o_testMergeCharList__122.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("aibc"), AmplDefaultDiffManagerTest.toCharacters("abcj"), null);
        int o_testMergeCharList__131 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__131)));
        int o_testMergeCharList__134 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__134)));
        int o_testMergeCharList__137 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__137)));
        int o_testMergeCharList__140 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__140)));
        int o_testMergeCharList__143 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__143)));
        int o_testMergeCharList__146 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__146)));
        List<Character> o_testMergeCharList__149 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__149.contains('a'));
        Assert.assertTrue(o_testMergeCharList__149.contains('i'));
        Assert.assertTrue(o_testMergeCharList__149.contains('b'));
        Assert.assertTrue(o_testMergeCharList__149.contains('c'));
        Assert.assertTrue(o_testMergeCharList__149.contains('j'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("abcj"), AmplDefaultDiffManagerTest.toCharacters("aibc"), null);
        int o_testMergeCharList__157 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__157)));
        int o_testMergeCharList__160 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__160)));
        int o_testMergeCharList__163 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__163)));
        int o_testMergeCharList__166 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__166)));
        int o_testMergeCharList__169 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__169)));
        int o_testMergeCharList__172 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__172)));
        int o_testMergeCharList__175 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__175)));
        List<Character> o_testMergeCharList__178 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__178.contains('a'));
        Assert.assertTrue(o_testMergeCharList__178.contains('i'));
        Assert.assertTrue(o_testMergeCharList__178.contains('b'));
        Assert.assertTrue(o_testMergeCharList__178.contains('c'));
        Assert.assertTrue(o_testMergeCharList__178.contains('j'));
        result.getMerged();
        List<Character> o_testMergeCharList__180 = AmplDefaultDiffManagerTest.toCharacters("aibcj");
        Assert.assertTrue(o_testMergeCharList__180.contains('a'));
        Assert.assertTrue(o_testMergeCharList__180.contains('i'));
        Assert.assertTrue(o_testMergeCharList__180.contains('b'));
        Assert.assertTrue(o_testMergeCharList__180.contains('c'));
        Assert.assertTrue(o_testMergeCharList__180.contains('j'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ajbc"), AmplDefaultDiffManagerTest.toCharacters("aibc"), null);
        int o_testMergeCharList__188 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__188)));
        int o_testMergeCharList__191 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__191)));
        List<Character> o_testMergeCharList__194 = AmplDefaultDiffManagerTest.toCharacters("ajibc");
        Assert.assertTrue(o_testMergeCharList__194.contains('a'));
        Assert.assertTrue(o_testMergeCharList__194.contains('j'));
        Assert.assertTrue(o_testMergeCharList__194.contains('i'));
        Assert.assertTrue(o_testMergeCharList__194.contains('b'));
        Assert.assertTrue(o_testMergeCharList__194.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("aijb"), AmplDefaultDiffManagerTest.toCharacters("aib"), null);
        int o_testMergeCharList__202 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__202)));
        int o_testMergeCharList__205 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__205)));
        int o_testMergeCharList__208 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__208)));
        List<Character> o_testMergeCharList__211 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__211.contains('a'));
        Assert.assertTrue(o_testMergeCharList__211.contains('i'));
        Assert.assertTrue(o_testMergeCharList__211.contains('j'));
        Assert.assertTrue(o_testMergeCharList__211.contains('b'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("ajb"), AmplDefaultDiffManagerTest.toCharacters("aijb"), null);
        int o_testMergeCharList__219 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__219)));
        int o_testMergeCharList__222 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__222)));
        int o_testMergeCharList__225 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__225)));
        int o_testMergeCharList__228 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharList__228)));
        List<Character> o_testMergeCharList__231 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__231.contains('a'));
        Assert.assertTrue(o_testMergeCharList__231.contains('i'));
        Assert.assertTrue(o_testMergeCharList__231.contains('j'));
        Assert.assertTrue(o_testMergeCharList__231.contains('b'));
        result.getMerged();
        List<Character> o_testMergeCharList__233 = AmplDefaultDiffManagerTest.toCharacters("aijb");
        Assert.assertTrue(o_testMergeCharList__233.contains('a'));
        Assert.assertTrue(o_testMergeCharList__233.contains('i'));
        Assert.assertTrue(o_testMergeCharList__233.contains('j'));
        Assert.assertTrue(o_testMergeCharList__233.contains('b'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("ab"), AmplDefaultDiffManagerTest.toCharacters("abc"), null);
        int o_testMergeCharList__241 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__241)));
        int o_testMergeCharList__244 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__244)));
        int o_testMergeCharList__247 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__247)));
        int o_testMergeCharList__250 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__250)));
        int o_testMergeCharList__253 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__253)));
        int o_testMergeCharList__256 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__256)));
        int o_testMergeCharList__259 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__259)));
        int o_testMergeCharList__262 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__262)));
        List<Character> o_testMergeCharList__265 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__265.contains('a'));
        Assert.assertTrue(o_testMergeCharList__265.contains('b'));
        Assert.assertTrue(o_testMergeCharList__265.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__267 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__267.contains('a'));
        Assert.assertTrue(o_testMergeCharList__267.contains('b'));
        Assert.assertTrue(o_testMergeCharList__267.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__269 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__269.contains('a'));
        Assert.assertTrue(o_testMergeCharList__269.contains('b'));
        Assert.assertTrue(o_testMergeCharList__269.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__271 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__271.contains('a'));
        Assert.assertTrue(o_testMergeCharList__271.contains('b'));
        Assert.assertTrue(o_testMergeCharList__271.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__273 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__273.contains('a'));
        Assert.assertTrue(o_testMergeCharList__273.contains('b'));
        Assert.assertTrue(o_testMergeCharList__273.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__275 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__275.contains('a'));
        Assert.assertTrue(o_testMergeCharList__275.contains('b'));
        Assert.assertTrue(o_testMergeCharList__275.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("ab"), null);
        int o_testMergeCharList__283 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__283)));
        int o_testMergeCharList__286 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__286)));
        int o_testMergeCharList__289 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__289)));
        int o_testMergeCharList__292 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__292)));
        int o_testMergeCharList__295 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__295)));
        int o_testMergeCharList__298 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__298)));
        int o_testMergeCharList__301 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__301)));
        int o_testMergeCharList__304 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__304)));
        int o_testMergeCharList__307 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__307)));
        List<Character> o_testMergeCharList__310 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__310.contains('a'));
        Assert.assertTrue(o_testMergeCharList__310.contains('b'));
        Assert.assertTrue(o_testMergeCharList__310.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__312 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__312.contains('a'));
        Assert.assertTrue(o_testMergeCharList__312.contains('b'));
        Assert.assertTrue(o_testMergeCharList__312.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__314 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__314.contains('a'));
        Assert.assertTrue(o_testMergeCharList__314.contains('b'));
        Assert.assertTrue(o_testMergeCharList__314.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__316 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__316.contains('a'));
        Assert.assertTrue(o_testMergeCharList__316.contains('b'));
        Assert.assertTrue(o_testMergeCharList__316.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__318 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__318.contains('a'));
        Assert.assertTrue(o_testMergeCharList__318.contains('b'));
        Assert.assertTrue(o_testMergeCharList__318.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__320 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__320.contains('a'));
        Assert.assertTrue(o_testMergeCharList__320.contains('b'));
        Assert.assertTrue(o_testMergeCharList__320.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__322 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__322.contains('a'));
        Assert.assertTrue(o_testMergeCharList__322.contains('b'));
        Assert.assertTrue(o_testMergeCharList__322.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("bc"), AmplDefaultDiffManagerTest.toCharacters("abc"), null);
        int o_testMergeCharList__330 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__330)));
        int o_testMergeCharList__333 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__333)));
        int o_testMergeCharList__336 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__336)));
        int o_testMergeCharList__339 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__339)));
        int o_testMergeCharList__342 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__342)));
        int o_testMergeCharList__345 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__345)));
        int o_testMergeCharList__348 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__348)));
        int o_testMergeCharList__351 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__351)));
        int o_testMergeCharList__354 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__354)));
        int o_testMergeCharList__357 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__357)));
        List<Character> o_testMergeCharList__360 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__360.contains('a'));
        Assert.assertTrue(o_testMergeCharList__360.contains('b'));
        Assert.assertTrue(o_testMergeCharList__360.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__362 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__362.contains('a'));
        Assert.assertTrue(o_testMergeCharList__362.contains('b'));
        Assert.assertTrue(o_testMergeCharList__362.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__364 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__364.contains('a'));
        Assert.assertTrue(o_testMergeCharList__364.contains('b'));
        Assert.assertTrue(o_testMergeCharList__364.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__366 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__366.contains('a'));
        Assert.assertTrue(o_testMergeCharList__366.contains('b'));
        Assert.assertTrue(o_testMergeCharList__366.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__368 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__368.contains('a'));
        Assert.assertTrue(o_testMergeCharList__368.contains('b'));
        Assert.assertTrue(o_testMergeCharList__368.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__370 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__370.contains('a'));
        Assert.assertTrue(o_testMergeCharList__370.contains('b'));
        Assert.assertTrue(o_testMergeCharList__370.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__372 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__372.contains('a'));
        Assert.assertTrue(o_testMergeCharList__372.contains('b'));
        Assert.assertTrue(o_testMergeCharList__372.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__374 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__374.contains('a'));
        Assert.assertTrue(o_testMergeCharList__374.contains('b'));
        Assert.assertTrue(o_testMergeCharList__374.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("abc"), AmplDefaultDiffManagerTest.toCharacters("bc"), null);
        int o_testMergeCharList__382 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__382)));
        int o_testMergeCharList__385 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__385)));
        int o_testMergeCharList__388 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__388)));
        int o_testMergeCharList__391 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__391)));
        int o_testMergeCharList__394 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__394)));
        int o_testMergeCharList__397 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__397)));
        int o_testMergeCharList__400 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__400)));
        int o_testMergeCharList__403 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__403)));
        int o_testMergeCharList__406 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__406)));
        int o_testMergeCharList__409 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__409)));
        int o_testMergeCharList__412 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__412)));
        List<Character> o_testMergeCharList__415 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__415.contains('a'));
        Assert.assertTrue(o_testMergeCharList__415.contains('b'));
        Assert.assertTrue(o_testMergeCharList__415.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__417 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__417.contains('a'));
        Assert.assertTrue(o_testMergeCharList__417.contains('b'));
        Assert.assertTrue(o_testMergeCharList__417.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__419 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__419.contains('a'));
        Assert.assertTrue(o_testMergeCharList__419.contains('b'));
        Assert.assertTrue(o_testMergeCharList__419.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__421 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__421.contains('a'));
        Assert.assertTrue(o_testMergeCharList__421.contains('b'));
        Assert.assertTrue(o_testMergeCharList__421.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__423 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__423.contains('a'));
        Assert.assertTrue(o_testMergeCharList__423.contains('b'));
        Assert.assertTrue(o_testMergeCharList__423.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__425 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__425.contains('a'));
        Assert.assertTrue(o_testMergeCharList__425.contains('b'));
        Assert.assertTrue(o_testMergeCharList__425.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__427 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__427.contains('a'));
        Assert.assertTrue(o_testMergeCharList__427.contains('b'));
        Assert.assertTrue(o_testMergeCharList__427.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__429 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__429.contains('a'));
        Assert.assertTrue(o_testMergeCharList__429.contains('b'));
        Assert.assertTrue(o_testMergeCharList__429.contains('c'));
        result.getMerged();
        List<Character> o_testMergeCharList__431 = AmplDefaultDiffManagerTest.toCharacters("abc");
        Assert.assertTrue(o_testMergeCharList__431.contains('a'));
        Assert.assertTrue(o_testMergeCharList__431.contains('b'));
        Assert.assertTrue(o_testMergeCharList__431.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("Alice Macro"), AmplDefaultDiffManagerTest.toCharacters("Alice Wiki Macro (upgraded)"), AmplDefaultDiffManagerTest.toCharacters("Alice Extension"), null);
        int o_testMergeCharList__440 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__440)));
        int o_testMergeCharList__443 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__443)));
        int o_testMergeCharList__446 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__446)));
        int o_testMergeCharList__449 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__449)));
        int o_testMergeCharList__452 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__452)));
        int o_testMergeCharList__455 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__455)));
        int o_testMergeCharList__458 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__458)));
        int o_testMergeCharList__461 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__461)));
        int o_testMergeCharList__464 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__464)));
        int o_testMergeCharList__467 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__467)));
        int o_testMergeCharList__470 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__470)));
        int o_testMergeCharList__473 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__473)));
        List<Character> o_testMergeCharList__476 = AmplDefaultDiffManagerTest.toCharacters("Alice Wiki Extension (upgraded)");
        Assert.assertTrue(o_testMergeCharList__476.contains('A'));
        Assert.assertTrue(o_testMergeCharList__476.contains('l'));
        Assert.assertTrue(o_testMergeCharList__476.contains('i'));
        Assert.assertTrue(o_testMergeCharList__476.contains('c'));
        Assert.assertTrue(o_testMergeCharList__476.contains('e'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("$a(b)"), AmplDefaultDiffManagerTest.toCharacters("$c(d)e"), AmplDefaultDiffManagerTest.toCharacters("$c(d)e"), null);
        int o_testMergeCharList__484 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__484)));
        int o_testMergeCharList__487 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__487)));
        int o_testMergeCharList__490 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__490)));
        int o_testMergeCharList__493 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__493)));
        int o_testMergeCharList__496 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__496)));
        int o_testMergeCharList__499 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__499)));
        int o_testMergeCharList__502 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__502)));
        int o_testMergeCharList__505 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__505)));
        int o_testMergeCharList__508 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__508)));
        int o_testMergeCharList__511 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__511)));
        int o_testMergeCharList__514 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__514)));
        int o_testMergeCharList__517 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__517)));
        int o_testMergeCharList__520 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharList__520)));
        String o_testMergeCharList__523 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("$c(d)e", o_testMergeCharList__523);
        Assert.assertEquals(1, ((int) (o_testMergeCharList__9)));
        Assert.assertTrue(o_testMergeCharList__12.contains('b'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__21)));
        Assert.assertTrue(o_testMergeCharList__24.contains('a'));
        Assert.assertTrue(o_testMergeCharList__24.contains('b'));
        Assert.assertTrue(o_testMergeCharList__24.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__33)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__36)));
        Assert.assertTrue(o_testMergeCharList__39.contains('a'));
        Assert.assertTrue(o_testMergeCharList__39.contains('b'));
        Assert.assertTrue(o_testMergeCharList__39.contains('c'));
        Assert.assertTrue(o_testMergeCharList__41.contains('a'));
        Assert.assertTrue(o_testMergeCharList__41.contains('b'));
        Assert.assertTrue(o_testMergeCharList__41.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__50)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__53)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__56)));
        Assert.assertTrue(o_testMergeCharList__59.contains('a'));
        Assert.assertTrue(o_testMergeCharList__59.contains('b'));
        Assert.assertTrue(o_testMergeCharList__59.contains('c'));
        Assert.assertTrue(o_testMergeCharList__61.contains('a'));
        Assert.assertTrue(o_testMergeCharList__61.contains('b'));
        Assert.assertTrue(o_testMergeCharList__61.contains('c'));
        Assert.assertTrue(o_testMergeCharList__63.contains('a'));
        Assert.assertTrue(o_testMergeCharList__63.contains('b'));
        Assert.assertTrue(o_testMergeCharList__63.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__72)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__75)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__78)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__81)));
        Assert.assertTrue(o_testMergeCharList__84.contains('a'));
        Assert.assertTrue(o_testMergeCharList__84.contains('b'));
        Assert.assertTrue(o_testMergeCharList__84.contains('c'));
        Assert.assertTrue(o_testMergeCharList__86.contains('a'));
        Assert.assertTrue(o_testMergeCharList__86.contains('b'));
        Assert.assertTrue(o_testMergeCharList__86.contains('c'));
        Assert.assertTrue(o_testMergeCharList__88.contains('a'));
        Assert.assertTrue(o_testMergeCharList__88.contains('b'));
        Assert.assertTrue(o_testMergeCharList__88.contains('c'));
        Assert.assertTrue(o_testMergeCharList__90.contains('a'));
        Assert.assertTrue(o_testMergeCharList__90.contains('b'));
        Assert.assertTrue(o_testMergeCharList__90.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__99)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__102)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__105)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__108)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__111)));
        Assert.assertTrue(o_testMergeCharList__114.contains('a'));
        Assert.assertTrue(o_testMergeCharList__114.contains('b'));
        Assert.assertTrue(o_testMergeCharList__114.contains('c'));
        Assert.assertTrue(o_testMergeCharList__116.contains('a'));
        Assert.assertTrue(o_testMergeCharList__116.contains('b'));
        Assert.assertTrue(o_testMergeCharList__116.contains('c'));
        Assert.assertTrue(o_testMergeCharList__118.contains('a'));
        Assert.assertTrue(o_testMergeCharList__118.contains('b'));
        Assert.assertTrue(o_testMergeCharList__118.contains('c'));
        Assert.assertTrue(o_testMergeCharList__120.contains('a'));
        Assert.assertTrue(o_testMergeCharList__120.contains('b'));
        Assert.assertTrue(o_testMergeCharList__120.contains('c'));
        Assert.assertTrue(o_testMergeCharList__122.contains('a'));
        Assert.assertTrue(o_testMergeCharList__122.contains('b'));
        Assert.assertTrue(o_testMergeCharList__122.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__131)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__134)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__137)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__140)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__143)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__146)));
        Assert.assertTrue(o_testMergeCharList__149.contains('a'));
        Assert.assertTrue(o_testMergeCharList__149.contains('i'));
        Assert.assertTrue(o_testMergeCharList__149.contains('b'));
        Assert.assertTrue(o_testMergeCharList__149.contains('c'));
        Assert.assertTrue(o_testMergeCharList__149.contains('j'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__157)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__160)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__163)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__166)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__169)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__172)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__175)));
        Assert.assertTrue(o_testMergeCharList__178.contains('a'));
        Assert.assertTrue(o_testMergeCharList__178.contains('i'));
        Assert.assertTrue(o_testMergeCharList__178.contains('b'));
        Assert.assertTrue(o_testMergeCharList__178.contains('c'));
        Assert.assertTrue(o_testMergeCharList__178.contains('j'));
        Assert.assertTrue(o_testMergeCharList__180.contains('a'));
        Assert.assertTrue(o_testMergeCharList__180.contains('i'));
        Assert.assertTrue(o_testMergeCharList__180.contains('b'));
        Assert.assertTrue(o_testMergeCharList__180.contains('c'));
        Assert.assertTrue(o_testMergeCharList__180.contains('j'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__188)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__191)));
        Assert.assertTrue(o_testMergeCharList__194.contains('a'));
        Assert.assertTrue(o_testMergeCharList__194.contains('j'));
        Assert.assertTrue(o_testMergeCharList__194.contains('i'));
        Assert.assertTrue(o_testMergeCharList__194.contains('b'));
        Assert.assertTrue(o_testMergeCharList__194.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__202)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__205)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__208)));
        Assert.assertTrue(o_testMergeCharList__211.contains('a'));
        Assert.assertTrue(o_testMergeCharList__211.contains('i'));
        Assert.assertTrue(o_testMergeCharList__211.contains('j'));
        Assert.assertTrue(o_testMergeCharList__211.contains('b'));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__219)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__222)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__225)));
        Assert.assertEquals(1, ((int) (o_testMergeCharList__228)));
        Assert.assertTrue(o_testMergeCharList__231.contains('a'));
        Assert.assertTrue(o_testMergeCharList__231.contains('i'));
        Assert.assertTrue(o_testMergeCharList__231.contains('j'));
        Assert.assertTrue(o_testMergeCharList__231.contains('b'));
        Assert.assertTrue(o_testMergeCharList__233.contains('a'));
        Assert.assertTrue(o_testMergeCharList__233.contains('i'));
        Assert.assertTrue(o_testMergeCharList__233.contains('j'));
        Assert.assertTrue(o_testMergeCharList__233.contains('b'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__241)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__244)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__247)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__250)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__253)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__256)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__259)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__262)));
        Assert.assertTrue(o_testMergeCharList__265.contains('a'));
        Assert.assertTrue(o_testMergeCharList__265.contains('b'));
        Assert.assertTrue(o_testMergeCharList__265.contains('c'));
        Assert.assertTrue(o_testMergeCharList__267.contains('a'));
        Assert.assertTrue(o_testMergeCharList__267.contains('b'));
        Assert.assertTrue(o_testMergeCharList__267.contains('c'));
        Assert.assertTrue(o_testMergeCharList__269.contains('a'));
        Assert.assertTrue(o_testMergeCharList__269.contains('b'));
        Assert.assertTrue(o_testMergeCharList__269.contains('c'));
        Assert.assertTrue(o_testMergeCharList__271.contains('a'));
        Assert.assertTrue(o_testMergeCharList__271.contains('b'));
        Assert.assertTrue(o_testMergeCharList__271.contains('c'));
        Assert.assertTrue(o_testMergeCharList__273.contains('a'));
        Assert.assertTrue(o_testMergeCharList__273.contains('b'));
        Assert.assertTrue(o_testMergeCharList__273.contains('c'));
        Assert.assertTrue(o_testMergeCharList__275.contains('a'));
        Assert.assertTrue(o_testMergeCharList__275.contains('b'));
        Assert.assertTrue(o_testMergeCharList__275.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__283)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__286)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__289)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__292)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__295)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__298)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__301)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__304)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__307)));
        Assert.assertTrue(o_testMergeCharList__310.contains('a'));
        Assert.assertTrue(o_testMergeCharList__310.contains('b'));
        Assert.assertTrue(o_testMergeCharList__310.contains('c'));
        Assert.assertTrue(o_testMergeCharList__312.contains('a'));
        Assert.assertTrue(o_testMergeCharList__312.contains('b'));
        Assert.assertTrue(o_testMergeCharList__312.contains('c'));
        Assert.assertTrue(o_testMergeCharList__314.contains('a'));
        Assert.assertTrue(o_testMergeCharList__314.contains('b'));
        Assert.assertTrue(o_testMergeCharList__314.contains('c'));
        Assert.assertTrue(o_testMergeCharList__316.contains('a'));
        Assert.assertTrue(o_testMergeCharList__316.contains('b'));
        Assert.assertTrue(o_testMergeCharList__316.contains('c'));
        Assert.assertTrue(o_testMergeCharList__318.contains('a'));
        Assert.assertTrue(o_testMergeCharList__318.contains('b'));
        Assert.assertTrue(o_testMergeCharList__318.contains('c'));
        Assert.assertTrue(o_testMergeCharList__320.contains('a'));
        Assert.assertTrue(o_testMergeCharList__320.contains('b'));
        Assert.assertTrue(o_testMergeCharList__320.contains('c'));
        Assert.assertTrue(o_testMergeCharList__322.contains('a'));
        Assert.assertTrue(o_testMergeCharList__322.contains('b'));
        Assert.assertTrue(o_testMergeCharList__322.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__330)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__333)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__336)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__339)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__342)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__345)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__348)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__351)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__354)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__357)));
        Assert.assertTrue(o_testMergeCharList__360.contains('a'));
        Assert.assertTrue(o_testMergeCharList__360.contains('b'));
        Assert.assertTrue(o_testMergeCharList__360.contains('c'));
        Assert.assertTrue(o_testMergeCharList__362.contains('a'));
        Assert.assertTrue(o_testMergeCharList__362.contains('b'));
        Assert.assertTrue(o_testMergeCharList__362.contains('c'));
        Assert.assertTrue(o_testMergeCharList__364.contains('a'));
        Assert.assertTrue(o_testMergeCharList__364.contains('b'));
        Assert.assertTrue(o_testMergeCharList__364.contains('c'));
        Assert.assertTrue(o_testMergeCharList__366.contains('a'));
        Assert.assertTrue(o_testMergeCharList__366.contains('b'));
        Assert.assertTrue(o_testMergeCharList__366.contains('c'));
        Assert.assertTrue(o_testMergeCharList__368.contains('a'));
        Assert.assertTrue(o_testMergeCharList__368.contains('b'));
        Assert.assertTrue(o_testMergeCharList__368.contains('c'));
        Assert.assertTrue(o_testMergeCharList__370.contains('a'));
        Assert.assertTrue(o_testMergeCharList__370.contains('b'));
        Assert.assertTrue(o_testMergeCharList__370.contains('c'));
        Assert.assertTrue(o_testMergeCharList__372.contains('a'));
        Assert.assertTrue(o_testMergeCharList__372.contains('b'));
        Assert.assertTrue(o_testMergeCharList__372.contains('c'));
        Assert.assertTrue(o_testMergeCharList__374.contains('a'));
        Assert.assertTrue(o_testMergeCharList__374.contains('b'));
        Assert.assertTrue(o_testMergeCharList__374.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__382)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__385)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__388)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__391)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__394)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__397)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__400)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__403)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__406)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__409)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__412)));
        Assert.assertTrue(o_testMergeCharList__415.contains('a'));
        Assert.assertTrue(o_testMergeCharList__415.contains('b'));
        Assert.assertTrue(o_testMergeCharList__415.contains('c'));
        Assert.assertTrue(o_testMergeCharList__417.contains('a'));
        Assert.assertTrue(o_testMergeCharList__417.contains('b'));
        Assert.assertTrue(o_testMergeCharList__417.contains('c'));
        Assert.assertTrue(o_testMergeCharList__419.contains('a'));
        Assert.assertTrue(o_testMergeCharList__419.contains('b'));
        Assert.assertTrue(o_testMergeCharList__419.contains('c'));
        Assert.assertTrue(o_testMergeCharList__421.contains('a'));
        Assert.assertTrue(o_testMergeCharList__421.contains('b'));
        Assert.assertTrue(o_testMergeCharList__421.contains('c'));
        Assert.assertTrue(o_testMergeCharList__423.contains('a'));
        Assert.assertTrue(o_testMergeCharList__423.contains('b'));
        Assert.assertTrue(o_testMergeCharList__423.contains('c'));
        Assert.assertTrue(o_testMergeCharList__425.contains('a'));
        Assert.assertTrue(o_testMergeCharList__425.contains('b'));
        Assert.assertTrue(o_testMergeCharList__425.contains('c'));
        Assert.assertTrue(o_testMergeCharList__427.contains('a'));
        Assert.assertTrue(o_testMergeCharList__427.contains('b'));
        Assert.assertTrue(o_testMergeCharList__427.contains('c'));
        Assert.assertTrue(o_testMergeCharList__429.contains('a'));
        Assert.assertTrue(o_testMergeCharList__429.contains('b'));
        Assert.assertTrue(o_testMergeCharList__429.contains('c'));
        Assert.assertTrue(o_testMergeCharList__431.contains('a'));
        Assert.assertTrue(o_testMergeCharList__431.contains('b'));
        Assert.assertTrue(o_testMergeCharList__431.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__440)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__443)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__446)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__449)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__452)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__455)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__458)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__461)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__464)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__467)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__470)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__473)));
        Assert.assertTrue(o_testMergeCharList__476.contains('A'));
        Assert.assertTrue(o_testMergeCharList__476.contains('l'));
        Assert.assertTrue(o_testMergeCharList__476.contains('i'));
        Assert.assertTrue(o_testMergeCharList__476.contains('c'));
        Assert.assertTrue(o_testMergeCharList__476.contains('e'));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__484)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__487)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__490)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__493)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__496)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__499)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__502)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__505)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__508)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__511)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__514)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__517)));
        Assert.assertEquals(0, ((int) (o_testMergeCharList__520)));
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull330321() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull330321__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330321__9)));
        List<Character> o_testMergeCharOnConflictsnull330321__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull330321__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull330321__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__21)));
        int o_testMergeCharOnConflictsnull330321__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__24)));
        String o_testMergeCharOnConflictsnull330321__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330321__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull330321__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__36)));
        int o_testMergeCharOnConflictsnull330321__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__39)));
        int o_testMergeCharOnConflictsnull330321__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__42)));
        String o_testMergeCharOnConflictsnull330321__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330321__45);
        String o_testMergeCharOnConflictsnull330321__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330321__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull330321__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__56)));
        int o_testMergeCharOnConflictsnull330321__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__59)));
        int o_testMergeCharOnConflictsnull330321__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__62)));
        int o_testMergeCharOnConflictsnull330321__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__65)));
        String o_testMergeCharOnConflictsnull330321__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330321__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull330321__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__77)));
        int o_testMergeCharOnConflictsnull330321__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__80)));
        int o_testMergeCharOnConflictsnull330321__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__83)));
        int o_testMergeCharOnConflictsnull330321__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__86)));
        int o_testMergeCharOnConflictsnull330321__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__89)));
        String o_testMergeCharOnConflictsnull330321__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330321__92);
        String o_testMergeCharOnConflictsnull330321__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330321__94);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330321__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull330321__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330321__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330321__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330321__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330321__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330321__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330321__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull330334() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull330334__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__9)));
        List<Character> o_testMergeCharOnConflictsnull330334__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull330334__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull330334__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__21)));
        int o_testMergeCharOnConflictsnull330334__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__24)));
        String o_testMergeCharOnConflictsnull330334__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330334__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull330334__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__36)));
        int o_testMergeCharOnConflictsnull330334__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__39)));
        int o_testMergeCharOnConflictsnull330334__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__42)));
        String o_testMergeCharOnConflictsnull330334__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330334__45);
        String o_testMergeCharOnConflictsnull330334__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330334__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull330334__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__56)));
        int o_testMergeCharOnConflictsnull330334__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__59)));
        int o_testMergeCharOnConflictsnull330334__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__62)));
        int o_testMergeCharOnConflictsnull330334__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__65)));
        String o_testMergeCharOnConflictsnull330334__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330334__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull330334__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__77)));
        int o_testMergeCharOnConflictsnull330334__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__80)));
        int o_testMergeCharOnConflictsnull330334__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__83)));
        int o_testMergeCharOnConflictsnull330334__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__86)));
        int o_testMergeCharOnConflictsnull330334__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__89)));
        String o_testMergeCharOnConflictsnull330334__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflictsnull330334__92);
        String o_testMergeCharOnConflictsnull330334__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflictsnull330334__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull330334__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330334__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330334__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330334__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330334__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330334__68);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__77)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__80)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__83)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__86)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330334__89)));
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflictsnull330334__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull330325() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull330325__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__9)));
        List<Character> o_testMergeCharOnConflictsnull330325__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull330325__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull330325__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330325__21)));
        int o_testMergeCharOnConflictsnull330325__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330325__24)));
        String o_testMergeCharOnConflictsnull330325__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflictsnull330325__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull330325__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__36)));
        int o_testMergeCharOnConflictsnull330325__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__39)));
        int o_testMergeCharOnConflictsnull330325__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__42)));
        String o_testMergeCharOnConflictsnull330325__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330325__45);
        String o_testMergeCharOnConflictsnull330325__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330325__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull330325__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__56)));
        int o_testMergeCharOnConflictsnull330325__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__59)));
        int o_testMergeCharOnConflictsnull330325__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__62)));
        int o_testMergeCharOnConflictsnull330325__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__65)));
        String o_testMergeCharOnConflictsnull330325__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330325__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull330325__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__77)));
        int o_testMergeCharOnConflictsnull330325__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__80)));
        int o_testMergeCharOnConflictsnull330325__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__83)));
        int o_testMergeCharOnConflictsnull330325__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__86)));
        int o_testMergeCharOnConflictsnull330325__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__89)));
        String o_testMergeCharOnConflictsnull330325__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330325__92);
        String o_testMergeCharOnConflictsnull330325__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330325__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull330325__12.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330325__21)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330325__24)));
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflictsnull330325__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330325__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330325__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330325__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330325__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330325__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull330328() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull330328__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__9)));
        List<Character> o_testMergeCharOnConflictsnull330328__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull330328__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull330328__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__21)));
        int o_testMergeCharOnConflictsnull330328__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__24)));
        String o_testMergeCharOnConflictsnull330328__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330328__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull330328__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330328__36)));
        int o_testMergeCharOnConflictsnull330328__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330328__39)));
        int o_testMergeCharOnConflictsnull330328__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330328__42)));
        String o_testMergeCharOnConflictsnull330328__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull330328__45);
        String o_testMergeCharOnConflictsnull330328__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull330328__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull330328__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__56)));
        int o_testMergeCharOnConflictsnull330328__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__59)));
        int o_testMergeCharOnConflictsnull330328__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__62)));
        int o_testMergeCharOnConflictsnull330328__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__65)));
        String o_testMergeCharOnConflictsnull330328__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330328__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull330328__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__77)));
        int o_testMergeCharOnConflictsnull330328__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__80)));
        int o_testMergeCharOnConflictsnull330328__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__83)));
        int o_testMergeCharOnConflictsnull330328__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__86)));
        int o_testMergeCharOnConflictsnull330328__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__89)));
        String o_testMergeCharOnConflictsnull330328__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330328__92);
        String o_testMergeCharOnConflictsnull330328__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330328__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull330328__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330328__27);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330328__36)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330328__39)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330328__42)));
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull330328__45);
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflictsnull330328__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330328__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330328__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330328__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString330200() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString330200__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString330200__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330200__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330200__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__21)));
        int o_testMergeCharOnConflicts_literalMutationString330200__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__24)));
        String o_testMergeCharOnConflicts_literalMutationString330200__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflicts_literalMutationString330200__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330200__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__36)));
        int o_testMergeCharOnConflicts_literalMutationString330200__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__39)));
        int o_testMergeCharOnConflicts_literalMutationString330200__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__42)));
        String o_testMergeCharOnConflicts_literalMutationString330200__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330200__45);
        String o_testMergeCharOnConflicts_literalMutationString330200__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330200__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330200__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__56)));
        int o_testMergeCharOnConflicts_literalMutationString330200__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__59)));
        int o_testMergeCharOnConflicts_literalMutationString330200__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__62)));
        int o_testMergeCharOnConflicts_literalMutationString330200__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__65)));
        String o_testMergeCharOnConflicts_literalMutationString330200__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330200__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330200__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__77)));
        int o_testMergeCharOnConflicts_literalMutationString330200__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__80)));
        int o_testMergeCharOnConflicts_literalMutationString330200__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__83)));
        int o_testMergeCharOnConflicts_literalMutationString330200__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__86)));
        int o_testMergeCharOnConflicts_literalMutationString330200__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__89)));
        String o_testMergeCharOnConflicts_literalMutationString330200__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330200__92);
        String o_testMergeCharOnConflicts_literalMutationString330200__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330200__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330200__12.contains('c'));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__21)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__24)));
        Assert.assertEquals("azzyycd", o_testMergeCharOnConflicts_literalMutationString330200__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330200__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330200__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330200__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330200__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330200__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString330254() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString330254__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString330254__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330254__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330254__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__21)));
        int o_testMergeCharOnConflicts_literalMutationString330254__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__24)));
        String o_testMergeCharOnConflicts_literalMutationString330254__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330254__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330254__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__36)));
        int o_testMergeCharOnConflicts_literalMutationString330254__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__39)));
        int o_testMergeCharOnConflicts_literalMutationString330254__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__42)));
        String o_testMergeCharOnConflicts_literalMutationString330254__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330254__45);
        String o_testMergeCharOnConflicts_literalMutationString330254__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330254__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330254__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__56)));
        int o_testMergeCharOnConflicts_literalMutationString330254__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__59)));
        int o_testMergeCharOnConflicts_literalMutationString330254__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__62)));
        int o_testMergeCharOnConflicts_literalMutationString330254__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__65)));
        String o_testMergeCharOnConflicts_literalMutationString330254__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330254__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330254__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__77)));
        int o_testMergeCharOnConflicts_literalMutationString330254__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__80)));
        int o_testMergeCharOnConflicts_literalMutationString330254__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__83)));
        int o_testMergeCharOnConflicts_literalMutationString330254__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__86)));
        int o_testMergeCharOnConflicts_literalMutationString330254__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__89)));
        String o_testMergeCharOnConflicts_literalMutationString330254__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflicts_literalMutationString330254__92);
        String o_testMergeCharOnConflicts_literalMutationString330254__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflicts_literalMutationString330254__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330254__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330254__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330254__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330254__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330254__68);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__77)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__80)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__83)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__86)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330254__89)));
        Assert.assertEquals("arrbddddcc", o_testMergeCharOnConflicts_literalMutationString330254__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString330187() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString330187__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString330187__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330187__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330187__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__21)));
        int o_testMergeCharOnConflicts_literalMutationString330187__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__24)));
        String o_testMergeCharOnConflicts_literalMutationString330187__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330187__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330187__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__36)));
        int o_testMergeCharOnConflicts_literalMutationString330187__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__39)));
        int o_testMergeCharOnConflicts_literalMutationString330187__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__42)));
        String o_testMergeCharOnConflicts_literalMutationString330187__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330187__45);
        String o_testMergeCharOnConflicts_literalMutationString330187__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330187__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330187__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__56)));
        int o_testMergeCharOnConflicts_literalMutationString330187__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__59)));
        int o_testMergeCharOnConflicts_literalMutationString330187__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__62)));
        int o_testMergeCharOnConflicts_literalMutationString330187__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__65)));
        String o_testMergeCharOnConflicts_literalMutationString330187__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330187__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330187__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__77)));
        int o_testMergeCharOnConflicts_literalMutationString330187__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__80)));
        int o_testMergeCharOnConflicts_literalMutationString330187__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__83)));
        int o_testMergeCharOnConflicts_literalMutationString330187__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__86)));
        int o_testMergeCharOnConflicts_literalMutationString330187__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__89)));
        String o_testMergeCharOnConflicts_literalMutationString330187__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330187__92);
        String o_testMergeCharOnConflicts_literalMutationString330187__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330187__94);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330187__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330187__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330187__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330187__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330187__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330187__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330187__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString330235() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString330235__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString330235__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330235__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330235__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__21)));
        int o_testMergeCharOnConflicts_literalMutationString330235__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__24)));
        String o_testMergeCharOnConflicts_literalMutationString330235__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330235__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330235__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__36)));
        int o_testMergeCharOnConflicts_literalMutationString330235__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__39)));
        int o_testMergeCharOnConflicts_literalMutationString330235__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__42)));
        String o_testMergeCharOnConflicts_literalMutationString330235__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330235__45);
        String o_testMergeCharOnConflicts_literalMutationString330235__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330235__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330235__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__56)));
        int o_testMergeCharOnConflicts_literalMutationString330235__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__59)));
        int o_testMergeCharOnConflicts_literalMutationString330235__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__62)));
        int o_testMergeCharOnConflicts_literalMutationString330235__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__65)));
        String o_testMergeCharOnConflicts_literalMutationString330235__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflicts_literalMutationString330235__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330235__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__77)));
        int o_testMergeCharOnConflicts_literalMutationString330235__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__80)));
        int o_testMergeCharOnConflicts_literalMutationString330235__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__83)));
        int o_testMergeCharOnConflicts_literalMutationString330235__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__86)));
        int o_testMergeCharOnConflicts_literalMutationString330235__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__89)));
        String o_testMergeCharOnConflicts_literalMutationString330235__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330235__92);
        String o_testMergeCharOnConflicts_literalMutationString330235__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330235__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330235__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330235__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330235__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330235__47);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__56)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__59)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__62)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__65)));
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflicts_literalMutationString330235__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330235__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330235__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflicts_literalMutationString330217() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflicts_literalMutationString330217__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__9)));
        List<Character> o_testMergeCharOnConflicts_literalMutationString330217__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330217__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330217__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__21)));
        int o_testMergeCharOnConflicts_literalMutationString330217__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__24)));
        String o_testMergeCharOnConflicts_literalMutationString330217__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330217__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(""), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflicts_literalMutationString330217__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__36)));
        int o_testMergeCharOnConflicts_literalMutationString330217__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__39)));
        int o_testMergeCharOnConflicts_literalMutationString330217__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__42)));
        String o_testMergeCharOnConflicts_literalMutationString330217__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString330217__45);
        String o_testMergeCharOnConflicts_literalMutationString330217__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString330217__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330217__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__56)));
        int o_testMergeCharOnConflicts_literalMutationString330217__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__59)));
        int o_testMergeCharOnConflicts_literalMutationString330217__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__62)));
        int o_testMergeCharOnConflicts_literalMutationString330217__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__65)));
        String o_testMergeCharOnConflicts_literalMutationString330217__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330217__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflicts_literalMutationString330217__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__77)));
        int o_testMergeCharOnConflicts_literalMutationString330217__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__80)));
        int o_testMergeCharOnConflicts_literalMutationString330217__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__83)));
        int o_testMergeCharOnConflicts_literalMutationString330217__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__86)));
        int o_testMergeCharOnConflicts_literalMutationString330217__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__89)));
        String o_testMergeCharOnConflicts_literalMutationString330217__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330217__92);
        String o_testMergeCharOnConflicts_literalMutationString330217__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330217__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__9)));
        Assert.assertTrue(o_testMergeCharOnConflicts_literalMutationString330217__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflicts_literalMutationString330217__27);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__36)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__39)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__42)));
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString330217__45);
        Assert.assertEquals("yycazzd", o_testMergeCharOnConflicts_literalMutationString330217__47);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__56)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__59)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__62)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__65)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330217__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflicts_literalMutationString330217__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflicts_literalMutationString330217__92);
    }

    @Test(timeout = 10000)
    public void testMergeCharOnConflictsnull330331() throws Exception {
        MergeResult<Character> result;
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("a"), AmplDefaultDiffManagerTest.toCharacters("b"), AmplDefaultDiffManagerTest.toCharacters("c"), null);
        int o_testMergeCharOnConflictsnull330331__9 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__9)));
        List<Character> o_testMergeCharOnConflictsnull330331__12 = AmplDefaultDiffManagerTest.toCharacters("c");
        Assert.assertTrue(o_testMergeCharOnConflictsnull330331__12.contains('c'));
        result.getMerged();
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), null);
        int o_testMergeCharOnConflictsnull330331__21 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__21)));
        int o_testMergeCharOnConflictsnull330331__24 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__24)));
        String o_testMergeCharOnConflictsnull330331__27 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330331__27);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("abcd"), AmplDefaultDiffManagerTest.toCharacters("azzd"), AmplDefaultDiffManagerTest.toCharacters("yycd"), null);
        int o_testMergeCharOnConflictsnull330331__36 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__36)));
        int o_testMergeCharOnConflictsnull330331__39 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__39)));
        int o_testMergeCharOnConflictsnull330331__42 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__42)));
        String o_testMergeCharOnConflictsnull330331__45 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330331__45);
        String o_testMergeCharOnConflictsnull330331__47 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330331__47);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters(null), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), null);
        int o_testMergeCharOnConflictsnull330331__56 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__56)));
        int o_testMergeCharOnConflictsnull330331__59 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__59)));
        int o_testMergeCharOnConflictsnull330331__62 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__62)));
        int o_testMergeCharOnConflictsnull330331__65 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__65)));
        String o_testMergeCharOnConflictsnull330331__68 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflictsnull330331__68);
        result = this.mocker.getComponentUnderTest().merge(AmplDefaultDiffManagerTest.toCharacters("aabbcc"), AmplDefaultDiffManagerTest.toCharacters("ddddcc"), AmplDefaultDiffManagerTest.toCharacters("arrbcc"), null);
        int o_testMergeCharOnConflictsnull330331__77 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__77)));
        int o_testMergeCharOnConflictsnull330331__80 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__80)));
        int o_testMergeCharOnConflictsnull330331__83 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__83)));
        int o_testMergeCharOnConflictsnull330331__86 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__86)));
        int o_testMergeCharOnConflictsnull330331__89 = result.getLog().getLogs(LogLevel.ERROR).size();
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__89)));
        String o_testMergeCharOnConflictsnull330331__92 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330331__92);
        String o_testMergeCharOnConflictsnull330331__94 = AmplDefaultDiffManagerTest.toString(result.getMerged());
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330331__94);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__9)));
        Assert.assertTrue(o_testMergeCharOnConflictsnull330331__12.contains('c'));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__21)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__24)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330331__27);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__36)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__39)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__42)));
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330331__45);
        Assert.assertEquals("yycd", o_testMergeCharOnConflictsnull330331__47);
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__56)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__59)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__62)));
        Assert.assertEquals(0, ((int) (o_testMergeCharOnConflictsnull330331__65)));
        Assert.assertEquals("ddddarrbcc", o_testMergeCharOnConflictsnull330331__68);
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__77)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__80)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__83)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__86)));
        Assert.assertEquals(1, ((int) (o_testMergeCharOnConflictsnull330331__89)));
        Assert.assertEquals("ddddcc", o_testMergeCharOnConflictsnull330331__92);
    }
}

