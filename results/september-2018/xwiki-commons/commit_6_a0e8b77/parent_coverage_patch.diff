diff --git a/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java b/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java
index e804aec..f9bad1f 100644
--- a/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java
+++ b/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java
@@ -185,17 +185,6 @@
 
         mergeResult.setMerged(merged);
 
-        // It does not make sense to merge if the user has manually removed all the content that was previously there.
-        // It means she has probably customized the elements, and a merge would be a pain to her.
-        if (userHasRemovedAllPreviousContent(commonAncestor, patchCurrent)) {
-            Delta<E> deltaNext = nextElement(patchNext);
-            Delta<E> deltaCurrent = nextElement(patchCurrent);
-
-            logConflict(mergeResult, deltaCurrent, deltaNext);
-            fallback(commonAncestor, deltaNext, deltaCurrent, merged, 0, configuration);
-            return;
-        }
-
         Delta<E> deltaNext = nextElement(patchNext);
         Delta<E> deltaCurrent = nextElement(patchCurrent);
 
@@ -368,16 +357,4 @@
     {
         return delta != null && delta.getPrevious().getIndex() == index;
     }
-
-    /**
-     * Check if users has already replaced all the content of the previous version with its own content.
-     *
-     * @param <E> the type of compared elements
-     * @param commonAncestor previous version
-     * @param patchCurrent patch to the current version
-     * @return either or not the user has changed everything
-     */
-    private <E> boolean userHasRemovedAllPreviousContent(List commonAncestor, Patch<E> patchCurrent) {
-        return patchCurrent.size() == 1 && commonAncestor.size() == patchCurrent.get(0).getPrevious().size();
-    }
 }
diff --git a/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java b/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java
index 65d0aa7..3a6a7db 100644
--- a/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java
+++ b/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api/src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java
@@ -264,28 +264,28 @@ public void testMergeCharList() throws Exception
         Assert.assertEquals(toCharacters("aijb"), result.getMerged());
 
         result =
-            this.mocker.getComponentUnderTest().merge(toCharacters("d"), toCharacters("ab d"), toCharacters("abc d"), null);
+            this.mocker.getComponentUnderTest().merge(toCharacters(""), toCharacters("ab"), toCharacters("abc"), null);
 
         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());
-        Assert.assertEquals(toCharacters("abc d"), result.getMerged());
+        Assert.assertEquals(toCharacters("abc"), result.getMerged());
 
         result =
-            this.mocker.getComponentUnderTest().merge(toCharacters("d"), toCharacters("abc d"), toCharacters("ab d"), null);
+            this.mocker.getComponentUnderTest().merge(toCharacters(""), toCharacters("abc"), toCharacters("ab"), null);
 
         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());
-        Assert.assertEquals(toCharacters("abc d"), result.getMerged());
+        Assert.assertEquals(toCharacters("abc"), result.getMerged());
 
         result =
-            this.mocker.getComponentUnderTest().merge(toCharacters("d"), toCharacters("bcd"), toCharacters("abcd"), null);
+            this.mocker.getComponentUnderTest().merge(toCharacters(""), toCharacters("bc"), toCharacters("abc"), null);
 
         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());
-        Assert.assertEquals(toCharacters("abcd"), result.getMerged());
+        Assert.assertEquals(toCharacters("abc"), result.getMerged());
 
         result =
-            this.mocker.getComponentUnderTest().merge(toCharacters("d"), toCharacters("abcd"), toCharacters("bcd"), null);
+            this.mocker.getComponentUnderTest().merge(toCharacters(""), toCharacters("abc"), toCharacters("bc"), null);
 
         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());
-        Assert.assertEquals(toCharacters("abcd"), result.getMerged());
+        Assert.assertEquals(toCharacters("abc"), result.getMerged());
 
         // Misc
 
@@ -354,24 +354,4 @@ public void testMergeWithEmptyNew() throws Exception
         Assert.assertEquals(1, result.getLog().getLogs(LogLevel.ERROR).size());
         Assert.assertEquals(toCharacters("b"), result.getMerged());
     }
-
-    @Test
-    public void testMergeWhenUserHasChangedAllContent() throws Exception
-    {
-        MergeResult<String> result;
-
-        // Test 1: All content has changed between previous and current
-        result = mocker.getComponentUnderTest().merge(Arrays.asList("Line 1", "Line 2", "Line 3"),
-                Arrays.asList("Line 1", "Line 2 modified", "Line 3", "Line 4 Added"),
-                Arrays.asList("New content", "That is completely different"), null);
-
-        Assert.assertEquals(Arrays.asList("New content", "That is completely different"), result.getMerged());
-
-        // Test 2: All content has been deleted between previous and current
-        result = mocker.getComponentUnderTest().merge(Arrays.asList("Line 1", "Line 2", "Line 3"),
-                Arrays.asList("Line 1", "Line 2 modified", "Line 3", "Line 4 Added"),
-                Collections.emptyList(), null);
-
-        Assert.assertEquals(Collections.emptyList(), result.getMerged());
-    }
 }
