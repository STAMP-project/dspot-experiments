diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 3739ab5..d54c4dc 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -23,7 +23,7 @@
   <body>
 
     <release version="1.4" date="tba" description="tba">
-      <action type="fix" dev="britter" issue="CLI-265" due-to="Martin Sandiford">
+      <action type="fix" dev="britter" issue="CLI-265">
         Optional argument picking up next regular option as its argument
       </action>
       <action type="add" dev="britter" issue="CLI-267" due-to="Ricardo Ribeiro">
diff --git a/src/main/java/org/apache/commons/cli/DefaultParser.java b/src/main/java/org/apache/commons/cli/DefaultParser.java
index 2cee432..f34173e 100644
--- a/src/main/java/org/apache/commons/cli/DefaultParser.java
+++ b/src/main/java/org/apache/commons/cli/DefaultParser.java
@@ -307,12 +307,7 @@ public class DefaultParser implements CommandLineParser
         // remove leading "-" and "=value"
         int pos = token.indexOf("=");
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        if (options.hasShortOption(optName))
-        {
-            return true;
-        }
-        // check for several concatenated short options
-        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
+        return options.hasShortOption(optName);
     }
 
     /**
diff --git a/src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java b/src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java
index eb05bb8..78ce239 100644
--- a/src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java
+++ b/src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java
@@ -27,7 +27,6 @@ import org.junit.Test;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotEquals;
-import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 
 /**
@@ -44,12 +43,10 @@ public class BugCLI265Test {
     public void setUp() throws Exception {
         parser = new DefaultParser();
 
-        Option optionT1 = Option.builder("t1").hasArg().numberOfArgs(1).optionalArg(true).argName("t1_path").build();
-        Option optionA = Option.builder("a").hasArg(false).build();
-        Option optionB = Option.builder("b").hasArg(false).build();
-        Option optionLast = Option.builder("last").hasArg(false).build();
+        Option TYPE1 = Option.builder("t1").hasArg().numberOfArgs(1).optionalArg(true).argName("t1_path").build();
+        Option LAST = Option.builder("last").hasArg(false).build();
 
-        options = new Options().addOption(optionT1).addOption(optionA).addOption(optionB).addOption(optionLast);
+        options = new Options().addOption(TYPE1).addOption(LAST);
     }
 
     @Test
@@ -73,16 +70,4 @@ public class BugCLI265Test {
         assertTrue("Second option has not been detected", commandLine.hasOption("last"));
     }
 
-    @Test
-    public void shouldParseConcatenatedShortOptions() throws Exception {
-        String[] concatenatedShortOptions = new String[] { "-t1", "-ab" };
-
-        final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);
-
-        assertTrue(commandLine.hasOption("t1"));
-        assertNull(commandLine.getOptionValue("t1"));
-        assertTrue(commandLine.hasOption("a"));
-        assertTrue(commandLine.hasOption("b"));
-        assertFalse(commandLine.hasOption("last"));
-    }
 }
